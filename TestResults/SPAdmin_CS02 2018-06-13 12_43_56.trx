<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="340f9386-9f57-4f6d-bd2f-b41cfb8f6600" name="SPAdmin@CS02 2018-06-13 12:43:56" runUser="CS\SPAdmin" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="879f9405-1edd-43f5-90cf-576a7ef84ea2">
    <Description>These are default test settings for a local test run.</Description>
    <Execution hostProcessPlatform="MSIL">
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="SPAdmin_CS02 2018-06-13 12_43_56" />
    <Properties>
      <Property name="TestSettingsUIType" value="LoadTest" />
    </Properties>
  </TestSettings>
  <Times creation="2018-06-13T12:43:56.6031158+01:00" queuing="2018-06-13T12:43:56.9101266+01:00" start="2018-06-13T12:43:57.0261531+01:00" finish="2018-06-13T12:44:16.5356303+01:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTest2" storage="c:\users\spadmin\source\repos\sploadtesting\sploadtesting\webtest2.webtest" id="602c7c08-f877-4c7e-a8db-a05baef9fe3f" persistedWebTest="">
      <Execution id="5c692227-4b52-42d8-b91e-7870583e8204" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="602c7c08-f877-4c7e-a8db-a05baef9fe3f" executionId="5c692227-4b52-42d8-b91e-7870583e8204" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="5c692227-4b52-42d8-b91e-7870583e8204" testId="602c7c08-f877-4c7e-a8db-a05baef9fe3f" testName="WebTest2" computerName="CS02" duration="00:00:08.3791868" startTime="2018-06-13T12:43:57.1901316+01:00" endTime="2018-06-13T12:44:16.2226393+01:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5c692227-4b52-42d8-b91e-7870583e8204">
      <Output>
        <ErrorInfo>
          <Message>5 primary requests, 1 dependant requests and 0 conditional rules failed</Message>
        </ErrorInfo>
      </Output>
      <ResultFiles>
        <ResultFile path="WebTest2.webtestResult" />
      </ResultFiles>
      <TestSettings name="Local" id="879f9405-1edd-43f5-90cf-576a7ef84ea2">
        <Description>These are default test settings for a local test run.</Description>
        <Execution hostProcessPlatform="MSIL">
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Deployment runDeploymentRoot="SPAdmin_CS02 2018-06-13 12_43_56" />
        <Properties>
          <Property name="TestSettingsUIType" value="LoadTest" />
        </Properties>
      </TestSettings>
      <WebTestResultFilePath>SPAdmin_CS02 2018-06-13 12_43_56\In\5c692227-4b52-42d8-b91e-7870583e8204\WebTest2.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>