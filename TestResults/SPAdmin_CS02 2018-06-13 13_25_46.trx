<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="804a3f8c-f241-4fb4-bb59-6e3ba9f3c7be" name="SPAdmin@CS02 2018-06-13 13:25:46" runUser="CS\SPAdmin" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="879f9405-1edd-43f5-90cf-576a7ef84ea2">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment runDeploymentRoot="SPAdmin_CS02 2018-06-13 13_25_46">
      <DeploymentItem filename="SPLoadTesting\File for the version 3.xlsx" />
      <DeploymentItem filename="SPLoadTesting\File for the version 1.xlsx" />
      <DeploymentItem filename="SPLoadTesting\File for the version 2.xlsx" />
    </Deployment>
    <Execution hostProcessPlatform="MSIL">
      <TestTypeSpecific>
        <UnitTestRunConfig testTypeId="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b">
          <AssemblyResolution>
            <TestDirectory useLoadContext="true" />
          </AssemblyResolution>
        </UnitTestRunConfig>
        <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
          <Browser name="Internet Explorer 9.0" MaxConnections="6">
            <Headers>
              <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
              <Header name="Accept" value="*/*" />
              <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
              <Header name="Accept-Encoding" value="GZIP" />
            </Headers>
          </Browser>
        </WebTestRunConfiguration>
      </TestTypeSpecific>
      <AgentRule name="LocalMachineDefaultRole">
      </AgentRule>
    </Execution>
    <Properties>
      <Property name="TestSettingsUIType" value="LoadTest" />
    </Properties>
  </TestSettings>
  <Times creation="2018-06-13T13:25:46.3307139+01:00" queuing="2018-06-13T13:25:46.7826851+01:00" start="2018-06-13T13:25:47.0306859+01:00" finish="2018-06-13T13:26:22.3099916+01:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTest1" storage="c:\users\spadmin\source\repos\sploadtesting\sploadtesting\webtest1.webtest" id="72e94015-d169-4fde-a50c-c971e427402e" persistedWebTest="﻿<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<WebTest Name="WebTest1" Id="72e94015-d169-4fde-a50c-c971e427402e" Owner="" Priority="2147483647" Enabled="True" CssProjectStructure="" CssIteration="" Timeout="0" WorkItemIds="" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010" Description="" CredentialUserName="" CredentialPassword="" PreAuthenticate="True" Proxy="default" StopOnError="False" RecordedResultFile="WebTest1.4faf0a56-dbdc-4518-8e9a-65a31cca264c.rec.webtestresult" ResultsLocale="">
  <Items>
    <Request Method="GET" Guid="dcbf95bf-9c2d-45af-8bc6-d87b6a2627ea" Version="1.1" Url="https://sp.cordissolutions.com/" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="https://sp.cordissolutions.com/Pages/home.aspx" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="GET" Guid="908732b0-4431-4c19-9c8e-6cdabc374038" Version="1.1" Url="https://sp.cordissolutions.com/_api/Microsoft.SharePoint.Portal.SuiteNavData.GetSuiteNavData" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Content-Type" Value="application/x-www-form-urlencoded" />
            <Header Name="ACCEPT" Value="application/json; odata = verbose" />
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Pages/home.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="v" Value="2" RecordedValue="2" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="Locale" Value="en-US" RecordedValue="en-US" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
          <FormPostHttpBody />
        </Request>
        <Request Method="GET" Guid="8122b829-1e33-455f-ad77-dec9c74cd202" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/shellicons.eot" ThinkTime="4" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Pages/home.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
      </DependentRequests>
    </Request>
    <Request Method="GET" Guid="8d213520-5bed-4b10-a228-7dd7c828f346" Version="1.1" Url="https://sp.cordissolutions.com/library" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="https://sp.cordissolutions.com/library/Pages/Default.aspx" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="GET" Guid="6a2aab21-5a0a-421e-bd5e-84226d350589" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/shellicons.eot" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/library/Pages/Default.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
      </DependentRequests>
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Pages/home.aspx" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="dc31dc85-483a-411e-a7f3-8b40f889bc82" Version="1.1" Url="https://sp.cordissolutions.com/HR" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="https://sp.cordissolutions.com/HR/Pages/default.aspx" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="GET" Guid="c982522c-faa4-48af-a33e-417dc79c5690" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/shellicons.eot" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/HR/Pages/default.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
      </DependentRequests>
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/library/Pages/Default.aspx" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="7f99340f-2a7f-4983-8ef5-c3c116bf827d" Version="1.1" Url="https://sp.cordissolutions.com/Apps00" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="https://sp.cordissolutions.com/Apps00/Pages/Default.aspx" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="GET" Guid="cf48f47f-bce9-48f2-812d-582e1edb538e" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/shellicons.eot" ThinkTime="2" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Pages/Default.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
      </DependentRequests>
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/HR/Pages/default.aspx" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="eec6c72d-0a3f-426a-b670-0ed9f79b908e" Version="1.1" Url="https://sp.cordissolutions.com/prodel01" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="https://sp.cordissolutions.com/prodel01/Pages/Default.aspx" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="GET" Guid="5eba58b8-8b29-435a-b795-bc4020d0b97c" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/shellicons.eot" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/prodel01/Pages/Default.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
      </DependentRequests>
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Pages/Default.aspx" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="b55fcaa1-980e-4bba-8e22-a1b21ff2d01c" Version="1.1" Url="https://sp.cordissolutions.com/marketing01" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="https://sp.cordissolutions.com/marketing01/Pages/Default.aspx" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="GET" Guid="cc69893f-c470-4567-87e5-0142610951f1" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/shellicons.eot" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/marketing01/Pages/Default.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
      </DependentRequests>
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/prodel01/Pages/Default.aspx" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="0c899619-1e7b-406b-8e06-d88fced8e3b0" Version="1.1" Url="https://sp.cordissolutions.com/support" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="https://sp.cordissolutions.com/support/Pages/Default.aspx" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/marketing01/Pages/Default.aspx" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="89d98432-f800-4d40-b4d9-158b80064a77" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/shellicons.eot" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/support/Pages/Default.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="c31292f9-10f4-4e6a-b9fb-e8ea450a62a1" Version="1.1" Url="https://sp.cordissolutions.com/admfin" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="https://sp.cordissolutions.com/admfin/Pages/Default.aspx" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="GET" Guid="7ea99194-e2a9-40a6-8b0c-d6e4d0b43a61" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/shellicons.eot" ThinkTime="2" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/admfin/Pages/Default.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
      </DependentRequests>
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/support/Pages/Default.aspx" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="3733b8cd-c707-4217-a211-b55b85831957" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/support/Pages/Default.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="823b4262-407d-4b21-8451-172e1bb0b419" Version="1.1" Url="https://sp.cordissolutions.com/Apps00" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="https://sp.cordissolutions.com/Apps00/Pages/Default.aspx" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="GET" Guid="12189e6e-204f-4a16-b725-637c5fc9e55a" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/shellicons.eot" ThinkTime="3" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Pages/Default.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
      </DependentRequests>
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/admfin/Pages/Default.aspx" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="afe67260-a07c-42c8-a14b-f84f1f5c7ea5" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx#InplviewHash126715b7-b5f8-4adb-8a3a-a94d208c20a5=FilterField1%3DApplication-FilterValue1%3DmyMaterial" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Pages/Default.aspx" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam49.__REQUESTDIGEST" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="11" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam50.__VIEWSTATE" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="23" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam52.__EVENTVALIDATION" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="27" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam1.ctl00$ctl44$ctl04" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="d = &quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;;_sp" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam28.ctl00$PlaceHolderMain$UploadDocumentSection$ctl05$OverwriteSingle" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ble=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; ari" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam51.__VIEWSTATEGENERATOR" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="24" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam53.ctl00$ctl44$ctl04" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="d = &quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;;_sp" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
    </Request>
    <Request Method="GET" Guid="dda7792d-3306-4cdc-87f2-1080caa6ab9a" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/shellicons.eot" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="847bb4ee-c93b-47b8-8982-63cb8138841d" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/Office365Icons.eot" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="6a89b14b-d1c4-4559-b3a5-adb2fb6ce8c0" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_api/search/searchcenterurl" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Accept" Value="application/json;odata=verbose" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="db0168a2-7b25-404e-8d24-46cb5cf080ae" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="6b751e0e-c4b9-4067-8c5e-d4eee54a88d7" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="POST" Guid="851a7794-b7d8-4dc3-9af3-c53d6c54cb09" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/inplview.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="List" Value="%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D" RecordedValue="%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="View" Value="%7B126715B7-B5F8-4ADB-8A3A-A94D208C20A5%7D" RecordedValue="%7B126715B7-B5F8-4ADB-8A3A-A94D208C20A5%7D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ViewCount" Value="0" RecordedValue="0" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsXslView" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsCSR" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ListViewPageUrl" Value="https%3A%2F%2Fsp.cordissolutions.com%2FApps00%2FShared%2520Documents%2FForms%2Fall%2520documents.aspx" RecordedValue="https%3A%2F%2Fsp.cordissolutions.com%2FApps00%2FShared%2520Documents%2FForms%2Fall%2520documents.aspx" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="FilterField1" Value="Application" RecordedValue="Application" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="FilterValue1" Value="myMaterial" RecordedValue="myMaterial" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody />
    </Request>
    <Request Method="GET" Guid="f4431526-ec93-4cb9-b04b-a8855302ba51" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_api/search/searchcenterurl" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Accept" Value="application/json;odata=verbose" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="8d75765e-5857-45e8-9a18-22001ccc806b" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/Upload.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam20.__REQUESTDIGEST" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="18" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam12.IsDlg" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;IsDlg=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam289.List" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?List=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam290.IsDlg" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;IsDlg=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam10.MSOTlPn_View" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ent=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="3" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam11.MSOTlPn_ShowSettings" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value=" = (&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; == " />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam12.MSOTlPn_Button" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="y = &quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;;&#xD;&#xA; " />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam13.__EVENTTARGET" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ame=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; typ" />
            <RuleParameter Name="Index" Value="35" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam14.MSOSPWebPartManager_DisplayModeName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="9" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam15.MSOSPWebPartManager_ExitingDesignMode" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="10" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam16.MSOSPWebPartManager_OldDisplayModeName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="9" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam17.MSOSPWebPartManager_StartWebPartEditingName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="10" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam18.MSOSPWebPartManager_EndWebPartEditing" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="10" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam19._maintainWorkspaceScrollPosition" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ent=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="3" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam21.__VIEWSTATE" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="19" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam22.__VIEWSTATEGENERATOR" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="20" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam23.__SCROLLPOSITIONX" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ent=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="3" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam24.__SCROLLPOSITIONY" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ent=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="3" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam25.__EVENTVALIDATION" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="23" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam26.destination" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="25" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam27.ctl00$PlaceHolderMain$ctl05$ctl01$uploadLocation" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value=" == &quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;)&#xD;&#xA; " />
            <RuleParameter Name="Index" Value="3" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="List" Value="{ED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B}" RecordedValue="{ED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B}" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="RootFolder" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsDlg" Value="1" RecordedValue="1" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="b3cfe156-3fa6-4dc8-bd53-6d75080d20ae" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/commandui.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="X-Requested-With" Value="XMLHttpRequest" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="ver" Value="823153556" RecordedValue="823153556" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="lcid" Value="1033" RecordedValue="1033" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="qt" Value="commandhandlers" RecordedValue="commandhandlers" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="POST" Guid="5351dc51-3f4f-4530-9902-89a32bdf8abb" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/commandui.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="X-Requested-With" Value="XMLHttpRequest" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="ver" Value="823153556" RecordedValue="823153556" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="id" Value="Ribbon.Read" RecordedValue="Ribbon.Read" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="lcid" Value="1033" RecordedValue="1033" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="qt" Value="ribbonvisibletabdeep" RecordedValue="ribbonvisibletabdeep" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody />
    </Request>
    <Request Method="GET" Guid="0b0678c8-d12a-49e8-844d-39dc9c701689" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/images/blank.gif" ThinkTime="13" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/_layouts/15/Upload.aspx?List=%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D&amp;RootFolder=&amp;IsDlg=1" />
      </Headers>
    </Request>
    <Request Method="POST" Guid="7fc1c282-3f7d-4791-bf2b-204e822615d2" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/UploadEx.aspx" ThinkTime="22" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/_layouts/15/Upload.aspx?List=%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D&amp;RootFolder=&amp;IsDlg=1" />
      </Headers>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam291.Mode" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?Mode=" />
            <RuleParameter Name="EndsWith" Value="\" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam292.ID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="\u0026ID=" />
            <RuleParameter Name="EndsWith" Value="\" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="List" Value="%7bED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7d" RecordedValue="%7bED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7d" CorrelationBinding="{{QueryStringParam289.List}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="RootFolder" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsDlg" Value="1" RecordedValue="1" CorrelationBinding="{{QueryStringParam290.IsDlg}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="MSOWebPartPage_PostbackSource" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_SelectedWpId" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_View" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam10.MSOTlPn_View}}" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_ShowSettings" Value="False" RecordedValue="False" CorrelationBinding="{{FormPostParam11.MSOTlPn_ShowSettings}}" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_SelectedLibrary" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_FilterString" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_Button" Value="none" RecordedValue="none" CorrelationBinding="{{FormPostParam12.MSOTlPn_Button}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$PlaceHolderMain$ctl04$RptControls$btnOK" RecordedValue="ctl00$PlaceHolderMain$ctl04$RptControls$btnOK" CorrelationBinding="{{FormPostParam13.__EVENTTARGET}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_DisplayModeName" Value="Browse" RecordedValue="Browse" CorrelationBinding="{{FormPostParam14.MSOSPWebPartManager_DisplayModeName}}" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_ExitingDesignMode" Value="false" RecordedValue="false" CorrelationBinding="{{FormPostParam15.MSOSPWebPartManager_ExitingDesignMode}}" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_Shared" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_LayoutChanges" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_InDesignMode" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_OldDisplayModeName" Value="Browse" RecordedValue="Browse" CorrelationBinding="{{FormPostParam16.MSOSPWebPartManager_OldDisplayModeName}}" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_StartWebPartEditingName" Value="false" RecordedValue="false" CorrelationBinding="{{FormPostParam17.MSOSPWebPartManager_StartWebPartEditingName}}" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_EndWebPartEditing" Value="false" RecordedValue="false" CorrelationBinding="{{FormPostParam18.MSOSPWebPartManager_EndWebPartEditing}}" UrlEncode="True" />
        <FormPostParameter Name="_maintainWorkspaceScrollPosition" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam19._maintainWorkspaceScrollPosition}}" UrlEncode="True" />
        <FormPostParameter Name="__REQUESTDIGEST" Value="{{FormPostParam20.__REQUESTDIGEST}}" RecordedValue="0xDE8B4D8BD7B6DFEA60A869DD47CFDFB5DB5A550DF57FBA5C5B21692FA6353CF52817387ABD557882932BA0BDB8E13686868EBDFD15A6C28B37B1FD8A34B14DF9,12 Jun 2018 10:16:48 -0000" CorrelationBinding="{{FormPostParam20.__REQUESTDIGEST}}" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="/wEPDwULLTE2MjA3MDQzNjUPZBYCZg9kFgICAQ8WAh4FY2xhc3MFFm1zLWRpYWxvZyBtcy1kaWFsb2ctbnIWBAIBD2QWAgIZD2QWAgIDD2QWAgIBD2QWAmYPFCsABmQFLmh0dHBzOi8vc3AuZXhjZWxzdXBwb3J0Lm9yZzo0NDMvbXkvUGVyc29uLmFzcHgFI2h0dHBzOi8vc3AuZXhjZWxzdXBwb3J0Lm9yZzo0NDMvbXkvBR8vQXBwczAwL19sYXlvdXRzLzE1L215c3Vicy5hc3B4BfsBL0FwcHMwMC9fbGF5b3V0cy8xNS9yZWdpb25hbHNldG5nLmFzcHg/dHlwZT11c2VyJnNvdXJjZT1odHRwcyUzQSUyRiUyRnNwJTJFY29yZGlzc29sdXRpb25zJTJFY29tJTJGQXBwczAwJTJGJTVGbGF5b3V0cyUyRjE1JTJGVXBsb2FkJTJFYXNweCUzRkxpc3QlM0QlMjU3QkVEMjgxOTJBJTI1MkQzQjY3JTI1MkQ0M0Q4JTI1MkRCQThBJTI1MkREQ0NBM0FDRTdEMEIlMjU3RCUyNmFtcCUzQlJvb3RGb2xkZXIlM0QlMjZhbXAlM0JJc0RsZyUzRDEFzwJodHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215L19sYXlvdXRzLzE1L0VkaXRQcm9maWxlLmFzcHg/VXNlclNldHRpbmdzUHJvdmlkZXI9MjM0YmYwZWQlMkQ3MGRiJTJENDE1OCUyRGEzMzIlMkQ0ZGZkNjgzYjQxNDgmUmV0dXJuVXJsPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkYlNUZsYXlvdXRzJTJGMTUlMkZVcGxvYWQlMkVhc3B4JTNGTGlzdCUzRCUyNTdCRUQyODE5MkElMjUyRDNCNjclMjUyRDQzRDglMjUyREJBOEElMjUyRERDQ0EzQUNFN0QwQiUyNTdEJTI2YW1wJTNCUm9vdEZvbGRlciUzRCUyNmFtcCUzQklzRGxnJTNEMWQCBw8WAh4HZW5jdHlwZQUTbXVsdGlwYXJ0L2Zvcm0tZGF0YRYIAgUPZBYCAgIPZBYEAgEPZBYCAgMPZBYCZg9kFgQCAw9kFgoCAQ8WBh4TQ2xpZW50T25DbGlja1NjcmlwdAV5RW5zdXJlU2NyaXB0RnVuYygnc2hhcmluZy5qcycsICdEaXNwbGF5U2hhcmVkV2l0aERpYWxvZycsIGZ1bmN0aW9uICgpIHsgRGlzcGxheVNoYXJlZFdpdGhEaWFsb2coJ1x1MDAyZkFwcHMwMFx1MDAyZicpOyB9KR4oQ2xpZW50T25DbGlja1NjcmlwdENvbnRhaW5pbmdQcmVmaXhlZFVybAV5RW5zdXJlU2NyaXB0RnVuYygnc2hhcmluZy5qcycsICdEaXNwbGF5U2hhcmVkV2l0aERpYWxvZycsIGZ1bmN0aW9uICgpIHsgRGlzcGxheVNoYXJlZFdpdGhEaWFsb2coJ1x1MDAyZkFwcHMwMFx1MDAyZicpOyB9KR4YQ2xpZW50T25DbGlja05hdmlnYXRlVXJsZGQCAw8WAh4HVmlzaWJsZWhkAgUPFgIfBWhkAgsPFgIfBWhkAhIPZBYCZg8PFgYeHFByZXZpb3VzQXV0aG9yaW5nSXRlbVZlcnNpb25lHhpQcmV2aW91c0F1dGhvcmluZ0l0ZW1Pd25lcmUeHFByZXZpb3VzQXV0aG9yaW5nQ29udHJvbE1vZGULKYgBTWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViQ29udHJvbHMuU1BDb250cm9sTW9kZSwgTWljcm9zb2Z0LlNoYXJlUG9pbnQsIFZlcnNpb249MTYuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49NzFlOWJjZTExMWU5NDI5YwBkZAIEDw8WAh4JQWNjZXNzS2V5BQEvZGQCAw9kFgICAQ9kFgICAQ9kFgYCAQ8PFgQeBF8hU0ICAh4IQ3NzQ2xhc3MFF21zLXByb21vdGVkQWN0aW9uQnV0dG9uZGQCAw9kFgJmDw8WBB8KAgIfCwUXbXMtcHJvbW90ZWRBY3Rpb25CdXR0b25kZAIFDw8WBh8LBRdtcy1wcm9tb3RlZEFjdGlvbkJ1dHRvbh8KAgIfBWhkZAIPD2QWAgIBD2QWAmYPDxYEHgRUZXh0BRBTaGFyZWQgRG9jdW1lbnRzHgtOYXZpZ2F0ZVVybAUxL0FwcHMwMC9TaGFyZWQgRG9jdW1lbnRzL0Zvcm1zL2FsbCBkb2N1bWVudHMuYXNweGRkAhMPZBYCAgEPZBYCAg0PDxYCHwVoZBYCAgEPZBYCZg9kFgICAw9kFgICBQ9kFgICAQ88KwAJAQAPFgQeDVBhdGhTZXBhcmF0b3IECB4NTmV2ZXJFeHBhbmRlZGdkZAIVD2QWAgIBD2QWBmYPFgIfDAUYL0FwcHMwMC9TaGFyZWQgRG9jdW1lbnRzZAIGD2QWCGYPZBYCAgQPZBYCAgEPZBYGZg9kFgJmDw8WAh8MZWRkAgEPZBYGAgEPDxYEHgxFcnJvck1lc3NhZ2UFMFlvdSBtdXN0IHNwZWNpZnkgYSB2YWx1ZSBmb3IgdGhlIHJlcXVpcmVkIGZpZWxkLh4UT3JpZ2luYWxFcnJvck1lc3NhZ2UFMFlvdSBtdXN0IHNwZWNpZnkgYSB2YWx1ZSBmb3IgdGhlIHJlcXVpcmVkIGZpZWxkLmRkAgMPDxYCHwVnZGQCBA8QDxYCHwwFJkFkZCBhcyBhIG5ldyB2ZXJzaW9uIHRvIGV4aXN0aW5nIGZpbGVzZGRkZAICDxYCHwVoZAIBD2QWBgIBD2QWAmYPFgIfDAUSRGVzdGluYXRpb24gRm9sZGVyZAICD2QWAmYPFgIfDGVkAgQPZBYCAgEPZBYGZg9kFgJmDw8WAh8MZWRkAgEPZBYCAgEPDxYCHwwFAS9kZAICDxYCHwVoZAICD2QWBgIBD2QWAmYPFgIfDAUTRGVzdGluYXRpb24gTGlicmFyeWQCAg9kFgJmDxYCHwxlZAIED2QWAgIBD2QWBGYPZBYCZg8PFgIfDGVkZAICDxYCHwVoZAIDD2QWBgIBD2QWAmYPFgIfDAUQVmVyc2lvbiBDb21tZW50c2QCAg9kFgJmDxYCHwxlZAIED2QWAgIBD2QWBGYPZBYCZg8PFgIfDGVkZAICDxYCHwVoZAIHD2QWCGYPFgQeCWlubmVyaHRtbAXyAUxhcmdlIGZpbGUgdXBsb2FkcyB3b3JrIGJldHRlciBpbiBzeW5jZWQgZm9sZGVycywgPGEgc3R5bGU9J3doaXRlLXNwYWNlOm5vd3JhcCcgb25jbGljaz0id2luZG93Lm9wZW4oJ2h0dHA6Ly9vZmZpY2UubWljcm9zb2Z0LmNvbS9lbi11cy9zdXBwb3J0L3N5bmMtYS1saWJyYXJ5LXRvLXlvdXItY29tcHV0ZXItSEExMDI4MzI0MDEuYXNweCcsICdfYmxhbmsnKSIgaHJlZj0nIyc+bGVhcm4gbW9yZTwvYT4uJm5ic3A7Jm5ic3A7Hghpc0hpZGRlbgVNdHlwZW9mIG5hdmlnYXRvci5tc1Byb3RvY29scyA9PSAib2JqZWN0IiAmJiAhbmF2aWdhdG9yLm1zUHJvdG9jb2xzWyJncnZvcGVuIl1kAgEPFgIeBXN0eWxlBQ1kaXNwbGF5Om5vbmU7ZAICD2QWAgIBDxYCHgdvbmNsaWNrBWZpZighcHJvY2Vzc0lucHV0KCkpIHJldHVybiBmYWxzZTtTdWJtaXRCdXR0b25PbkNsaWNrKCdjdGwwMF9QbGFjZUhvbGRlck1haW5fY3RsMDRfUnB0Q29udHJvbHNfYnRuT0snKTtkAgMPZBYCZg8WBB4JYWNjZXNza2V5BQFDHxUFrwN0cnkgeyANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuZnJhbWVFbGVtZW50LmNhbmNlbFBvcFVwKCk7IA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2F0Y2goZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChCb29sZWFuKHRvcCkgJiYgQm9vbGVhbih0b3AucG9zdE1lc3NhZ2UpKSANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wLnBvc3RNZXNzYWdlKCdDbG9zZURpYWxvZycsICcqJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO2QYAgUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgEFQWN0bDAwJFBsYWNlSG9sZGVyTWFpbiRVcGxvYWREb2N1bWVudFNlY3Rpb24kY3RsMDUkT3ZlcndyaXRlU2luZ2xlBRdjdGwwMCRUb3BOYXZpZ2F0aW9uTWVudQ8PZAUUSG9tZVxBcHBzICYgUHJvZHVjdHNkSIlxot5t9zwROWmbLKqVU0ipJE5Y3TnSZr4XLSfbqpo=" RecordedValue="/wEPDwULLTE2MjA3MDQzNjUPZBYCZg9kFgICAQ8WAh4FY2xhc3MFFm1zLWRpYWxvZyBtcy1kaWFsb2ctbnIWBAIBD2QWAgIZD2QWAgIDD2QWAgIBD2QWAmYPFCsABmQFLmh0dHBzOi8vc3AuZXhjZWxzdXBwb3J0Lm9yZzo0NDMvbXkvUGVyc29uLmFzcHgFI2h0dHBzOi8vc3AuZXhjZWxzdXBwb3J0Lm9yZzo0NDMvbXkvBR8vQXBwczAwL19sYXlvdXRzLzE1L215c3Vicy5hc3B4BfsBL0FwcHMwMC9fbGF5b3V0cy8xNS9yZWdpb25hbHNldG5nLmFzcHg/dHlwZT11c2VyJnNvdXJjZT1odHRwcyUzQSUyRiUyRnNwJTJFY29yZGlzc29sdXRpb25zJTJFY29tJTJGQXBwczAwJTJGJTVGbGF5b3V0cyUyRjE1JTJGVXBsb2FkJTJFYXNweCUzRkxpc3QlM0QlMjU3QkVEMjgxOTJBJTI1MkQzQjY3JTI1MkQ0M0Q4JTI1MkRCQThBJTI1MkREQ0NBM0FDRTdEMEIlMjU3RCUyNmFtcCUzQlJvb3RGb2xkZXIlM0QlMjZhbXAlM0JJc0RsZyUzRDEFzwJodHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215L19sYXlvdXRzLzE1L0VkaXRQcm9maWxlLmFzcHg/VXNlclNldHRpbmdzUHJvdmlkZXI9MjM0YmYwZWQlMkQ3MGRiJTJENDE1OCUyRGEzMzIlMkQ0ZGZkNjgzYjQxNDgmUmV0dXJuVXJsPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkYlNUZsYXlvdXRzJTJGMTUlMkZVcGxvYWQlMkVhc3B4JTNGTGlzdCUzRCUyNTdCRUQyODE5MkElMjUyRDNCNjclMjUyRDQzRDglMjUyREJBOEElMjUyRERDQ0EzQUNFN0QwQiUyNTdEJTI2YW1wJTNCUm9vdEZvbGRlciUzRCUyNmFtcCUzQklzRGxnJTNEMWQCBw8WAh4HZW5jdHlwZQUTbXVsdGlwYXJ0L2Zvcm0tZGF0YRYIAgUPZBYCAgIPZBYEAgEPZBYCAgMPZBYCZg9kFgQCAw9kFgoCAQ8WBh4TQ2xpZW50T25DbGlja1NjcmlwdAV5RW5zdXJlU2NyaXB0RnVuYygnc2hhcmluZy5qcycsICdEaXNwbGF5U2hhcmVkV2l0aERpYWxvZycsIGZ1bmN0aW9uICgpIHsgRGlzcGxheVNoYXJlZFdpdGhEaWFsb2coJ1x1MDAyZkFwcHMwMFx1MDAyZicpOyB9KR4oQ2xpZW50T25DbGlja1NjcmlwdENvbnRhaW5pbmdQcmVmaXhlZFVybAV5RW5zdXJlU2NyaXB0RnVuYygnc2hhcmluZy5qcycsICdEaXNwbGF5U2hhcmVkV2l0aERpYWxvZycsIGZ1bmN0aW9uICgpIHsgRGlzcGxheVNoYXJlZFdpdGhEaWFsb2coJ1x1MDAyZkFwcHMwMFx1MDAyZicpOyB9KR4YQ2xpZW50T25DbGlja05hdmlnYXRlVXJsZGQCAw8WAh4HVmlzaWJsZWhkAgUPFgIfBWhkAgsPFgIfBWhkAhIPZBYCZg8PFgYeHFByZXZpb3VzQXV0aG9yaW5nSXRlbVZlcnNpb25lHhpQcmV2aW91c0F1dGhvcmluZ0l0ZW1Pd25lcmUeHFByZXZpb3VzQXV0aG9yaW5nQ29udHJvbE1vZGULKYgBTWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViQ29udHJvbHMuU1BDb250cm9sTW9kZSwgTWljcm9zb2Z0LlNoYXJlUG9pbnQsIFZlcnNpb249MTYuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49NzFlOWJjZTExMWU5NDI5YwBkZAIEDw8WAh4JQWNjZXNzS2V5BQEvZGQCAw9kFgICAQ9kFgICAQ9kFgYCAQ8PFgQeBF8hU0ICAh4IQ3NzQ2xhc3MFF21zLXByb21vdGVkQWN0aW9uQnV0dG9uZGQCAw9kFgJmDw8WBB8KAgIfCwUXbXMtcHJvbW90ZWRBY3Rpb25CdXR0b25kZAIFDw8WBh8LBRdtcy1wcm9tb3RlZEFjdGlvbkJ1dHRvbh8KAgIfBWhkZAIPD2QWAgIBD2QWAmYPDxYEHgRUZXh0BRBTaGFyZWQgRG9jdW1lbnRzHgtOYXZpZ2F0ZVVybAUxL0FwcHMwMC9TaGFyZWQgRG9jdW1lbnRzL0Zvcm1zL2FsbCBkb2N1bWVudHMuYXNweGRkAhMPZBYCAgEPZBYCAg0PDxYCHwVoZBYCAgEPZBYCZg9kFgICAw9kFgICBQ9kFgICAQ88KwAJAQAPFgQeDVBhdGhTZXBhcmF0b3IECB4NTmV2ZXJFeHBhbmRlZGdkZAIVD2QWAgIBD2QWBmYPFgIfDAUYL0FwcHMwMC9TaGFyZWQgRG9jdW1lbnRzZAIGD2QWCGYPZBYCAgQPZBYCAgEPZBYGZg9kFgJmDw8WAh8MZWRkAgEPZBYGAgEPDxYEHgxFcnJvck1lc3NhZ2UFMFlvdSBtdXN0IHNwZWNpZnkgYSB2YWx1ZSBmb3IgdGhlIHJlcXVpcmVkIGZpZWxkLh4UT3JpZ2luYWxFcnJvck1lc3NhZ2UFMFlvdSBtdXN0IHNwZWNpZnkgYSB2YWx1ZSBmb3IgdGhlIHJlcXVpcmVkIGZpZWxkLmRkAgMPDxYCHwVnZGQCBA8QDxYCHwwFJkFkZCBhcyBhIG5ldyB2ZXJzaW9uIHRvIGV4aXN0aW5nIGZpbGVzZGRkZAICDxYCHwVoZAIBD2QWBgIBD2QWAmYPFgIfDAUSRGVzdGluYXRpb24gRm9sZGVyZAICD2QWAmYPFgIfDGVkAgQPZBYCAgEPZBYGZg9kFgJmDw8WAh8MZWRkAgEPZBYCAgEPDxYCHwwFAS9kZAICDxYCHwVoZAICD2QWBgIBD2QWAmYPFgIfDAUTRGVzdGluYXRpb24gTGlicmFyeWQCAg9kFgJmDxYCHwxlZAIED2QWAgIBD2QWBGYPZBYCZg8PFgIfDGVkZAICDxYCHwVoZAIDD2QWBgIBD2QWAmYPFgIfDAUQVmVyc2lvbiBDb21tZW50c2QCAg9kFgJmDxYCHwxlZAIED2QWAgIBD2QWBGYPZBYCZg8PFgIfDGVkZAICDxYCHwVoZAIHD2QWCGYPFgQeCWlubmVyaHRtbAXyAUxhcmdlIGZpbGUgdXBsb2FkcyB3b3JrIGJldHRlciBpbiBzeW5jZWQgZm9sZGVycywgPGEgc3R5bGU9J3doaXRlLXNwYWNlOm5vd3JhcCcgb25jbGljaz0id2luZG93Lm9wZW4oJ2h0dHA6Ly9vZmZpY2UubWljcm9zb2Z0LmNvbS9lbi11cy9zdXBwb3J0L3N5bmMtYS1saWJyYXJ5LXRvLXlvdXItY29tcHV0ZXItSEExMDI4MzI0MDEuYXNweCcsICdfYmxhbmsnKSIgaHJlZj0nIyc+bGVhcm4gbW9yZTwvYT4uJm5ic3A7Jm5ic3A7Hghpc0hpZGRlbgVNdHlwZW9mIG5hdmlnYXRvci5tc1Byb3RvY29scyA9PSAib2JqZWN0IiAmJiAhbmF2aWdhdG9yLm1zUHJvdG9jb2xzWyJncnZvcGVuIl1kAgEPFgIeBXN0eWxlBQ1kaXNwbGF5Om5vbmU7ZAICD2QWAgIBDxYCHgdvbmNsaWNrBWZpZighcHJvY2Vzc0lucHV0KCkpIHJldHVybiBmYWxzZTtTdWJtaXRCdXR0b25PbkNsaWNrKCdjdGwwMF9QbGFjZUhvbGRlck1haW5fY3RsMDRfUnB0Q29udHJvbHNfYnRuT0snKTtkAgMPZBYCZg8WBB4JYWNjZXNza2V5BQFDHxUFrwN0cnkgeyANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuZnJhbWVFbGVtZW50LmNhbmNlbFBvcFVwKCk7IA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2F0Y2goZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChCb29sZWFuKHRvcCkgJiYgQm9vbGVhbih0b3AucG9zdE1lc3NhZ2UpKSANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wLnBvc3RNZXNzYWdlKCdDbG9zZURpYWxvZycsICcqJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO2QYAgUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgEFQWN0bDAwJFBsYWNlSG9sZGVyTWFpbiRVcGxvYWREb2N1bWVudFNlY3Rpb24kY3RsMDUkT3ZlcndyaXRlU2luZ2xlBRdjdGwwMCRUb3BOYXZpZ2F0aW9uTWVudQ8PZAUUSG9tZVxBcHBzICYgUHJvZHVjdHNkSIlxot5t9zwROWmbLKqVU0ipJE5Y3TnSZr4XLSfbqpo=" CorrelationBinding="{{FormPostParam21.__VIEWSTATE}}" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="1D26ACB4" RecordedValue="1D26ACB4" CorrelationBinding="{{FormPostParam22.__VIEWSTATEGENERATOR}}" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam23.__SCROLLPOSITIONX}}" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam24.__SCROLLPOSITIONY}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="/wEdAAmWDRYPLHE9aQaOqHSv2NClLmXyYwA+OfFaG5A2lz8nCLUgFLpnKOjvBAU2tXnwD0wbt5xWilHkpAXrgutd9xsrar6II3t2myHtKm8Jrz0kqx/LcxD5kgYbY/iJTRTmpGRLQACdXqMi4fagnj5qOr30c0YKkcurSy8sxtEvwH10tcYcScc7e+6HOPbDGJRE27ugxFUBoRgwZsQCCQ0ze3jXLgH7sND0Xhqq7F/eIIKt6Q==" RecordedValue="/wEdAAmWDRYPLHE9aQaOqHSv2NClLmXyYwA+OfFaG5A2lz8nCLUgFLpnKOjvBAU2tXnwD0wbt5xWilHkpAXrgutd9xsrar6II3t2myHtKm8Jrz0kqx/LcxD5kgYbY/iJTRTmpGRLQACdXqMi4fagnj5qOr30c0YKkcurSy8sxtEvwH10tcYcScc7e+6HOPbDGJRE27ugxFUBoRgwZsQCCQ0ze3jXLgH7sND0Xhqq7F/eIIKt6Q==" CorrelationBinding="{{FormPostParam25.__EVENTVALIDATION}}" UrlEncode="True" />
        <FormPostParameter Name="destination" Value="/Apps00/Shared Documents" RecordedValue="/Apps00/Shared Documents" CorrelationBinding="{{FormPostParam26.destination}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$PlaceHolderMain$UploadDocumentSection$ctl05$OverwriteSingle" Value="on" RecordedValue="on" CorrelationBinding="{{FormPostParam28.ctl00$PlaceHolderMain$UploadDocumentSection$ctl05$OverwriteSingle}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$PlaceHolderMain$ctl05$ctl01$uploadLocation" Value="/" RecordedValue="/" CorrelationBinding="{{FormPostParam27.ctl00$PlaceHolderMain$ctl05$ctl01$uploadLocation}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$PlaceHolderMain$VersionCommentSection$ctl01$CheckInComment" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FileUploadParameter Name="ctl00$PlaceHolderMain$UploadDocumentSection$ctl05$InputFile" FileName="File for the version 1.xlsx" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" GenerateUniqueName="True" UseGuids="False" FileUploadName="" HtmlEncodeFileName="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Guid="bc26f361-9dc5-4635-b87b-8f9d5f794fb6" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/EditForm.aspx" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="GET" Guid="4ed66eff-1c2f-4d37-b1a7-45ee071d85c3" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/commandui.ashx" ThinkTime="3" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="X-Requested-With" Value="XMLHttpRequest" />
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/EditForm.aspx?Mode=Upload&amp;CheckInComment=&amp;ID=3454&amp;RootFolder=%2FApps00%2FShared%20Documents&amp;IsDlg=1" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="ver" Value="823153556" RecordedValue="823153556" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="lcid" Value="1033" RecordedValue="1033" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="qt" Value="commandhandlers" RecordedValue="commandhandlers" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
        <Request Method="POST" Guid="aca9e610-98b4-491d-bfed-1ca107992cf2" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/commandui.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="X-Requested-With" Value="XMLHttpRequest" />
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/EditForm.aspx?Mode=Upload&amp;CheckInComment=&amp;ID=3454&amp;RootFolder=%2FApps00%2FShared%20Documents&amp;IsDlg=1" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="ver" Value="823153556" RecordedValue="823153556" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="id" Value="Ribbon.DocLibListForm.Edit" RecordedValue="Ribbon.DocLibListForm.Edit" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="lcid" Value="1033" RecordedValue="1033" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="qt" Value="ribbonvisibletabdeep" RecordedValue="ribbonvisibletabdeep" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
          <FormPostHttpBody />
        </Request>
        <Request Method="GET" Guid="d798592a-dc23-4399-a159-3aaa1a710c91" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/EditForm.aspx?Mode=Upload&amp;CheckInComment=&amp;ID=3454&amp;RootFolder=%2FApps00%2FShared%20Documents&amp;IsDlg=1" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
        <Request Method="GET" Guid="80a8df14-18a6-4871-b708-577ffd5554f7" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="5" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/EditForm.aspx?Mode=Upload&amp;CheckInComment=&amp;ID=3454&amp;RootFolder=%2FApps00%2FShared%20Documents&amp;IsDlg=1" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
      </DependentRequests>
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/_layouts/15/UploadEx.aspx?List=%7bED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7d&amp;RootFolder=&amp;IsDlg=1" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="2" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam7.RootFolder" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;RootFolder=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam8.IsDlg" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;IsDlg=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam504.RootFolder" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;RootFolder=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam505.IsDlg" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;IsDlg=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam40.MSOTlPn_View" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ent=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="3" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam46._maintainWorkspaceScrollPosition" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ent=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="3" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam47.__SCROLLPOSITIONX" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ent=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="3" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam48.__SCROLLPOSITIONY" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ent=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="3" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam5.Mode" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?Mode=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam6.ID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;ID=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam2.__EVENTTARGET" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ame=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; val" />
            <RuleParameter Name="Index" Value="50" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam3.ctl00$ctl44$ctl04" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value=" id=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; uns" />
            <RuleParameter Name="Index" Value="72" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam4.ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl01$ctl00$ContentTypeChoice" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Cor" />
            <RuleParameter Name="Index" Value="33" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam5.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_FileLeafRef" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ef&quot;:&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;Ti" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam6.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Title" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="le&quot;:&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;Ap" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam7.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Status" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="us&quot;:&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;Co" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam8.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_owshiddenversion" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="dal=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; --&gt;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam9.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_SubmitClientForm" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ons=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;&lt;ie" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam502.Mode" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?Mode=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam503.ID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;ID=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam29.__EVENTTARGET" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ame=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; val" />
            <RuleParameter Name="Index" Value="50" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam30.ctl00$ctl44$ctl04" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value=" id=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; uns" />
            <RuleParameter Name="Index" Value="72" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam31.ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl01$ctl00$ContentTypeChoice" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Cor" />
            <RuleParameter Name="Index" Value="33" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam32.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_FileLeafRef" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ef&quot;:&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;Ti" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam33.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Title" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="le&quot;:&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;Ap" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam34.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Status" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="us&quot;:&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;Co" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam35.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_owshiddenversion" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="dal=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; --&gt;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam36.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_SubmitClientForm" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ons=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;&lt;ie" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam41.MSOTlPn_ShowSettings" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="5" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam42.MSOTlPn_Button" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="8" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam43.MSOSPWebPartManager_DisplayModeName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="13" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam44._wpSelected" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="18" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam45.MSOSPWebPartManager_OldDisplayModeName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="13" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="Mode" Value="Upload" RecordedValue="Upload" CorrelationBinding="{{QueryStringParam291.Mode}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="CheckInComment" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ID" Value="3454" RecordedValue="3454" CorrelationBinding="{{QueryStringParam292.ID}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="RootFolder" Value="%2FApps00%2FShared%20Documents" RecordedValue="%2FApps00%2FShared%20Documents" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsDlg" Value="1" RecordedValue="1" CorrelationBinding="{{QueryStringParam12.IsDlg}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="2640f1e9-6f7f-4d55-98f1-913bf119c438" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/images/blank.gif" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/EditForm.aspx?Mode=Upload&amp;CheckInComment=&amp;ID=3454&amp;RootFolder=%2FApps00%2FShared%20Documents&amp;IsDlg=1" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="5031cb16-7944-4bb4-9694-60a2c43046c9" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/EditForm.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <QueryStringParameters>
        <QueryStringParameter Name="Mode" Value="Upload" RecordedValue="Upload" CorrelationBinding="{{QueryStringParam5.Mode}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="CheckInComment" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ID" Value="3454" RecordedValue="3454" CorrelationBinding="{{QueryStringParam6.ID}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="RootFolder" Value="{{QueryStringParam7.RootFolder}}" RecordedValue="%2fApps00%2fShared+Documents" CorrelationBinding="{{QueryStringParam7.RootFolder}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsDlg" Value="{{QueryStringParam8.IsDlg}}" RecordedValue="1" CorrelationBinding="{{QueryStringParam8.IsDlg}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="_wpcmWpid" Value="{{$HIDDEN2._wpcmWpid}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="wpcmVal" Value="{{$HIDDEN2.wpcmVal}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_PostbackSource" Value="{{$HIDDEN2.MSOWebPartPage_PostbackSource}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_SelectedWpId" Value="{{$HIDDEN2.MSOTlPn_SelectedWpId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_View" Value="{{$HIDDEN2.MSOTlPn_View}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_ShowSettings" Value="{{$HIDDEN2.MSOTlPn_ShowSettings}}" RecordedValue="False" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_SelectedLibrary" Value="{{$HIDDEN2.MSOGallery_SelectedLibrary}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_FilterString" Value="{{$HIDDEN2.MSOGallery_FilterString}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_Button" Value="{{$HIDDEN2.MSOTlPn_Button}}" RecordedValue="none" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$toolBarTbl$RightRptControls$ctl00$ctl00$diidIOSaveItem" RecordedValue="ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$toolBarTbl$RightRptControls$ctl00$ctl00$diidIOSaveItem" CorrelationBinding="{{FormPostParam2.__EVENTTARGET}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN2.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__REQUESTDIGEST" Value="{{$HIDDEN2.__REQUESTDIGEST}}" RecordedValue="0x6D4B0310933B9D99481EBAEAAE10A2EB595721FE5FC78194876476AF427BEFFE351AE8A672FF1E67E149764597F3008D7B0BCD5A6C1D7AF858AF4BA26EFA210B,12 Jun 2018 10:17:26 -0000" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_ListSchemaVersion_{ed28192a-3b67-43d8-ba8a-dcca3ace7d0b}" Value="{{$HIDDEN2._ListSchemaVersion_{ed28192a-3b67-43d8-ba8a-dcca3ace7d0b}}" RecordedValue="95" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_DisplayModeName" Value="{{$HIDDEN2.MSOSPWebPartManager_DisplayModeName}}" RecordedValue="Browse" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_ExitingDesignMode" Value="{{$HIDDEN2.MSOSPWebPartManager_ExitingDesignMode}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_Shared" Value="{{$HIDDEN2.MSOWebPartPage_Shared}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_LayoutChanges" Value="{{$HIDDEN2.MSOLayout_LayoutChanges}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_InDesignMode" Value="{{$HIDDEN2.MSOLayout_InDesignMode}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wpSelected" Value="{{$HIDDEN2._wpSelected}}" RecordedValue="MSOZoneCell_WebPartWPQ2" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wzSelected" Value="{{$HIDDEN2._wzSelected}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_OldDisplayModeName" Value="{{$HIDDEN2.MSOSPWebPartManager_OldDisplayModeName}}" RecordedValue="Browse" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_StartWebPartEditingName" Value="{{$HIDDEN2.MSOSPWebPartManager_StartWebPartEditingName}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_EndWebPartEditing" Value="{{$HIDDEN2.MSOSPWebPartManager_EndWebPartEditing}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_maintainWorkspaceScrollPosition" Value="{{$HIDDEN2._maintainWorkspaceScrollPosition}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN2.__VIEWSTATE}}" RecordedValue="/wEPDwUKLTk3NzIwMzI3NQ9kFgJmD2QWAgIBDxYCHgVjbGFzcwUJbXMtZGlhbG9nFgQCAQ9kFgICGQ9kFgICAw9kFgICAQ9kFgJmDxQrAAZkBS5odHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215L1BlcnNvbi5hc3B4BSNodHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215LwUfL0FwcHMwMC9fbGF5b3V0cy8xNS9teXN1YnMuYXNweAWgAi9BcHBzMDAvX2xheW91dHMvMTUvcmVnaW9uYWxzZXRuZy5hc3B4P3R5cGU9dXNlciZzb3VyY2U9aHR0cHMlM0ElMkYlMkZzcCUyRWNvcmRpc3NvbHV0aW9ucyUyRWNvbSUyRkFwcHMwMCUyRlNoYXJlZCUyMERvY3VtZW50cyUyRkZvcm1zJTJGRWRpdEZvcm0lMkVhc3B4JTNGTW9kZSUzRFVwbG9hZCUyNmFtcCUzQkNoZWNrSW5Db21tZW50JTNEJTI2YW1wJTNCSUQlM0QzNDU0JTI2YW1wJTNCUm9vdEZvbGRlciUzRCUyNTJGQXBwczAwJTI1MkZTaGFyZWQlMjUyMERvY3VtZW50cyUyNmFtcCUzQklzRGxnJTNEMQX0Amh0dHBzOi8vc3AuZXhjZWxzdXBwb3J0Lm9yZzo0NDMvbXkvX2xheW91dHMvMTUvRWRpdFByb2ZpbGUuYXNweD9Vc2VyU2V0dGluZ3NQcm92aWRlcj0yMzRiZjBlZCUyRDcwZGIlMkQ0MTU4JTJEYTMzMiUyRDRkZmQ2ODNiNDE0OCZSZXR1cm5Vcmw9aHR0cHMlM0ElMkYlMkZzcCUyRWNvcmRpc3NvbHV0aW9ucyUyRWNvbSUyRkFwcHMwMCUyRlNoYXJlZCUyMERvY3VtZW50cyUyRkZvcm1zJTJGRWRpdEZvcm0lMkVhc3B4JTNGTW9kZSUzRFVwbG9hZCUyNmFtcCUzQkNoZWNrSW5Db21tZW50JTNEJTI2YW1wJTNCSUQlM0QzNDU0JTI2YW1wJTNCUm9vdEZvbGRlciUzRCUyNTJGQXBwczAwJTI1MkZTaGFyZWQlMjUyMERvY3VtZW50cyUyNmFtcCUzQklzRGxnJTNEMWQCBw9kFgYCAQ9kFgICAQ9kFgIFJmdfMTEyNmIwZjhfZTVlNl80Mjc3X2JhYTZfNDIzZGEwYmJhNDc3D2QWAmYPZBYGAgMPZBYCAgEPZBYEAgEPZBYCZg9kFgICAw8PFgYeBFRleHQFBFNhdmUeDU9uQ2xpZW50Q2xpY2sFbGlmICghUHJlU2F2ZUl0ZW0oKSkgcmV0dXJuIGZhbHNlO2lmIChTUENsaWVudEZvcm1zLkNsaWVudEZvcm1NYW5hZ2VyLlN1Ym1pdENsaWVudEZvcm0oJ1dQUTInKSkgcmV0dXJuIGZhbHNlOx4IVGFiSW5kZXgBAABkZAIDD2QWAmYPZBYCAgMPDxYGHglBY2Nlc3NLZXkFAUMfAQUGQ2FuY2VsHwIFTHNldFRpbWVvdXQoZnVuY3Rpb24oKXt3aW5kb3cuZnJhbWVFbGVtZW50LmNhbmNlbFBvcFVwKCk7fSwgMCk7IHJldHVybiBmYWxzZTtkZAIFD2QWAmYPZBYCAgMPZBYCZg9kFgICAQ8PFg4fAQULRGVsZXRlIEl0ZW0eCEltYWdlVXJsBR8vX2xheW91dHMvMTUvaW1hZ2VzL2RlbGl0ZW0uZ2lmHwQFAVgeEVBlcm1pc3Npb25Db250ZXh0CymKAU1pY3Jvc29mdC5TaGFyZVBvaW50LlV0aWxpdGllcy5QZXJtaXNzaW9uQ29udGV4dCwgTWljcm9zb2Z0LlNoYXJlUG9pbnQsIFZlcnNpb249MTYuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49NzFlOWJjZTExMWU5NDI5YwIeC1Blcm1pc3Npb25zKCmAAU1pY3Jvc29mdC5TaGFyZVBvaW50LlNQQmFzZVBlcm1pc3Npb25zLCBNaWNyb3NvZnQuU2hhcmVQb2ludCwgVmVyc2lvbj0xNi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03MWU5YmNlMTExZTk0MjljD0RlbGV0ZUxpc3RJdGVtcx8CBSByZXR1cm4gRGVsZXRlSXRlbUNvbmZpcm1hdGlvbigpOx4oQ2xpZW50T25DbGlja1NjcmlwdENvbnRhaW5pbmdQcmVmaXhlZFVybGRkZAIHD2QWAmYPZBYIAgMPZBYCZg9kFgQCAw8QD2QWAh4Ib25jaGFuZ2UFkAFqYXZhc2NyaXB0OkNoYW5nZUNvbnRlbnRUeXBlKCJjdGwwMF9jdGw0M19nXzExMjZiMGY4X2U1ZTZfNDI3N19iYWE2XzQyM2RhMGJiYTQ3N19jdGwwMF9jdGwwMl9jdGwwMF9jdGwwMV9jdGwwMF9Db250ZW50VHlwZUNob2ljZSIpO3JldHVybiBmYWxzZTsPFgJmAgEWAhAFD0NvcmRpcyBEb2N1bWVudAVKMHgwMTAxMDBDODUyREUzMjI4NDI2RTQ4OUEzQUZEM0ZFQTJGNDExMTAwRTk3N0Q4N0Q5RjQxNTY0NThBNDBFQ0RGQ0E1Q0I3MEFnEAUZQ29yZGlzIExpbmsgdG8gYSBEb2N1bWVudAUqMHgwMTAxMEEwMDg2MzVFQjlBMzVDQjZBNDc4NTY1NUJGQzA5QkY4RDc4Z2RkAgUPDxYGHwFlHghDc3NDbGFzcwULbXMtbWV0YWRhdGEeBF8hU0ICAmRkAgUPZBYCZg9kFgICAQ9kFgxmD2QWAgIBD2QWAmYPZBYCAgkPFgIeE1ByZXZpb3VzQ29udHJvbE1vZGULKYgBTWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViQ29udHJvbHMuU1BDb250cm9sTW9kZSwgTWljcm9zb2Z0LlNoYXJlUG9pbnQsIFZlcnNpb249MTYuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49NzFlOWJjZTExMWU5NDI5YwJkAgEPZBYCAgEPZBYCZg9kFgICCQ8WAh8MCysGAmQCAg9kFgICAQ9kFgJmD2QWAgIJDxYCHwwLKwYCZAIDD2QWAgIBD2QWAmYPZBYCAgkPFgIfDAsrBgJkAgQPZBYCAgEPZBYCZg9kFgICCQ8WAh8MCysGAmQCBQ9kFgICAQ9kFgJmD2QWAgIJDxYCHwwLKwYCZAIHD2QWAmYPZBYEAgMPFgIfDAsrBgEWAmYPFgIfDAsrBgFkAgUPFgIfDAsrBgEWAmYPFgIfDAsrBgFkAhEPZBYEZg9kFgICAQ9kFgJmD2QWBgIDDxYCHwwLKwYBZAIFD2QWBAIBDxYCHwwLKwYBZAIDDxYCHwwLKwYBZAIHD2QWBAIBDxYCHwwLKwYBZAIDDxYCHwwLKwYBZAIBD2QWBAIBD2QWAmYPZBYCAgMPDxYGHwEFBFNhdmUfAgVsaWYgKCFQcmVTYXZlSXRlbSgpKSByZXR1cm4gZmFsc2U7aWYgKFNQQ2xpZW50Rm9ybXMuQ2xpZW50Rm9ybU1hbmFnZXIuU3VibWl0Q2xpZW50Rm9ybSgnV1BRMicpKSByZXR1cm4gZmFsc2U7HwMBAABkZAIDD2QWAmYPZBYCAgMPDxYGHwQFAUMfAQUGQ2FuY2VsHwIFTHNldFRpbWVvdXQoZnVuY3Rpb24oKXt3aW5kb3cuZnJhbWVFbGVtZW50LmNhbmNlbFBvcFVwKCk7fSwgMCk7IHJldHVybiBmYWxzZTtkZAIFD2QWAgICD2QWBAIBD2QWAgIDD2QWAmYPZBYEAgMPZBYIAgEPFgYeE0NsaWVudE9uQ2xpY2tTY3JpcHQFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkfCAV5RW5zdXJlU2NyaXB0RnVuYygnc2hhcmluZy5qcycsICdEaXNwbGF5U2hhcmVkV2l0aERpYWxvZycsIGZ1bmN0aW9uICgpIHsgRGlzcGxheVNoYXJlZFdpdGhEaWFsb2coJ1x1MDAyZkFwcHMwMFx1MDAyZicpOyB9KR4YQ2xpZW50T25DbGlja05hdmlnYXRlVXJsZGQCBQ8WAh4HVmlzaWJsZWhkAgsPFgIfD2hkAhIPZBYCZg8PFgYeHFByZXZpb3VzQXV0aG9yaW5nSXRlbVZlcnNpb24FATEeGlByZXZpb3VzQXV0aG9yaW5nSXRlbU93bmVyBQQzNDU0HhxQcmV2aW91c0F1dGhvcmluZ0NvbnRyb2xNb2RlCysGAmRkAgQPDxYCHwQFAS9kZAIDD2QWAgIBD2QWAgIBD2QWBgIBDw8WBB8LAgIfCgUXbXMtcHJvbW90ZWRBY3Rpb25CdXR0b25kZAIDD2QWAmYPDxYEHwsCAh8KBRdtcy1wcm9tb3RlZEFjdGlvbkJ1dHRvbmRkAgUPDxYGHwoFF21zLXByb21vdGVkQWN0aW9uQnV0dG9uHwsCAh8PaGRkAhMPZBYCAgEPZBYCAg0PDxYCHw9oZBYCAgEPZBYCZg9kFgICAw9kFgICBQ9kFgICAQ88KwAJAQAPFgQeDVBhdGhTZXBhcmF0b3IECB4NTmV2ZXJFeHBhbmRlZGdkZBgBBRdjdGwwMCRUb3BOYXZpZ2F0aW9uTWVudQ8PZAUUSG9tZVxBcHBzICYgUHJvZHVjdHNkyeGd53sJvWDKvmoLOWBgbVpvps6qlkUsFGLgWmO5frE=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN2.__VIEWSTATEGENERATOR}}" RecordedValue="2DB155A3" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN2.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN2.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN2.__EVENTVALIDATION}}" RecordedValue="/wEdAApYAEjEkNw1AfeO2TzFT5GoLmXyYwA+OfFaG5A2lz8nCLUgFLpnKOjvBAU2tXnwD0zcGx/ClmkNDkC6bI6ZjzGF4Y7PxaQ7vJ4c+yiHAL1cBA+pSN72eugVSovJ6GFyqLg4gYOetJ/ZZMCFwawqweQeNR224PUFoB078cRC/DtDfLacWTUWncfeq1XYE1tA88Emq1rCZTxXSVwfVenbodw8eYVhQQDjVJF6V7iNWljvpPtvEmtK+ZDEnJbHA5dKejc=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl44$ctl04" Value="Ribbon.DocLibListForm.Edit" RecordedValue="Ribbon.DocLibListForm.Edit" CorrelationBinding="{{FormPostParam3.ctl00$ctl44$ctl04}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl01$ctl00$ContentTypeChoice" Value="0x010100C852DE3228426E489A3AFD3FEA2F411100E977D87D9F4156458A40ECDFCA5CB70A" RecordedValue="0x010100C852DE3228426E489A3AFD3FEA2F411100E977D87D9F4156458A40ECDFCA5CB70A" CorrelationBinding="{{FormPostParam4.ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl01$ctl00$ContentTypeChoice}}" UrlEncode="True" />
        <FormPostParameter Name="Status_1dab9b48-2d1a-47b3-878c-8e84f0d211ba_Radio" Value="DropDownButton" RecordedValue="DropDownButton" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl06$ctl00$owshiddenversion" Value="{{$HIDDEN2.ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl06$ctl00$owshiddenversion}}" RecordedValue="1" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_FileLeafRef" Value="File for the version 1.xlsx" RecordedValue="File for the version 1.xlsx" CorrelationBinding="{{FormPostParam5.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_FileLeafRef}}" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Title" Value="Cordis myFidoc English Template" RecordedValue="Cordis myFidoc English Template" CorrelationBinding="{{FormPostParam6.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Title}}" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Application" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Apps_x0020_Content_x0020_Type" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Status" Value="Draft" RecordedValue="Draft" CorrelationBinding="{{FormPostParam7.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Status}}" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Con_Tech" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_owshiddenversion" Value="1" RecordedValue="1" CorrelationBinding="{{FormPostParam8.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_owshiddenversion}}" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_SubmitClientForm" Value="true" RecordedValue="true" CorrelationBinding="{{FormPostParam9.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_SubmitClientForm}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="a37ea6c0-b2bd-4e07-a400-82722877feeb" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/EditForm.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/EditForm.aspx?Mode=Upload&amp;CheckInComment=&amp;ID=3454&amp;RootFolder=%2FApps00%2FShared%20Documents&amp;IsDlg=1" />
      </Headers>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam37.MSOSPWebPartManager_ExitingDesignMode" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="] = &quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;;&#xD;&#xA; " />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam38.MSOSPWebPartManager_StartWebPartEditingName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="] = &quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;;&#xD;&#xA; " />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam39.MSOSPWebPartManager_EndWebPartEditing" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="] = &quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;;&#xD;&#xA; " />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="Mode" Value="Upload" RecordedValue="Upload" CorrelationBinding="{{QueryStringParam502.Mode}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="CheckInComment" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ID" Value="3454" RecordedValue="3454" CorrelationBinding="{{QueryStringParam503.ID}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="RootFolder" Value="{{QueryStringParam504.RootFolder}}" RecordedValue="%2fApps00%2fShared+Documents" CorrelationBinding="{{QueryStringParam504.RootFolder}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsDlg" Value="{{QueryStringParam505.IsDlg}}" RecordedValue="1" CorrelationBinding="{{QueryStringParam505.IsDlg}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="_wpcmWpid" Value="{{$HIDDEN2._wpcmWpid}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="wpcmVal" Value="{{$HIDDEN2.wpcmVal}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_PostbackSource" Value="{{$HIDDEN2.MSOWebPartPage_PostbackSource}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_SelectedWpId" Value="{{$HIDDEN2.MSOTlPn_SelectedWpId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_View" Value="{{$HIDDEN2.MSOTlPn_View}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_ShowSettings" Value="{{$HIDDEN2.MSOTlPn_ShowSettings}}" RecordedValue="False" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_SelectedLibrary" Value="{{$HIDDEN2.MSOGallery_SelectedLibrary}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_FilterString" Value="{{$HIDDEN2.MSOGallery_FilterString}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_Button" Value="{{$HIDDEN2.MSOTlPn_Button}}" RecordedValue="none" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$toolBarTbl$RightRptControls$ctl00$ctl00$diidIOSaveItem" RecordedValue="ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$toolBarTbl$RightRptControls$ctl00$ctl00$diidIOSaveItem" CorrelationBinding="{{FormPostParam29.__EVENTTARGET}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN2.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__REQUESTDIGEST" Value="{{$HIDDEN2.__REQUESTDIGEST}}" RecordedValue="0x6D4B0310933B9D99481EBAEAAE10A2EB595721FE5FC78194876476AF427BEFFE351AE8A672FF1E67E149764597F3008D7B0BCD5A6C1D7AF858AF4BA26EFA210B,12 Jun 2018 10:17:26 -0000" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_ListSchemaVersion_{ed28192a-3b67-43d8-ba8a-dcca3ace7d0b}" Value="{{$HIDDEN2._ListSchemaVersion_{ed28192a-3b67-43d8-ba8a-dcca3ace7d0b}}" RecordedValue="95" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_DisplayModeName" Value="{{$HIDDEN2.MSOSPWebPartManager_DisplayModeName}}" RecordedValue="Browse" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_ExitingDesignMode" Value="{{$HIDDEN2.MSOSPWebPartManager_ExitingDesignMode}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_Shared" Value="{{$HIDDEN2.MSOWebPartPage_Shared}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_LayoutChanges" Value="{{$HIDDEN2.MSOLayout_LayoutChanges}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_InDesignMode" Value="{{$HIDDEN2.MSOLayout_InDesignMode}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wpSelected" Value="{{$HIDDEN2._wpSelected}}" RecordedValue="MSOZoneCell_WebPartWPQ2" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wzSelected" Value="{{$HIDDEN2._wzSelected}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_OldDisplayModeName" Value="{{$HIDDEN2.MSOSPWebPartManager_OldDisplayModeName}}" RecordedValue="Browse" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_StartWebPartEditingName" Value="{{$HIDDEN2.MSOSPWebPartManager_StartWebPartEditingName}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_EndWebPartEditing" Value="{{$HIDDEN2.MSOSPWebPartManager_EndWebPartEditing}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_maintainWorkspaceScrollPosition" Value="{{$HIDDEN2._maintainWorkspaceScrollPosition}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN2.__VIEWSTATE}}" RecordedValue="/wEPDwUKLTk3NzIwMzI3NQ9kFgJmD2QWAgIBDxYCHgVjbGFzcwUJbXMtZGlhbG9nFgQCAQ9kFgICGQ9kFgICAw9kFgICAQ9kFgJmDxQrAAZkBS5odHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215L1BlcnNvbi5hc3B4BSNodHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215LwUfL0FwcHMwMC9fbGF5b3V0cy8xNS9teXN1YnMuYXNweAWgAi9BcHBzMDAvX2xheW91dHMvMTUvcmVnaW9uYWxzZXRuZy5hc3B4P3R5cGU9dXNlciZzb3VyY2U9aHR0cHMlM0ElMkYlMkZzcCUyRWNvcmRpc3NvbHV0aW9ucyUyRWNvbSUyRkFwcHMwMCUyRlNoYXJlZCUyMERvY3VtZW50cyUyRkZvcm1zJTJGRWRpdEZvcm0lMkVhc3B4JTNGTW9kZSUzRFVwbG9hZCUyNmFtcCUzQkNoZWNrSW5Db21tZW50JTNEJTI2YW1wJTNCSUQlM0QzNDU0JTI2YW1wJTNCUm9vdEZvbGRlciUzRCUyNTJGQXBwczAwJTI1MkZTaGFyZWQlMjUyMERvY3VtZW50cyUyNmFtcCUzQklzRGxnJTNEMQX0Amh0dHBzOi8vc3AuZXhjZWxzdXBwb3J0Lm9yZzo0NDMvbXkvX2xheW91dHMvMTUvRWRpdFByb2ZpbGUuYXNweD9Vc2VyU2V0dGluZ3NQcm92aWRlcj0yMzRiZjBlZCUyRDcwZGIlMkQ0MTU4JTJEYTMzMiUyRDRkZmQ2ODNiNDE0OCZSZXR1cm5Vcmw9aHR0cHMlM0ElMkYlMkZzcCUyRWNvcmRpc3NvbHV0aW9ucyUyRWNvbSUyRkFwcHMwMCUyRlNoYXJlZCUyMERvY3VtZW50cyUyRkZvcm1zJTJGRWRpdEZvcm0lMkVhc3B4JTNGTW9kZSUzRFVwbG9hZCUyNmFtcCUzQkNoZWNrSW5Db21tZW50JTNEJTI2YW1wJTNCSUQlM0QzNDU0JTI2YW1wJTNCUm9vdEZvbGRlciUzRCUyNTJGQXBwczAwJTI1MkZTaGFyZWQlMjUyMERvY3VtZW50cyUyNmFtcCUzQklzRGxnJTNEMWQCBw9kFgYCAQ9kFgICAQ9kFgIFJmdfMTEyNmIwZjhfZTVlNl80Mjc3X2JhYTZfNDIzZGEwYmJhNDc3D2QWAmYPZBYGAgMPZBYCAgEPZBYEAgEPZBYCZg9kFgICAw8PFgYeBFRleHQFBFNhdmUeDU9uQ2xpZW50Q2xpY2sFbGlmICghUHJlU2F2ZUl0ZW0oKSkgcmV0dXJuIGZhbHNlO2lmIChTUENsaWVudEZvcm1zLkNsaWVudEZvcm1NYW5hZ2VyLlN1Ym1pdENsaWVudEZvcm0oJ1dQUTInKSkgcmV0dXJuIGZhbHNlOx4IVGFiSW5kZXgBAABkZAIDD2QWAmYPZBYCAgMPDxYGHglBY2Nlc3NLZXkFAUMfAQUGQ2FuY2VsHwIFTHNldFRpbWVvdXQoZnVuY3Rpb24oKXt3aW5kb3cuZnJhbWVFbGVtZW50LmNhbmNlbFBvcFVwKCk7fSwgMCk7IHJldHVybiBmYWxzZTtkZAIFD2QWAmYPZBYCAgMPZBYCZg9kFgICAQ8PFg4fAQULRGVsZXRlIEl0ZW0eCEltYWdlVXJsBR8vX2xheW91dHMvMTUvaW1hZ2VzL2RlbGl0ZW0uZ2lmHwQFAVgeEVBlcm1pc3Npb25Db250ZXh0CymKAU1pY3Jvc29mdC5TaGFyZVBvaW50LlV0aWxpdGllcy5QZXJtaXNzaW9uQ29udGV4dCwgTWljcm9zb2Z0LlNoYXJlUG9pbnQsIFZlcnNpb249MTYuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49NzFlOWJjZTExMWU5NDI5YwIeC1Blcm1pc3Npb25zKCmAAU1pY3Jvc29mdC5TaGFyZVBvaW50LlNQQmFzZVBlcm1pc3Npb25zLCBNaWNyb3NvZnQuU2hhcmVQb2ludCwgVmVyc2lvbj0xNi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03MWU5YmNlMTExZTk0MjljD0RlbGV0ZUxpc3RJdGVtcx8CBSByZXR1cm4gRGVsZXRlSXRlbUNvbmZpcm1hdGlvbigpOx4oQ2xpZW50T25DbGlja1NjcmlwdENvbnRhaW5pbmdQcmVmaXhlZFVybGRkZAIHD2QWAmYPZBYIAgMPZBYCZg9kFgQCAw8QD2QWAh4Ib25jaGFuZ2UFkAFqYXZhc2NyaXB0OkNoYW5nZUNvbnRlbnRUeXBlKCJjdGwwMF9jdGw0M19nXzExMjZiMGY4X2U1ZTZfNDI3N19iYWE2XzQyM2RhMGJiYTQ3N19jdGwwMF9jdGwwMl9jdGwwMF9jdGwwMV9jdGwwMF9Db250ZW50VHlwZUNob2ljZSIpO3JldHVybiBmYWxzZTsPFgJmAgEWAhAFD0NvcmRpcyBEb2N1bWVudAVKMHgwMTAxMDBDODUyREUzMjI4NDI2RTQ4OUEzQUZEM0ZFQTJGNDExMTAwRTk3N0Q4N0Q5RjQxNTY0NThBNDBFQ0RGQ0E1Q0I3MEFnEAUZQ29yZGlzIExpbmsgdG8gYSBEb2N1bWVudAUqMHgwMTAxMEEwMDg2MzVFQjlBMzVDQjZBNDc4NTY1NUJGQzA5QkY4RDc4Z2RkAgUPDxYGHwFlHghDc3NDbGFzcwULbXMtbWV0YWRhdGEeBF8hU0ICAmRkAgUPZBYCZg9kFgICAQ9kFgxmD2QWAgIBD2QWAmYPZBYCAgkPFgIeE1ByZXZpb3VzQ29udHJvbE1vZGULKYgBTWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViQ29udHJvbHMuU1BDb250cm9sTW9kZSwgTWljcm9zb2Z0LlNoYXJlUG9pbnQsIFZlcnNpb249MTYuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49NzFlOWJjZTExMWU5NDI5YwJkAgEPZBYCAgEPZBYCZg9kFgICCQ8WAh8MCysGAmQCAg9kFgICAQ9kFgJmD2QWAgIJDxYCHwwLKwYCZAIDD2QWAgIBD2QWAmYPZBYCAgkPFgIfDAsrBgJkAgQPZBYCAgEPZBYCZg9kFgICCQ8WAh8MCysGAmQCBQ9kFgICAQ9kFgJmD2QWAgIJDxYCHwwLKwYCZAIHD2QWAmYPZBYEAgMPFgIfDAsrBgEWAmYPFgIfDAsrBgFkAgUPFgIfDAsrBgEWAmYPFgIfDAsrBgFkAhEPZBYEZg9kFgICAQ9kFgJmD2QWBgIDDxYCHwwLKwYBZAIFD2QWBAIBDxYCHwwLKwYBZAIDDxYCHwwLKwYBZAIHD2QWBAIBDxYCHwwLKwYBZAIDDxYCHwwLKwYBZAIBD2QWBAIBD2QWAmYPZBYCAgMPDxYGHwEFBFNhdmUfAgVsaWYgKCFQcmVTYXZlSXRlbSgpKSByZXR1cm4gZmFsc2U7aWYgKFNQQ2xpZW50Rm9ybXMuQ2xpZW50Rm9ybU1hbmFnZXIuU3VibWl0Q2xpZW50Rm9ybSgnV1BRMicpKSByZXR1cm4gZmFsc2U7HwMBAABkZAIDD2QWAmYPZBYCAgMPDxYGHwQFAUMfAQUGQ2FuY2VsHwIFTHNldFRpbWVvdXQoZnVuY3Rpb24oKXt3aW5kb3cuZnJhbWVFbGVtZW50LmNhbmNlbFBvcFVwKCk7fSwgMCk7IHJldHVybiBmYWxzZTtkZAIFD2QWAgICD2QWBAIBD2QWAgIDD2QWAmYPZBYEAgMPZBYIAgEPFgYeE0NsaWVudE9uQ2xpY2tTY3JpcHQFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkfCAV5RW5zdXJlU2NyaXB0RnVuYygnc2hhcmluZy5qcycsICdEaXNwbGF5U2hhcmVkV2l0aERpYWxvZycsIGZ1bmN0aW9uICgpIHsgRGlzcGxheVNoYXJlZFdpdGhEaWFsb2coJ1x1MDAyZkFwcHMwMFx1MDAyZicpOyB9KR4YQ2xpZW50T25DbGlja05hdmlnYXRlVXJsZGQCBQ8WAh4HVmlzaWJsZWhkAgsPFgIfD2hkAhIPZBYCZg8PFgYeHFByZXZpb3VzQXV0aG9yaW5nSXRlbVZlcnNpb24FATEeGlByZXZpb3VzQXV0aG9yaW5nSXRlbU93bmVyBQQzNDU0HhxQcmV2aW91c0F1dGhvcmluZ0NvbnRyb2xNb2RlCysGAmRkAgQPDxYCHwQFAS9kZAIDD2QWAgIBD2QWAgIBD2QWBgIBDw8WBB8LAgIfCgUXbXMtcHJvbW90ZWRBY3Rpb25CdXR0b25kZAIDD2QWAmYPDxYEHwsCAh8KBRdtcy1wcm9tb3RlZEFjdGlvbkJ1dHRvbmRkAgUPDxYGHwoFF21zLXByb21vdGVkQWN0aW9uQnV0dG9uHwsCAh8PaGRkAhMPZBYCAgEPZBYCAg0PDxYCHw9oZBYCAgEPZBYCZg9kFgICAw9kFgICBQ9kFgICAQ88KwAJAQAPFgQeDVBhdGhTZXBhcmF0b3IECB4NTmV2ZXJFeHBhbmRlZGdkZBgBBRdjdGwwMCRUb3BOYXZpZ2F0aW9uTWVudQ8PZAUUSG9tZVxBcHBzICYgUHJvZHVjdHNkyeGd53sJvWDKvmoLOWBgbVpvps6qlkUsFGLgWmO5frE=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN2.__VIEWSTATEGENERATOR}}" RecordedValue="2DB155A3" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN2.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN2.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN2.__EVENTVALIDATION}}" RecordedValue="/wEdAApYAEjEkNw1AfeO2TzFT5GoLmXyYwA+OfFaG5A2lz8nCLUgFLpnKOjvBAU2tXnwD0zcGx/ClmkNDkC6bI6ZjzGF4Y7PxaQ7vJ4c+yiHAL1cBA+pSN72eugVSovJ6GFyqLg4gYOetJ/ZZMCFwawqweQeNR224PUFoB078cRC/DtDfLacWTUWncfeq1XYE1tA88Emq1rCZTxXSVwfVenbodw8eYVhQQDjVJF6V7iNWljvpPtvEmtK+ZDEnJbHA5dKejc=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl44$ctl04" Value="Ribbon.DocLibListForm.Edit" RecordedValue="Ribbon.DocLibListForm.Edit" CorrelationBinding="{{FormPostParam30.ctl00$ctl44$ctl04}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl01$ctl00$ContentTypeChoice" Value="0x010100C852DE3228426E489A3AFD3FEA2F411100E977D87D9F4156458A40ECDFCA5CB70A" RecordedValue="0x010100C852DE3228426E489A3AFD3FEA2F411100E977D87D9F4156458A40ECDFCA5CB70A" CorrelationBinding="{{FormPostParam31.ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl01$ctl00$ContentTypeChoice}}" UrlEncode="True" />
        <FormPostParameter Name="Status_1dab9b48-2d1a-47b3-878c-8e84f0d211ba_Radio" Value="DropDownButton" RecordedValue="DropDownButton" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl06$ctl00$owshiddenversion" Value="{{$HIDDEN2.ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl06$ctl00$owshiddenversion}}" RecordedValue="1" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_FileLeafRef" Value="File for the version 1.xlsx" RecordedValue="File for the version 1.xlsx" CorrelationBinding="{{FormPostParam32.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_FileLeafRef}}" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Title" Value="Cordis myFidoc English Template" RecordedValue="Cordis myFidoc English Template" CorrelationBinding="{{FormPostParam33.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Title}}" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Application" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Apps_x0020_Content_x0020_Type" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Status" Value="Draft" RecordedValue="Draft" CorrelationBinding="{{FormPostParam34.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Status}}" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Con_Tech" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_owshiddenversion" Value="1" RecordedValue="1" CorrelationBinding="{{FormPostParam35.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_owshiddenversion}}" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_SubmitClientForm" Value="true" RecordedValue="true" CorrelationBinding="{{FormPostParam36.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_SubmitClientForm}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Guid="8ee961a0-9857-42d9-aff9-e904102ab915" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/blank.htm" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="3ade2773-30f3-485a-87be-8f0ef57c2a24" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx?InitialTabId=Ribbon%2ERead&amp;VisibilityContext=WSSTabPersistence#InplviewHash126715b7-b5f8-4adb-8a3a-a94d208c20a5=FilterField1%3DApplication-FilterValue1%3DmyMaterial" ReportingName="" IgnoreHttpStatusCode="False">
      <QueryStringParameters>
        <QueryStringParameter Name="InitialTabId" Value="Ribbon%2ERead" RecordedValue="Ribbon%2ERead" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="VisibilityContext" Value="WSSTabPersistence" RecordedValue="WSSTabPersistence" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="_wpcmWpid" Value="{{$HIDDEN1._wpcmWpid}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="wpcmVal" Value="{{$HIDDEN1.wpcmVal}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_PostbackSource" Value="{{$HIDDEN1.MSOWebPartPage_PostbackSource}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_SelectedWpId" Value="{{$HIDDEN1.MSOTlPn_SelectedWpId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_View" Value="{{$HIDDEN1.MSOTlPn_View}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_ShowSettings" Value="{{$HIDDEN1.MSOTlPn_ShowSettings}}" RecordedValue="False" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_SelectedLibrary" Value="{{$HIDDEN1.MSOGallery_SelectedLibrary}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_FilterString" Value="{{$HIDDEN1.MSOGallery_FilterString}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_Button" Value="{{$HIDDEN1.MSOTlPn_Button}}" RecordedValue="none" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__REQUESTDIGEST" Value="{{$HIDDEN1.__REQUESTDIGEST}}" RecordedValue="0x85E8844641A71353370C70D6874FFA955698F4473E7BB74331B7ABD4F4D3EEBBF3C541472CCE176924F5E4AA0100B8715F1145FB5741AE68D8B23C1B42040B69,12 Jun 2018 10:16:41 -0000" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_DisplayModeName" Value="{{$HIDDEN1.MSOSPWebPartManager_DisplayModeName}}" RecordedValue="Browse" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_ExitingDesignMode" Value="{{$HIDDEN1.MSOSPWebPartManager_ExitingDesignMode}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_Shared" Value="{{$HIDDEN1.MSOWebPartPage_Shared}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_LayoutChanges" Value="{{$HIDDEN1.MSOLayout_LayoutChanges}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_InDesignMode" Value="{{$HIDDEN1.MSOLayout_InDesignMode}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wpSelected" Value="{{$HIDDEN1._wpSelected}}" RecordedValue="MSOZoneCell_WebPartWPQ2" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wzSelected" Value="{{$HIDDEN1._wzSelected}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_OldDisplayModeName" Value="{{$HIDDEN1.MSOSPWebPartManager_OldDisplayModeName}}" RecordedValue="Browse" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_StartWebPartEditingName" Value="{{$HIDDEN1.MSOSPWebPartManager_StartWebPartEditingName}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_EndWebPartEditing" Value="{{$HIDDEN1.MSOSPWebPartManager_EndWebPartEditing}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_maintainWorkspaceScrollPosition" Value="{{$HIDDEN1._maintainWorkspaceScrollPosition}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="/wEPDwUJMjI4MzQ1ODc1D2QWAmYPZBYCAgEPZBYEAgEPZBYCAhkPZBYCAgMPZBYCAgEPZBYCZg8UKwAGZAUuaHR0cHM6Ly9zcC5leGNlbHN1cHBvcnQub3JnOjQ0My9teS9QZXJzb24uYXNweAUjaHR0cHM6Ly9zcC5leGNlbHN1cHBvcnQub3JnOjQ0My9teS8FHy9BcHBzMDAvX2xheW91dHMvMTUvbXlzdWJzLmFzcHgFnwEvQXBwczAwL19sYXlvdXRzLzE1L3JlZ2lvbmFsc2V0bmcuYXNweD90eXBlPXVzZXImc291cmNlPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkZTaGFyZWQlMjBEb2N1bWVudHMlMkZGb3JtcyUyRmFsbCUyMGRvY3VtZW50cyUyRWFzcHgF8wFodHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215L19sYXlvdXRzLzE1L0VkaXRQcm9maWxlLmFzcHg/VXNlclNldHRpbmdzUHJvdmlkZXI9MjM0YmYwZWQlMkQ3MGRiJTJENDE1OCUyRGEzMzIlMkQ0ZGZkNjgzYjQxNDgmUmV0dXJuVXJsPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkZTaGFyZWQlMjBEb2N1bWVudHMlMkZGb3JtcyUyRmFsbCUyMGRvY3VtZW50cyUyRWFzcHhkAgcPZBYIAgEPZBYCAgEPZBYCBSZnXzEyNjcxNWI3X2I1ZjhfNGFkYl84YTNhX2E5NGQyMDhjMjBhNRAPFgYeC1BhcmFtVmFsdWVzMsgIAAEAAAD/////AQAAAAAAAAAMAgAAAFhNaWNyb3NvZnQuU2hhcmVQb2ludCwgVmVyc2lvbj0xNi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03MWU5YmNlMTExZTk0MjljBQEAAAA9TWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViUGFydFBhZ2VzLlBhcmFtZXRlck5hbWVWYWx1ZUhhc2h0YWJsZQEAAAAFX2NvbGwDHFN5c3RlbS5Db2xsZWN0aW9ucy5IYXNodGFibGUCAAAACQMAAAAEAwAAABxTeXN0ZW0uQ29sbGVjdGlvbnMuSGFzaHRhYmxlBwAAAApMb2FkRmFjdG9yB1ZlcnNpb24IQ29tcGFyZXIQSGFzaENvZGVQcm92aWRlcghIYXNoU2l6ZQRLZXlzBlZhbHVlcwAAAwMABQULCBxTeXN0ZW0uQ29sbGVjdGlvbnMuSUNvbXBhcmVyJFN5c3RlbS5Db2xsZWN0aW9ucy5JSGFzaENvZGVQcm92aWRlcgjsUTg/DQAAAAoKEQAAAAkEAAAACQUAAAAQBAAAAAsAAAAGBgAAAA9Ob0Fubm91bmNlbWVudHMGBwAAAApGaWx0ZXJMaW5rBggAAAANaWRQcmVzRW5hYmxlZAYJAAAACW9wZW5fbWVudQYKAAAAClNlbGVjdGVkSUQGCwAAABBkdnRfcHJldnBhZ2VkYXRhBgwAAAARZHZ0X3N0YXJ0cG9zaXRpb24GDQAAABVPcGVuTWVudUtleUFjY2Vzc2libGUGDgAAABBkdnRfbmV4dHBhZ2VkYXRhBg8AAAATc2VsZWN0X2Rlc2VsZWN0X2FsbAYQAAAAFE5vQW5ub3VuY2VtZW50c0hvd1RvEAUAAAALAAAABhEAAABTVGhlcmUgYXJlIG5vIGl0ZW1zIHRvIHNob3cgaW4gdGhpcyB2aWV3IG9mIHRoZSAiU2hhcmVkIERvY3VtZW50cyIgZG9jdW1lbnQgbGlicmFyeS4GEgAAAAE/BhMAAAAgUHJlc2VuY2UgZW5hYmxlZCBmb3IgdGhpcyBjb2x1bW4GFAAAAAlPcGVuIE1lbnUGFQAAAAItMQYWAAAAM1BhZ2VkPVRSVUUmUGFnZWRQcmV2PVRSVUUmcF9Hcm91cENvbDE9JnBfR3JvdXBDb2wyPQYXAAAAAAYYAAAALlVzZSBTSElGVCtFTlRFUiB0byBvcGVuIHRoZSBtZW51IChuZXcgd2luZG93KS4GGQAAADVQYWdlZD1UUlVFJnBfR3JvdXBDb2wxPW15SVImcF9Hcm91cENvbDI9MDIlMjBPdmVydmlldwYaAAAAHFNlbGVjdCBvciBkZXNlbGVjdCBhbGwgaXRlbXMGGwAAACtUbyBhZGQgYSBuZXcgaXRlbSwgY2xpY2sgIk5ldyIgb3IgIlVwbG9hZCIuCx4QRmlsdGVyT3BlcmF0aW9uczKNBQABAAAA/////wEAAAAAAAAABAEAAACTAlN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkRpY3Rpb25hcnlgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbTWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViUGFydFBhZ2VzLkZpbHRlck9wZXJhdGlvbiwgTWljcm9zb2Z0LlNoYXJlUG9pbnQsIFZlcnNpb249MTYuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49NzFlOWJjZTExMWU5NDI5Y11dAwAAAAdWZXJzaW9uCENvbXBhcmVyCEhhc2hTaXplAAMACJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0IAAAAAAkCAAAAAAAAAAQCAAAAkgFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5HZW5lcmljRXF1YWxpdHlDb21wYXJlcmAxW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQAAAAALHgxfdmlld0NvdW50ZXJmZGQWAmYPZBYCZg9kFgRmDxYGHgxGZWF0dXJlU2NvcGUFBFNpdGUeCExvY2F0aW9uBSFNaWNyb3NvZnQuU2hhcmVQb2ludC5TdGFuZGFyZE1lbnUeB0dyb3VwSWQFEFZpZXdTZWxlY3Rvck1lbnVkAgEPDxYCHglBY2Nlc3NLZXkFAVdkZAIFD2QWAgICD2QWBAIBD2QWAgIDD2QWAmYPZBYEAgMPZBYIAgEPFgYeE0NsaWVudE9uQ2xpY2tTY3JpcHQFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkeKENsaWVudE9uQ2xpY2tTY3JpcHRDb250YWluaW5nUHJlZml4ZWRVcmwFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkeGENsaWVudE9uQ2xpY2tOYXZpZ2F0ZVVybGRkAgUPFgIeB1Zpc2libGVoZAILDxYCHwpoZAISD2QWAmYPDxYGHhxQcmV2aW91c0F1dGhvcmluZ0l0ZW1WZXJzaW9uZR4aUHJldmlvdXNBdXRob3JpbmdJdGVtT3duZXJlHhxQcmV2aW91c0F1dGhvcmluZ0NvbnRyb2xNb2RlCymIAU1pY3Jvc29mdC5TaGFyZVBvaW50LldlYkNvbnRyb2xzLlNQQ29udHJvbE1vZGUsIE1pY3Jvc29mdC5TaGFyZVBvaW50LCBWZXJzaW9uPTE2LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTcxZTliY2UxMTFlOTQyOWMAZGQCBA8PFgIfBgUBL2RkAgMPZBYCAgEPZBYCAgEPZBYGAgEPDxYEHgRfIVNCAgIeCENzc0NsYXNzBRdtcy1wcm9tb3RlZEFjdGlvbkJ1dHRvbmRkAgMPZBYCZg8PFgQfDgICHw8FF21zLXByb21vdGVkQWN0aW9uQnV0dG9uZGQCBQ8PFgYfDwUXbXMtcHJvbW90ZWRBY3Rpb25CdXR0b24fDgICHwpoZGQCDw9kFgICAQ9kFgICAQ88KwAFAQAPFgIeFVBhcmVudExldmVsc0Rpc3BsYXllZGZkZAITD2QWAgIBD2QWBgIHD2QWAgIDDw8WAh8KaGRkAgkPZBYCAgEPFgIfCmhkAg0PDxYCHwpoZBYCAgEPZBYCZg9kFgICAw9kFgICBQ9kFgICAQ88KwAJAQAPFgQeDVBhdGhTZXBhcmF0b3IECB4NTmV2ZXJFeHBhbmRlZGdkZBgCBS1jdGwwMCRQbGFjZUhvbGRlckxlZnROYXZCYXIkVjRRdWlja0xhdW5jaE1lbnUPD2QFGkxpYnJhcmllc1xTaGFyZWQgRG9jdW1lbnRzZAUXY3RsMDAkVG9wTmF2aWdhdGlvbk1lbnUPD2QFFEhvbWVcQXBwcyAmIFByb2R1Y3RzZDbazdh6QNWgT1ZU+ZmJDIFDS06rjHs85E0HYHgTeeCU" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="06E2AF16" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN1.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN1.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN1.__EVENTVALIDATION}}" RecordedValue="/wEdAAPP+lotmyEIrDH1xYYcZbNsLmXyYwA+OfFaG5A2lz8nCLUgFLpnKOjvBAU2tXnwD0xmuX9v0xRqKMlbWztWtWznqd8sQh601nRczT968uN6vQ==" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl44$ctl04" Value="Ribbon.Read" RecordedValue="Ribbon.Read" CorrelationBinding="{{FormPostParam1.ctl00$ctl44$ctl04}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="be495ab8-b6b7-4309-a9bf-8347c6746a2e" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
      </Headers>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam1663.VisibilityContext" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;VisibilityContext=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam1688.VisibilityContext" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;VisibilityContext=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="InitialTabId" Value="Ribbon%2ERead" RecordedValue="Ribbon%2ERead" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="VisibilityContext" Value="WSSTabPersistence" RecordedValue="WSSTabPersistence" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="_wpcmWpid" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="wpcmVal" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_PostbackSource" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_SelectedWpId" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_View" Value="{{FormPostParam40.MSOTlPn_View}}" RecordedValue="0" CorrelationBinding="{{FormPostParam40.MSOTlPn_View}}" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_ShowSettings" Value="False" RecordedValue="False" CorrelationBinding="{{FormPostParam41.MSOTlPn_ShowSettings}}" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_SelectedLibrary" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_FilterString" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_Button" Value="none" RecordedValue="none" CorrelationBinding="{{FormPostParam42.MSOTlPn_Button}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__REQUESTDIGEST" Value="{{FormPostParam49.__REQUESTDIGEST}}" RecordedValue="0x85E8844641A71353370C70D6874FFA955698F4473E7BB74331B7ABD4F4D3EEBBF3C541472CCE176924F5E4AA0100B8715F1145FB5741AE68D8B23C1B42040B69,12 Jun 2018 10:16:41 -0000" CorrelationBinding="{{FormPostParam49.__REQUESTDIGEST}}" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_DisplayModeName" Value="Browse" RecordedValue="Browse" CorrelationBinding="{{FormPostParam43.MSOSPWebPartManager_DisplayModeName}}" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_ExitingDesignMode" Value="false" RecordedValue="false" CorrelationBinding="{{FormPostParam37.MSOSPWebPartManager_ExitingDesignMode}}" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_Shared" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_LayoutChanges" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_InDesignMode" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wpSelected" Value="MSOZoneCell_WebPartWPQ2" RecordedValue="MSOZoneCell_WebPartWPQ2" CorrelationBinding="{{FormPostParam44._wpSelected}}" UrlEncode="True" />
        <FormPostParameter Name="_wzSelected" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_OldDisplayModeName" Value="Browse" RecordedValue="Browse" CorrelationBinding="{{FormPostParam45.MSOSPWebPartManager_OldDisplayModeName}}" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_StartWebPartEditingName" Value="false" RecordedValue="false" CorrelationBinding="{{FormPostParam38.MSOSPWebPartManager_StartWebPartEditingName}}" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_EndWebPartEditing" Value="false" RecordedValue="false" CorrelationBinding="{{FormPostParam39.MSOSPWebPartManager_EndWebPartEditing}}" UrlEncode="True" />
        <FormPostParameter Name="_maintainWorkspaceScrollPosition" Value="{{FormPostParam46._maintainWorkspaceScrollPosition}}" RecordedValue="0" CorrelationBinding="{{FormPostParam46._maintainWorkspaceScrollPosition}}" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{FormPostParam50.__VIEWSTATE}}" RecordedValue="/wEPDwUJMjI4MzQ1ODc1D2QWAmYPZBYCAgEPZBYEAgEPZBYCAhkPZBYCAgMPZBYCAgEPZBYCZg8UKwAGZAUuaHR0cHM6Ly9zcC5leGNlbHN1cHBvcnQub3JnOjQ0My9teS9QZXJzb24uYXNweAUjaHR0cHM6Ly9zcC5leGNlbHN1cHBvcnQub3JnOjQ0My9teS8FHy9BcHBzMDAvX2xheW91dHMvMTUvbXlzdWJzLmFzcHgFnwEvQXBwczAwL19sYXlvdXRzLzE1L3JlZ2lvbmFsc2V0bmcuYXNweD90eXBlPXVzZXImc291cmNlPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkZTaGFyZWQlMjBEb2N1bWVudHMlMkZGb3JtcyUyRmFsbCUyMGRvY3VtZW50cyUyRWFzcHgF8wFodHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215L19sYXlvdXRzLzE1L0VkaXRQcm9maWxlLmFzcHg/VXNlclNldHRpbmdzUHJvdmlkZXI9MjM0YmYwZWQlMkQ3MGRiJTJENDE1OCUyRGEzMzIlMkQ0ZGZkNjgzYjQxNDgmUmV0dXJuVXJsPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkZTaGFyZWQlMjBEb2N1bWVudHMlMkZGb3JtcyUyRmFsbCUyMGRvY3VtZW50cyUyRWFzcHhkAgcPZBYIAgEPZBYCAgEPZBYCBSZnXzEyNjcxNWI3X2I1ZjhfNGFkYl84YTNhX2E5NGQyMDhjMjBhNRAPFgYeC1BhcmFtVmFsdWVzMsgIAAEAAAD/////AQAAAAAAAAAMAgAAAFhNaWNyb3NvZnQuU2hhcmVQb2ludCwgVmVyc2lvbj0xNi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03MWU5YmNlMTExZTk0MjljBQEAAAA9TWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViUGFydFBhZ2VzLlBhcmFtZXRlck5hbWVWYWx1ZUhhc2h0YWJsZQEAAAAFX2NvbGwDHFN5c3RlbS5Db2xsZWN0aW9ucy5IYXNodGFibGUCAAAACQMAAAAEAwAAABxTeXN0ZW0uQ29sbGVjdGlvbnMuSGFzaHRhYmxlBwAAAApMb2FkRmFjdG9yB1ZlcnNpb24IQ29tcGFyZXIQSGFzaENvZGVQcm92aWRlcghIYXNoU2l6ZQRLZXlzBlZhbHVlcwAAAwMABQULCBxTeXN0ZW0uQ29sbGVjdGlvbnMuSUNvbXBhcmVyJFN5c3RlbS5Db2xsZWN0aW9ucy5JSGFzaENvZGVQcm92aWRlcgjsUTg/DQAAAAoKEQAAAAkEAAAACQUAAAAQBAAAAAsAAAAGBgAAAA9Ob0Fubm91bmNlbWVudHMGBwAAAApGaWx0ZXJMaW5rBggAAAANaWRQcmVzRW5hYmxlZAYJAAAACW9wZW5fbWVudQYKAAAAClNlbGVjdGVkSUQGCwAAABBkdnRfcHJldnBhZ2VkYXRhBgwAAAARZHZ0X3N0YXJ0cG9zaXRpb24GDQAAABVPcGVuTWVudUtleUFjY2Vzc2libGUGDgAAABBkdnRfbmV4dHBhZ2VkYXRhBg8AAAATc2VsZWN0X2Rlc2VsZWN0X2FsbAYQAAAAFE5vQW5ub3VuY2VtZW50c0hvd1RvEAUAAAALAAAABhEAAABTVGhlcmUgYXJlIG5vIGl0ZW1zIHRvIHNob3cgaW4gdGhpcyB2aWV3IG9mIHRoZSAiU2hhcmVkIERvY3VtZW50cyIgZG9jdW1lbnQgbGlicmFyeS4GEgAAAAE/BhMAAAAgUHJlc2VuY2UgZW5hYmxlZCBmb3IgdGhpcyBjb2x1bW4GFAAAAAlPcGVuIE1lbnUGFQAAAAItMQYWAAAAM1BhZ2VkPVRSVUUmUGFnZWRQcmV2PVRSVUUmcF9Hcm91cENvbDE9JnBfR3JvdXBDb2wyPQYXAAAAAAYYAAAALlVzZSBTSElGVCtFTlRFUiB0byBvcGVuIHRoZSBtZW51IChuZXcgd2luZG93KS4GGQAAADVQYWdlZD1UUlVFJnBfR3JvdXBDb2wxPW15SVImcF9Hcm91cENvbDI9MDIlMjBPdmVydmlldwYaAAAAHFNlbGVjdCBvciBkZXNlbGVjdCBhbGwgaXRlbXMGGwAAACtUbyBhZGQgYSBuZXcgaXRlbSwgY2xpY2sgIk5ldyIgb3IgIlVwbG9hZCIuCx4QRmlsdGVyT3BlcmF0aW9uczKNBQABAAAA/////wEAAAAAAAAABAEAAACTAlN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkRpY3Rpb25hcnlgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbTWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViUGFydFBhZ2VzLkZpbHRlck9wZXJhdGlvbiwgTWljcm9zb2Z0LlNoYXJlUG9pbnQsIFZlcnNpb249MTYuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49NzFlOWJjZTExMWU5NDI5Y11dAwAAAAdWZXJzaW9uCENvbXBhcmVyCEhhc2hTaXplAAMACJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0IAAAAAAkCAAAAAAAAAAQCAAAAkgFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5HZW5lcmljRXF1YWxpdHlDb21wYXJlcmAxW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQAAAAALHgxfdmlld0NvdW50ZXJmZGQWAmYPZBYCZg9kFgRmDxYGHgxGZWF0dXJlU2NvcGUFBFNpdGUeCExvY2F0aW9uBSFNaWNyb3NvZnQuU2hhcmVQb2ludC5TdGFuZGFyZE1lbnUeB0dyb3VwSWQFEFZpZXdTZWxlY3Rvck1lbnVkAgEPDxYCHglBY2Nlc3NLZXkFAVdkZAIFD2QWAgICD2QWBAIBD2QWAgIDD2QWAmYPZBYEAgMPZBYIAgEPFgYeE0NsaWVudE9uQ2xpY2tTY3JpcHQFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkeKENsaWVudE9uQ2xpY2tTY3JpcHRDb250YWluaW5nUHJlZml4ZWRVcmwFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkeGENsaWVudE9uQ2xpY2tOYXZpZ2F0ZVVybGRkAgUPFgIeB1Zpc2libGVoZAILDxYCHwpoZAISD2QWAmYPDxYGHhxQcmV2aW91c0F1dGhvcmluZ0l0ZW1WZXJzaW9uZR4aUHJldmlvdXNBdXRob3JpbmdJdGVtT3duZXJlHhxQcmV2aW91c0F1dGhvcmluZ0NvbnRyb2xNb2RlCymIAU1pY3Jvc29mdC5TaGFyZVBvaW50LldlYkNvbnRyb2xzLlNQQ29udHJvbE1vZGUsIE1pY3Jvc29mdC5TaGFyZVBvaW50LCBWZXJzaW9uPTE2LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTcxZTliY2UxMTFlOTQyOWMAZGQCBA8PFgIfBgUBL2RkAgMPZBYCAgEPZBYCAgEPZBYGAgEPDxYEHgRfIVNCAgIeCENzc0NsYXNzBRdtcy1wcm9tb3RlZEFjdGlvbkJ1dHRvbmRkAgMPZBYCZg8PFgQfDgICHw8FF21zLXByb21vdGVkQWN0aW9uQnV0dG9uZGQCBQ8PFgYfDwUXbXMtcHJvbW90ZWRBY3Rpb25CdXR0b24fDgICHwpoZGQCDw9kFgICAQ9kFgICAQ88KwAFAQAPFgIeFVBhcmVudExldmVsc0Rpc3BsYXllZGZkZAITD2QWAgIBD2QWBgIHD2QWAgIDDw8WAh8KaGRkAgkPZBYCAgEPFgIfCmhkAg0PDxYCHwpoZBYCAgEPZBYCZg9kFgICAw9kFgICBQ9kFgICAQ88KwAJAQAPFgQeDVBhdGhTZXBhcmF0b3IECB4NTmV2ZXJFeHBhbmRlZGdkZBgCBS1jdGwwMCRQbGFjZUhvbGRlckxlZnROYXZCYXIkVjRRdWlja0xhdW5jaE1lbnUPD2QFGkxpYnJhcmllc1xTaGFyZWQgRG9jdW1lbnRzZAUXY3RsMDAkVG9wTmF2aWdhdGlvbk1lbnUPD2QFFEhvbWVcQXBwcyAmIFByb2R1Y3RzZDbazdh6QNWgT1ZU+ZmJDIFDS06rjHs85E0HYHgTeeCU" CorrelationBinding="{{FormPostParam50.__VIEWSTATE}}" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="06E2AF16" RecordedValue="06E2AF16" CorrelationBinding="{{FormPostParam51.__VIEWSTATEGENERATOR}}" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{FormPostParam47.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="{{FormPostParam47.__SCROLLPOSITIONX}}" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{FormPostParam48.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="{{FormPostParam48.__SCROLLPOSITIONY}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{FormPostParam52.__EVENTVALIDATION}}" RecordedValue="/wEdAAPP+lotmyEIrDH1xYYcZbNsLmXyYwA+OfFaG5A2lz8nCLUgFLpnKOjvBAU2tXnwD0xmuX9v0xRqKMlbWztWtWznqd8sQh601nRczT968uN6vQ==" CorrelationBinding="{{FormPostParam52.__EVENTVALIDATION}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl44$ctl04" Value="Ribbon.Read" RecordedValue="Ribbon.Read" CorrelationBinding="{{FormPostParam53.ctl00$ctl44$ctl04}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Guid="cdfc7969-548e-4590-96cb-0a49a18e9e4a" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/shellicons.eot" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx?InitialTabId=Ribbon.Read&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="376603f3-e6a1-4e0c-9777-bb2646a06c6f" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_api/search/searchcenterurl" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Accept" Value="application/json;odata=verbose" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx?InitialTabId=Ribbon.Read&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="0d87f0c2-0a26-481d-9b38-e7e8ff48c96c" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx?InitialTabId=Ribbon.Read&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="80933605-82d4-4237-884a-d06dc5aff5c8" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx?InitialTabId=Ribbon.Read&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="POST" Guid="2cca5a56-794d-4a6b-be6b-5b9e667f3769" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/inplview.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx?InitialTabId=Ribbon.Read&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="List" Value="%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D" RecordedValue="%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="View" Value="%7B126715B7-B5F8-4ADB-8A3A-A94D208C20A5%7D" RecordedValue="%7B126715B7-B5F8-4ADB-8A3A-A94D208C20A5%7D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ViewCount" Value="0" RecordedValue="0" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsXslView" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsCSR" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ListViewPageUrl" Value="https%3A%2F%2Fsp.cordissolutions.com%2FApps00%2FShared%2520Documents%2FForms%2Fall%2520documents.aspx" RecordedValue="https%3A%2F%2Fsp.cordissolutions.com%2FApps00%2FShared%2520Documents%2FForms%2Fall%2520documents.aspx" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="FilterField1" Value="Application" RecordedValue="Application" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="FilterValue1" Value="myMaterial" RecordedValue="myMaterial" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody />
    </Request>
    <Request Method="GET" Guid="7755fc5a-a2c6-46d7-ab49-ef4b8d2d36d3" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_api/search/searchcenterurl" ThinkTime="12" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Accept" Value="application/json;odata=verbose" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx?InitialTabId=Ribbon.Read&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="7bbf74d0-9757-4fb4-a708-8380870e578c" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="GET" Guid="6dc6ec3f-b5b7-4193-a136-f7abccd2309a" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/shellicons.eot" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
        <Request Method="GET" Guid="707892e8-725b-426f-9ab3-4ee3ff858939" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_api/search/searchcenterurl" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Accept" Value="application/json;odata=verbose" />
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
          </Headers>
        </Request>
        <Request Method="GET" Guid="3cf5659a-a5e8-43e4-a510-b9b95b06a2f8" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
        <Request Method="GET" Guid="a2866562-d945-4402-90c8-94f128aaef3c" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="3" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
      </DependentRequests>
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx?InitialTabId=Ribbon.Read&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam60.__REQUESTDIGEST" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="11" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam67.__VIEWSTATE" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="23" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam69.__EVENTVALIDATION" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="27" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam59.MSOTlPn_ShowSettings" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="5" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam61.MSOSPWebPartManager_DisplayModeName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="12" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam62.MSOSPWebPartManager_ExitingDesignMode" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="13" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam63._wpSelected" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="17" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam64.MSOSPWebPartManager_OldDisplayModeName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="12" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam65.MSOSPWebPartManager_StartWebPartEditingName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="13" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam66.MSOSPWebPartManager_EndWebPartEditing" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="13" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam68.__VIEWSTATEGENERATOR" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="24" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
    </Request>
    <Request Method="POST" Guid="57b9c794-5382-4bae-96d1-26c679ff5810" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/inplview.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="List" Value="%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D" RecordedValue="%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="View" Value="%7BBFACA91F-93F2-4632-AB39-EEE92A5D06A2%7D" RecordedValue="%7BBFACA91F-93F2-4632-AB39-EEE92A5D06A2%7D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ViewCount" Value="0" RecordedValue="0" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsXslView" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsCSR" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ListViewPageUrl" Value="https%3A%2F%2Fsp.cordissolutions.com%2FApps00%2FShared%2520Documents%2FForms%2Fdetail%2520list%2520wo%2520folders%252001.aspx" RecordedValue="https%3A%2F%2Fsp.cordissolutions.com%2FApps00%2FShared%2520Documents%2FForms%2Fdetail%2520list%2520wo%2520folders%252001.aspx" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="SortField" Value="Modified" RecordedValue="Modified" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="SortDir" Value="Asc" RecordedValue="Asc" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody />
    </Request>
    <Request Method="GET" Guid="82b7bd52-1afe-4700-a761-310866e28a16" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" ThinkTime="2" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx#InplviewHashbfaca91f-93f2-4632-ab39-eee92a5d06a2=SortField%3DModified-SortDir%3DAsc" ReportingName="" IgnoreHttpStatusCode="False" />
    <Request Method="POST" Guid="a1d4a29f-0976-427e-a214-30b28ef27cb3" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/inplview.aspx" ThinkTime="2" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="List" Value="%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D" RecordedValue="%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="View" Value="%7BBFACA91F-93F2-4632-AB39-EEE92A5D06A2%7D" RecordedValue="%7BBFACA91F-93F2-4632-AB39-EEE92A5D06A2%7D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ViewCount" Value="0" RecordedValue="0" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsXslView" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsCSR" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ListViewPageUrl" Value="https%3A%2F%2Fsp.cordissolutions.com%2FApps00%2FShared%2520Documents%2FForms%2Fdetail%2520list%2520wo%2520folders%252001.aspx" RecordedValue="https%3A%2F%2Fsp.cordissolutions.com%2FApps00%2FShared%2520Documents%2FForms%2Fdetail%2520list%2520wo%2520folders%252001.aspx" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="SortField" Value="Modified" RecordedValue="Modified" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="SortDir" Value="Desc" RecordedValue="Desc" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody />
    </Request>
    <Request Method="POST" Guid="8d0c95e2-9dbd-4f6f-8848-80cfc9298121" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/inplview.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
      </Headers>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam54.MSOTlPn_View" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ing=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; cel" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam55.MSOTlPn_Button" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="dir=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; onm" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam56._maintainWorkspaceScrollPosition" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ing=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; cel" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam57.__SCROLLPOSITIONX" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ing=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; cel" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam58.__SCROLLPOSITIONY" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ing=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; cel" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam1965.SortField" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?SortField=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam1966.SortDir" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;SortDir=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="List" Value="%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D" RecordedValue="%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="View" Value="%7BBFACA91F-93F2-4632-AB39-EEE92A5D06A2%7D" RecordedValue="%7BBFACA91F-93F2-4632-AB39-EEE92A5D06A2%7D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ViewCount" Value="0" RecordedValue="0" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsXslView" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsCSR" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ListViewPageUrl" Value="https%3A%2F%2Fsp.cordissolutions.com%2FApps00%2FShared%2520Documents%2FForms%2Fdetail%2520list%2520wo%2520folders%252001.aspx" RecordedValue="https%3A%2F%2Fsp.cordissolutions.com%2FApps00%2FShared%2520Documents%2FForms%2Fdetail%2520list%2520wo%2520folders%252001.aspx" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsRibbon" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="Cmd" Value="EcbView" RecordedValue="EcbView" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="SortField" Value="Modified" RecordedValue="Modified" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="SortDir" Value="Desc" RecordedValue="Desc" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody />
    </Request>
    <Request Method="GET" Guid="1ec28e34-d369-4ec4-aee1-5baaf86d3c35" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/commandui.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="X-Requested-With" Value="XMLHttpRequest" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="ver" Value="823153556" RecordedValue="823153556" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="lcid" Value="1033" RecordedValue="1033" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="qt" Value="commandhandlers" RecordedValue="commandhandlers" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="POST" Guid="0e330536-ac61-4154-b1cc-6f5e728002d5" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/commandui.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="X-Requested-With" Value="XMLHttpRequest" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="ver" Value="823153556" RecordedValue="823153556" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="id" Value="Ribbon.Read" RecordedValue="Ribbon.Read" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="lcid" Value="1033" RecordedValue="1033" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="qt" Value="ribbonvisibletabdeep" RecordedValue="ribbonvisibletabdeep" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody />
    </Request>
    <Request Method="GET" Guid="555a43a6-8ef0-4bda-95bb-a54e09129306" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/tenantappinfo.ashx" ThinkTime="2" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="etag" Value="0" RecordedValue="0" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="lcid" Value="1033" RecordedValue="1033" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="POST" Guid="193ab9a6-09d6-460a-b263-479390cf8074" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/commandui.ashx" ThinkTime="6" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="X-Requested-With" Value="XMLHttpRequest" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="ver" Value="823153556" RecordedValue="823153556" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="id" Value="Ribbon.Document" RecordedValue="Ribbon.Document" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="lcid" Value="1033" RecordedValue="1033" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="qt" Value="ribbontab" RecordedValue="ribbontab" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody />
    </Request>
    <Request Method="POST" Guid="e98084c3-e5ad-49ee-82cd-1ce9f3f44b66" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_vti_bin/client.svc/ProcessQuery" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="X-Requested-With" Value="XMLHttpRequest" />
        <Header Name="X-RequestDigest" Value="0x1DA163A4391E660F03380E0DE8A7ABDDCE470D26F29DB975D6A6319C01298389C3B3CB4253A7D2F9FEED8EE39FC56F31EB1797E8705666EBF7CE91CE61380DFB,12 Jun 2018 10:17:55 -0000" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
      </Headers>
      <StringHttpBody ContentType="text/xml" InsertByteOrderMark="False">PABSAGUAcQB1AGUAcwB0ACAAeABtAGwAbgBzAD0AIgBoAHQAdABwADoALwAvAHMAYwBoAGUAbQBhAHMALgBtAGkAYwByAG8AcwBvAGYAdAAuAGMAbwBtAC8AcwBoAGEAcgBlAHAAbwBpAG4AdAAvAGMAbABpAGUAbgB0AHEAdQBlAHIAeQAvADIAMAAwADkAIgAgAFMAYwBoAGUAbQBhAFYAZQByAHMAaQBvAG4APQAiADEANQAuADAALgAwAC4AMAAiACAATABpAGIAcgBhAHIAeQBWAGUAcgBzAGkAbwBuAD0AIgAxADYALgAwAC4AMAAuADAAIgAgAEEAcABwAGwAaQBjAGEAdABpAG8AbgBOAGEAbQBlAD0AIgBKAGEAdgBhAHMAYwByAGkAcAB0ACAATABpAGIAcgBhAHIAeQAiAD4APABBAGMAdABpAG8AbgBzAD4APABFAHgAYwBlAHAAdABpAG8AbgBIAGEAbgBkAGwAaQBuAGcAUwBjAG8AcABlAFMAaQBtAHAAbABlACAASQBkAD0AIgAwACIAPgA8AE8AYgBqAGUAYwB0AFAAYQB0AGgAIABJAGQAPQAiADMAIgAgAE8AYgBqAGUAYwB0AFAAYQB0AGgASQBkAD0AIgAyACIAIAAvAD4APABPAGIAagBlAGMAdABQAGEAdABoACAASQBkAD0AIgA1ACIAIABPAGIAagBlAGMAdABQAGEAdABoAEkAZAA9ACIANAAiACAALwA+ADwATwBiAGoAZQBjAHQAUABhAHQAaAAgAEkAZAA9ACIANwAiACAATwBiAGoAZQBjAHQAUABhAHQAaABJAGQAPQAiADYAIgAgAC8APgA8AE8AYgBqAGUAYwB0AFAAYQB0AGgAIABJAGQAPQAiADkAIgAgAE8AYgBqAGUAYwB0AFAAYQB0AGgASQBkAD0AIgA4ACIAIAAvAD4APABPAGIAagBlAGMAdABQAGEAdABoACAASQBkAD0AIgAxADEAIgAgAE8AYgBqAGUAYwB0AFAAYQB0AGgASQBkAD0AIgAxADAAIgAgAC8APgA8AFEAdQBlAHIAeQAgAEkAZAA9ACIAMQAyACIAIABPAGIAagBlAGMAdABQAGEAdABoAEkAZAA9ACIAMQAwACIAPgA8AFEAdQBlAHIAeQAgAFMAZQBsAGUAYwB0AEEAbABsAFAAcgBvAHAAZQByAHQAaQBlAHMAPQAiAGYAYQBsAHMAZQAiAD4APABQAHIAbwBwAGUAcgB0AGkAZQBzAD4APABQAHIAbwBwAGUAcgB0AHkAIABOAGEAbQBlAD0AIgBGAGkAbABlAEwAZQBhAGYAUgBlAGYAIgAgAFMAYwBhAGwAYQByAFAAcgBvAHAAZQByAHQAeQA9ACIAdAByAHUAZQAiACAALwA+ADwALwBQAHIAbwBwAGUAcgB0AGkAZQBzAD4APAAvAFEAdQBlAHIAeQA+ADwALwBRAHUAZQByAHkAPgA8AE0AZQB0AGgAbwBkACAATgBhAG0AZQA9ACIAUgBlAGMAeQBjAGwAZQAiACAASQBkAD0AIgAxADMAIgAgAE8AYgBqAGUAYwB0AFAAYQB0AGgASQBkAD0AIgAxADAAIgAgAC8APgA8AC8ARQB4AGMAZQBwAHQAaQBvAG4ASABhAG4AZABsAGkAbgBnAFMAYwBvAHAAZQBTAGkAbQBwAGwAZQA+ADwALwBBAGMAdABpAG8AbgBzAD4APABPAGIAagBlAGMAdABQAGEAdABoAHMAPgA8AFMAdABhAHQAaQBjAFAAcgBvAHAAZQByAHQAeQAgAEkAZAA9ACIAMgAiACAAVAB5AHAAZQBJAGQAPQAiAHsAMwA3ADQANwBhAGQAYwBkAC0AYQAzAGMAMwAtADQAMQBiADkALQBiAGYAYQBiAC0ANABhADYANABkAGQAMgBmADEAZQAwAGEAfQAiACAATgBhAG0AZQA9ACIAQwB1AHIAcgBlAG4AdAAiACAALwA+ADwAUAByAG8AcABlAHIAdAB5ACAASQBkAD0AIgA0ACIAIABQAGEAcgBlAG4AdABJAGQAPQAiADIAIgAgAE4AYQBtAGUAPQAiAFcAZQBiACIAIAAvAD4APABQAHIAbwBwAGUAcgB0AHkAIABJAGQAPQAiADYAIgAgAFAAYQByAGUAbgB0AEkAZAA9ACIANAAiACAATgBhAG0AZQA9ACIATABpAHMAdABzACIAIAAvAD4APABNAGUAdABoAG8AZAAgAEkAZAA9ACIAOAAiACAAUABhAHIAZQBuAHQASQBkAD0AIgA2ACIAIABOAGEAbQBlAD0AIgBHAGUAdABCAHkASQBkACIAPgA8AFAAYQByAGEAbQBlAHQAZQByAHMAPgA8AFAAYQByAGEAbQBlAHQAZQByACAAVAB5AHAAZQA9ACIAUwB0AHIAaQBuAGcAIgA+AHsARQBEADIAOAAxADkAMgBBAC0AMwBCADYANwAtADQAMwBEADgALQBCAEEAOABBAC0ARABDAEMAQQAzAEEAQwBFADcARAAwAEIAfQA8AC8AUABhAHIAYQBtAGUAdABlAHIAPgA8AC8AUABhAHIAYQBtAGUAdABlAHIAcwA+ADwALwBNAGUAdABoAG8AZAA+ADwATQBlAHQAaABvAGQAIABJAGQAPQAiADEAMAAiACAAUABhAHIAZQBuAHQASQBkAD0AIgA4ACIAIABOAGEAbQBlAD0AIgBHAGUAdABJAHQAZQBtAEIAeQBJAGQAIgA+ADwAUABhAHIAYQBtAGUAdABlAHIAcwA+ADwAUABhAHIAYQBtAGUAdABlAHIAIABUAHkAcABlAD0AIgBOAHUAbQBiAGUAcgAiAD4AMwA0ADUANAA8AC8AUABhAHIAYQBtAGUAdABlAHIAPgA8AC8AUABhAHIAYQBtAGUAdABlAHIAcwA+ADwALwBNAGUAdABoAG8AZAA+ADwALwBPAGIAagBlAGMAdABQAGEAdABoAHMAPgA8AC8AUgBlAHEAdQBlAHMAdAA+AA==</StringHttpBody>
    </Request>
    <Request Method="GET" Guid="e0385f4f-2872-44ac-b32a-99cb162698d7" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx?InitialTabId=Ribbon%2EDocument&amp;VisibilityContext=WSSTabPersistence#InplviewHashbfaca91f-93f2-4632-ab39-eee92a5d06a2=SortField%3DModified-SortDir%3DDesc" ReportingName="" IgnoreHttpStatusCode="False">
      <QueryStringParameters>
        <QueryStringParameter Name="InitialTabId" Value="Ribbon%2EDocument" RecordedValue="Ribbon%2EDocument" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="VisibilityContext" Value="WSSTabPersistence" RecordedValue="WSSTabPersistence" CorrelationBinding="{{QueryStringParam1663.VisibilityContext}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="_wpcmWpid" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="wpcmVal" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_PostbackSource" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_SelectedWpId" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_View" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam54.MSOTlPn_View}}" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_ShowSettings" Value="False" RecordedValue="False" CorrelationBinding="{{FormPostParam59.MSOTlPn_ShowSettings}}" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_SelectedLibrary" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_FilterString" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_Button" Value="none" RecordedValue="none" CorrelationBinding="{{FormPostParam55.MSOTlPn_Button}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__REQUESTDIGEST" Value="{{FormPostParam60.__REQUESTDIGEST}}" RecordedValue="0x1DA163A4391E660F03380E0DE8A7ABDDCE470D26F29DB975D6A6319C01298389C3B3CB4253A7D2F9FEED8EE39FC56F31EB1797E8705666EBF7CE91CE61380DFB,12 Jun 2018 10:17:55 -0000" CorrelationBinding="{{FormPostParam60.__REQUESTDIGEST}}" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_DisplayModeName" Value="Browse" RecordedValue="Browse" CorrelationBinding="{{FormPostParam61.MSOSPWebPartManager_DisplayModeName}}" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_ExitingDesignMode" Value="false" RecordedValue="false" CorrelationBinding="{{FormPostParam62.MSOSPWebPartManager_ExitingDesignMode}}" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_Shared" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_LayoutChanges" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_InDesignMode" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wpSelected" Value="MSOZoneCell_WebPartWPQ2" RecordedValue="MSOZoneCell_WebPartWPQ2" CorrelationBinding="{{FormPostParam63._wpSelected}}" UrlEncode="True" />
        <FormPostParameter Name="_wzSelected" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_OldDisplayModeName" Value="Browse" RecordedValue="Browse" CorrelationBinding="{{FormPostParam64.MSOSPWebPartManager_OldDisplayModeName}}" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_StartWebPartEditingName" Value="false" RecordedValue="false" CorrelationBinding="{{FormPostParam65.MSOSPWebPartManager_StartWebPartEditingName}}" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_EndWebPartEditing" Value="false" RecordedValue="false" CorrelationBinding="{{FormPostParam66.MSOSPWebPartManager_EndWebPartEditing}}" UrlEncode="True" />
        <FormPostParameter Name="_maintainWorkspaceScrollPosition" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam56._maintainWorkspaceScrollPosition}}" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{FormPostParam67.__VIEWSTATE}}" RecordedValue="/wEPDwUJMjI4MzQ1ODc1D2QWAmYPZBYCAgEPZBYEAgEPZBYCAhkPZBYCAgMPZBYCAgEPZBYCZg8UKwAGZAUuaHR0cHM6Ly9zcC5leGNlbHN1cHBvcnQub3JnOjQ0My9teS9QZXJzb24uYXNweAUjaHR0cHM6Ly9zcC5leGNlbHN1cHBvcnQub3JnOjQ0My9teS8FHy9BcHBzMDAvX2xheW91dHMvMTUvbXlzdWJzLmFzcHgFsQEvQXBwczAwL19sYXlvdXRzLzE1L3JlZ2lvbmFsc2V0bmcuYXNweD90eXBlPXVzZXImc291cmNlPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkZTaGFyZWQlMjBEb2N1bWVudHMlMkZGb3JtcyUyRmRldGFpbCUyMGxpc3QlMjB3byUyMGZvbGRlcnMlMjAwMSUyRWFzcHgFhQJodHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215L19sYXlvdXRzLzE1L0VkaXRQcm9maWxlLmFzcHg/VXNlclNldHRpbmdzUHJvdmlkZXI9MjM0YmYwZWQlMkQ3MGRiJTJENDE1OCUyRGEzMzIlMkQ0ZGZkNjgzYjQxNDgmUmV0dXJuVXJsPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkZTaGFyZWQlMjBEb2N1bWVudHMlMkZGb3JtcyUyRmRldGFpbCUyMGxpc3QlMjB3byUyMGZvbGRlcnMlMjAwMSUyRWFzcHhkAgcPZBYIAgEPZBYCAgEPZBYCBSZnX2JmYWNhOTFmXzkzZjJfNDYzMl9hYjM5X2VlZTkyYTVkMDZhMhAPFgYeC1BhcmFtVmFsdWVzMvQIAAEAAAD/////AQAAAAAAAAAMAgAAAFhNaWNyb3NvZnQuU2hhcmVQb2ludCwgVmVyc2lvbj0xNi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03MWU5YmNlMTExZTk0MjljBQEAAAA9TWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViUGFydFBhZ2VzLlBhcmFtZXRlck5hbWVWYWx1ZUhhc2h0YWJsZQEAAAAFX2NvbGwDHFN5c3RlbS5Db2xsZWN0aW9ucy5IYXNodGFibGUCAAAACQMAAAAEAwAAABxTeXN0ZW0uQ29sbGVjdGlvbnMuSGFzaHRhYmxlBwAAAApMb2FkRmFjdG9yB1ZlcnNpb24IQ29tcGFyZXIQSGFzaENvZGVQcm92aWRlcghIYXNoU2l6ZQRLZXlzBlZhbHVlcwAAAwMABQULCBxTeXN0ZW0uQ29sbGVjdGlvbnMuSUNvbXBhcmVyJFN5c3RlbS5Db2xsZWN0aW9ucy5JSGFzaENvZGVQcm92aWRlcgjsUTg/DQAAAAoKEQAAAAkEAAAACQUAAAAQBAAAAAsAAAAGBgAAAA9Ob0Fubm91bmNlbWVudHMGBwAAAApGaWx0ZXJMaW5rBggAAAANaWRQcmVzRW5hYmxlZAYJAAAACW9wZW5fbWVudQYKAAAAClNlbGVjdGVkSUQGCwAAABBkdnRfcHJldnBhZ2VkYXRhBgwAAAARZHZ0X3N0YXJ0cG9zaXRpb24GDQAAABVPcGVuTWVudUtleUFjY2Vzc2libGUGDgAAABBkdnRfbmV4dHBhZ2VkYXRhBg8AAAATc2VsZWN0X2Rlc2VsZWN0X2FsbAYQAAAAFE5vQW5ub3VuY2VtZW50c0hvd1RvEAUAAAALAAAABhEAAABTVGhlcmUgYXJlIG5vIGl0ZW1zIHRvIHNob3cgaW4gdGhpcyB2aWV3IG9mIHRoZSAiU2hhcmVkIERvY3VtZW50cyIgZG9jdW1lbnQgbGlicmFyeS4GEgAAAAE/BhMAAAAgUHJlc2VuY2UgZW5hYmxlZCBmb3IgdGhpcyBjb2x1bW4GFAAAAAlPcGVuIE1lbnUGFQAAAAItMQYWAAAAUVBhZ2VkPVRSVUUmUGFnZWRQcmV2PVRSVUUmcF9BcHBsaWNhdGlvbj0mcF9BcHBzX3gwMDIwX0NvbnRlbnRfeDAwMjBfVHlwZT0mcF9JRD0yMQYXAAAAAAYYAAAALlVzZSBTSElGVCtFTlRFUiB0byBvcGVuIHRoZSBtZW51IChuZXcgd2luZG93KS4GGQAAAENQYWdlZD1UUlVFJnBfQXBwbGljYXRpb249JnBfQXBwc194MDAyMF9Db250ZW50X3gwMDIwX1R5cGU9JnBfSUQ9NDY2BhoAAAAcU2VsZWN0IG9yIGRlc2VsZWN0IGFsbCBpdGVtcwYbAAAAK1RvIGFkZCBhIG5ldyBpdGVtLCBjbGljayAiTmV3IiBvciAiVXBsb2FkIi4LHhBGaWx0ZXJPcGVyYXRpb25zMo0FAAEAAAD/////AQAAAAAAAAAEAQAAAJMCU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtNaWNyb3NvZnQuU2hhcmVQb2ludC5XZWJQYXJ0UGFnZXMuRmlsdGVyT3BlcmF0aW9uLCBNaWNyb3NvZnQuU2hhcmVQb2ludCwgVmVyc2lvbj0xNi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03MWU5YmNlMTExZTk0MjljXV0DAAAAB1ZlcnNpb24IQ29tcGFyZXIISGFzaFNpemUAAwAIkgFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5HZW5lcmljRXF1YWxpdHlDb21wYXJlcmAxW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQgAAAAACQIAAAAAAAAABAIAAACSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAAAAAAseDF92aWV3Q291bnRlcmZkZBYCAgEPZBYCZg9kFgRmDxYGHgxGZWF0dXJlU2NvcGUFBFNpdGUeCExvY2F0aW9uBSFNaWNyb3NvZnQuU2hhcmVQb2ludC5TdGFuZGFyZE1lbnUeB0dyb3VwSWQFEFZpZXdTZWxlY3Rvck1lbnVkAgEPDxYCHglBY2Nlc3NLZXkFAVdkZAIFD2QWAgICD2QWBAIBD2QWAgIDD2QWAmYPZBYEAgMPZBYIAgEPFgYeE0NsaWVudE9uQ2xpY2tTY3JpcHQFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkeKENsaWVudE9uQ2xpY2tTY3JpcHRDb250YWluaW5nUHJlZml4ZWRVcmwFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkeGENsaWVudE9uQ2xpY2tOYXZpZ2F0ZVVybGRkAgUPFgIeB1Zpc2libGVoZAILDxYCHwpoZAISD2QWAmYPDxYGHhxQcmV2aW91c0F1dGhvcmluZ0l0ZW1WZXJzaW9uZR4aUHJldmlvdXNBdXRob3JpbmdJdGVtT3duZXJlHhxQcmV2aW91c0F1dGhvcmluZ0NvbnRyb2xNb2RlCymIAU1pY3Jvc29mdC5TaGFyZVBvaW50LldlYkNvbnRyb2xzLlNQQ29udHJvbE1vZGUsIE1pY3Jvc29mdC5TaGFyZVBvaW50LCBWZXJzaW9uPTE2LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTcxZTliY2UxMTFlOTQyOWMAZGQCBA8PFgIfBgUBL2RkAgMPZBYCAgEPZBYCAgEPZBYGAgEPDxYEHgRfIVNCAgIeCENzc0NsYXNzBRdtcy1wcm9tb3RlZEFjdGlvbkJ1dHRvbmRkAgMPZBYCZg8PFgQfDgICHw8FF21zLXByb21vdGVkQWN0aW9uQnV0dG9uZGQCBQ8PFgYfDwUXbXMtcHJvbW90ZWRBY3Rpb25CdXR0b24fDgICHwpoZGQCDw9kFgICAQ9kFgICAQ88KwAFAQAPFgIeFVBhcmVudExldmVsc0Rpc3BsYXllZGZkZAITD2QWAgIBD2QWBgIHD2QWAgIDDw8WAh8KaGRkAgkPZBYCAgEPFgIfCmhkAg0PDxYCHwpoZBYCAgEPZBYCZg9kFgICAw9kFgICBQ9kFgICAQ88KwAJAQAPFgQeDVBhdGhTZXBhcmF0b3IECB4NTmV2ZXJFeHBhbmRlZGdkZBgBBRdjdGwwMCRUb3BOYXZpZ2F0aW9uTWVudQ8PZAUUSG9tZVxBcHBzICYgUHJvZHVjdHNk6/NWePR/9haSnDnh5xBsQmpSqLbeQbAOX8D2AJFRRPw=" CorrelationBinding="{{FormPostParam67.__VIEWSTATE}}" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="06E2AF16" RecordedValue="06E2AF16" CorrelationBinding="{{FormPostParam68.__VIEWSTATEGENERATOR}}" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam57.__SCROLLPOSITIONX}}" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam58.__SCROLLPOSITIONY}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{FormPostParam69.__EVENTVALIDATION}}" RecordedValue="/wEdAAOnDuLZcyTScHCXtFvQoGjPLmXyYwA+OfFaG5A2lz8nCLUgFLpnKOjvBAU2tXnwD0zriyTNO723xWrpFLN4YR2TRgB4CjAi0s0j6AzkjzJTfQ==" CorrelationBinding="{{FormPostParam69.__EVENTVALIDATION}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl44$ctl04" Value="Ribbon.Document" RecordedValue="Ribbon.Document" CorrelationBinding="" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="7ad61ce6-823a-4147-9d3e-f56186c6a541" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="InitialTabId" Value="Ribbon%2EDocument" RecordedValue="Ribbon%2EDocument" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="VisibilityContext" Value="WSSTabPersistence" RecordedValue="WSSTabPersistence" CorrelationBinding="{{QueryStringParam1688.VisibilityContext}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="_wpcmWpid" Value="{{$HIDDEN1._wpcmWpid}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="wpcmVal" Value="{{$HIDDEN1.wpcmVal}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_PostbackSource" Value="{{$HIDDEN1.MSOWebPartPage_PostbackSource}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_SelectedWpId" Value="{{$HIDDEN1.MSOTlPn_SelectedWpId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_View" Value="{{$HIDDEN1.MSOTlPn_View}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_ShowSettings" Value="{{$HIDDEN1.MSOTlPn_ShowSettings}}" RecordedValue="False" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_SelectedLibrary" Value="{{$HIDDEN1.MSOGallery_SelectedLibrary}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_FilterString" Value="{{$HIDDEN1.MSOGallery_FilterString}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_Button" Value="{{$HIDDEN1.MSOTlPn_Button}}" RecordedValue="none" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__REQUESTDIGEST" Value="{{$HIDDEN1.__REQUESTDIGEST}}" RecordedValue="0x1DA163A4391E660F03380E0DE8A7ABDDCE470D26F29DB975D6A6319C01298389C3B3CB4253A7D2F9FEED8EE39FC56F31EB1797E8705666EBF7CE91CE61380DFB,12 Jun 2018 10:17:55 -0000" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_DisplayModeName" Value="{{$HIDDEN1.MSOSPWebPartManager_DisplayModeName}}" RecordedValue="Browse" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_ExitingDesignMode" Value="{{$HIDDEN1.MSOSPWebPartManager_ExitingDesignMode}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_Shared" Value="{{$HIDDEN1.MSOWebPartPage_Shared}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_LayoutChanges" Value="{{$HIDDEN1.MSOLayout_LayoutChanges}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_InDesignMode" Value="{{$HIDDEN1.MSOLayout_InDesignMode}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wpSelected" Value="{{$HIDDEN1._wpSelected}}" RecordedValue="MSOZoneCell_WebPartWPQ2" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wzSelected" Value="{{$HIDDEN1._wzSelected}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_OldDisplayModeName" Value="{{$HIDDEN1.MSOSPWebPartManager_OldDisplayModeName}}" RecordedValue="Browse" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_StartWebPartEditingName" Value="{{$HIDDEN1.MSOSPWebPartManager_StartWebPartEditingName}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_EndWebPartEditing" Value="{{$HIDDEN1.MSOSPWebPartManager_EndWebPartEditing}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_maintainWorkspaceScrollPosition" Value="{{$HIDDEN1._maintainWorkspaceScrollPosition}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="/wEPDwUJMjI4MzQ1ODc1D2QWAmYPZBYCAgEPZBYEAgEPZBYCAhkPZBYCAgMPZBYCAgEPZBYCZg8UKwAGZAUuaHR0cHM6Ly9zcC5leGNlbHN1cHBvcnQub3JnOjQ0My9teS9QZXJzb24uYXNweAUjaHR0cHM6Ly9zcC5leGNlbHN1cHBvcnQub3JnOjQ0My9teS8FHy9BcHBzMDAvX2xheW91dHMvMTUvbXlzdWJzLmFzcHgFsQEvQXBwczAwL19sYXlvdXRzLzE1L3JlZ2lvbmFsc2V0bmcuYXNweD90eXBlPXVzZXImc291cmNlPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkZTaGFyZWQlMjBEb2N1bWVudHMlMkZGb3JtcyUyRmRldGFpbCUyMGxpc3QlMjB3byUyMGZvbGRlcnMlMjAwMSUyRWFzcHgFhQJodHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215L19sYXlvdXRzLzE1L0VkaXRQcm9maWxlLmFzcHg/VXNlclNldHRpbmdzUHJvdmlkZXI9MjM0YmYwZWQlMkQ3MGRiJTJENDE1OCUyRGEzMzIlMkQ0ZGZkNjgzYjQxNDgmUmV0dXJuVXJsPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkZTaGFyZWQlMjBEb2N1bWVudHMlMkZGb3JtcyUyRmRldGFpbCUyMGxpc3QlMjB3byUyMGZvbGRlcnMlMjAwMSUyRWFzcHhkAgcPZBYIAgEPZBYCAgEPZBYCBSZnX2JmYWNhOTFmXzkzZjJfNDYzMl9hYjM5X2VlZTkyYTVkMDZhMhAPFgYeC1BhcmFtVmFsdWVzMvQIAAEAAAD/////AQAAAAAAAAAMAgAAAFhNaWNyb3NvZnQuU2hhcmVQb2ludCwgVmVyc2lvbj0xNi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03MWU5YmNlMTExZTk0MjljBQEAAAA9TWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViUGFydFBhZ2VzLlBhcmFtZXRlck5hbWVWYWx1ZUhhc2h0YWJsZQEAAAAFX2NvbGwDHFN5c3RlbS5Db2xsZWN0aW9ucy5IYXNodGFibGUCAAAACQMAAAAEAwAAABxTeXN0ZW0uQ29sbGVjdGlvbnMuSGFzaHRhYmxlBwAAAApMb2FkRmFjdG9yB1ZlcnNpb24IQ29tcGFyZXIQSGFzaENvZGVQcm92aWRlcghIYXNoU2l6ZQRLZXlzBlZhbHVlcwAAAwMABQULCBxTeXN0ZW0uQ29sbGVjdGlvbnMuSUNvbXBhcmVyJFN5c3RlbS5Db2xsZWN0aW9ucy5JSGFzaENvZGVQcm92aWRlcgjsUTg/DQAAAAoKEQAAAAkEAAAACQUAAAAQBAAAAAsAAAAGBgAAAA9Ob0Fubm91bmNlbWVudHMGBwAAAApGaWx0ZXJMaW5rBggAAAANaWRQcmVzRW5hYmxlZAYJAAAACW9wZW5fbWVudQYKAAAAClNlbGVjdGVkSUQGCwAAABBkdnRfcHJldnBhZ2VkYXRhBgwAAAARZHZ0X3N0YXJ0cG9zaXRpb24GDQAAABVPcGVuTWVudUtleUFjY2Vzc2libGUGDgAAABBkdnRfbmV4dHBhZ2VkYXRhBg8AAAATc2VsZWN0X2Rlc2VsZWN0X2FsbAYQAAAAFE5vQW5ub3VuY2VtZW50c0hvd1RvEAUAAAALAAAABhEAAABTVGhlcmUgYXJlIG5vIGl0ZW1zIHRvIHNob3cgaW4gdGhpcyB2aWV3IG9mIHRoZSAiU2hhcmVkIERvY3VtZW50cyIgZG9jdW1lbnQgbGlicmFyeS4GEgAAAAE/BhMAAAAgUHJlc2VuY2UgZW5hYmxlZCBmb3IgdGhpcyBjb2x1bW4GFAAAAAlPcGVuIE1lbnUGFQAAAAItMQYWAAAAUVBhZ2VkPVRSVUUmUGFnZWRQcmV2PVRSVUUmcF9BcHBsaWNhdGlvbj0mcF9BcHBzX3gwMDIwX0NvbnRlbnRfeDAwMjBfVHlwZT0mcF9JRD0yMQYXAAAAAAYYAAAALlVzZSBTSElGVCtFTlRFUiB0byBvcGVuIHRoZSBtZW51IChuZXcgd2luZG93KS4GGQAAAENQYWdlZD1UUlVFJnBfQXBwbGljYXRpb249JnBfQXBwc194MDAyMF9Db250ZW50X3gwMDIwX1R5cGU9JnBfSUQ9NDY2BhoAAAAcU2VsZWN0IG9yIGRlc2VsZWN0IGFsbCBpdGVtcwYbAAAAK1RvIGFkZCBhIG5ldyBpdGVtLCBjbGljayAiTmV3IiBvciAiVXBsb2FkIi4LHhBGaWx0ZXJPcGVyYXRpb25zMo0FAAEAAAD/////AQAAAAAAAAAEAQAAAJMCU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtNaWNyb3NvZnQuU2hhcmVQb2ludC5XZWJQYXJ0UGFnZXMuRmlsdGVyT3BlcmF0aW9uLCBNaWNyb3NvZnQuU2hhcmVQb2ludCwgVmVyc2lvbj0xNi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03MWU5YmNlMTExZTk0MjljXV0DAAAAB1ZlcnNpb24IQ29tcGFyZXIISGFzaFNpemUAAwAIkgFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5HZW5lcmljRXF1YWxpdHlDb21wYXJlcmAxW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQgAAAAACQIAAAAAAAAABAIAAACSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAAAAAAseDF92aWV3Q291bnRlcmZkZBYCAgEPZBYCZg9kFgRmDxYGHgxGZWF0dXJlU2NvcGUFBFNpdGUeCExvY2F0aW9uBSFNaWNyb3NvZnQuU2hhcmVQb2ludC5TdGFuZGFyZE1lbnUeB0dyb3VwSWQFEFZpZXdTZWxlY3Rvck1lbnVkAgEPDxYCHglBY2Nlc3NLZXkFAVdkZAIFD2QWAgICD2QWBAIBD2QWAgIDD2QWAmYPZBYEAgMPZBYIAgEPFgYeE0NsaWVudE9uQ2xpY2tTY3JpcHQFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkeKENsaWVudE9uQ2xpY2tTY3JpcHRDb250YWluaW5nUHJlZml4ZWRVcmwFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkeGENsaWVudE9uQ2xpY2tOYXZpZ2F0ZVVybGRkAgUPFgIeB1Zpc2libGVoZAILDxYCHwpoZAISD2QWAmYPDxYGHhxQcmV2aW91c0F1dGhvcmluZ0l0ZW1WZXJzaW9uZR4aUHJldmlvdXNBdXRob3JpbmdJdGVtT3duZXJlHhxQcmV2aW91c0F1dGhvcmluZ0NvbnRyb2xNb2RlCymIAU1pY3Jvc29mdC5TaGFyZVBvaW50LldlYkNvbnRyb2xzLlNQQ29udHJvbE1vZGUsIE1pY3Jvc29mdC5TaGFyZVBvaW50LCBWZXJzaW9uPTE2LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTcxZTliY2UxMTFlOTQyOWMAZGQCBA8PFgIfBgUBL2RkAgMPZBYCAgEPZBYCAgEPZBYGAgEPDxYEHgRfIVNCAgIeCENzc0NsYXNzBRdtcy1wcm9tb3RlZEFjdGlvbkJ1dHRvbmRkAgMPZBYCZg8PFgQfDgICHw8FF21zLXByb21vdGVkQWN0aW9uQnV0dG9uZGQCBQ8PFgYfDwUXbXMtcHJvbW90ZWRBY3Rpb25CdXR0b24fDgICHwpoZGQCDw9kFgICAQ9kFgICAQ88KwAFAQAPFgIeFVBhcmVudExldmVsc0Rpc3BsYXllZGZkZAITD2QWAgIBD2QWBgIHD2QWAgIDDw8WAh8KaGRkAgkPZBYCAgEPFgIfCmhkAg0PDxYCHwpoZBYCAgEPZBYCZg9kFgICAw9kFgICBQ9kFgICAQ88KwAJAQAPFgQeDVBhdGhTZXBhcmF0b3IECB4NTmV2ZXJFeHBhbmRlZGdkZBgBBRdjdGwwMCRUb3BOYXZpZ2F0aW9uTWVudQ8PZAUUSG9tZVxBcHBzICYgUHJvZHVjdHNk6/NWePR/9haSnDnh5xBsQmpSqLbeQbAOX8D2AJFRRPw=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="06E2AF16" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN1.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN1.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN1.__EVENTVALIDATION}}" RecordedValue="/wEdAAOnDuLZcyTScHCXtFvQoGjPLmXyYwA+OfFaG5A2lz8nCLUgFLpnKOjvBAU2tXnwD0zriyTNO723xWrpFLN4YR2TRgB4CjAi0s0j6AzkjzJTfQ==" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl44$ctl04" Value="Ribbon.Document" RecordedValue="Ribbon.Document" CorrelationBinding="" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Guid="b1e802ac-790c-4062-b5cf-e31a88c58591" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/shellicons.eot" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx?InitialTabId=Ribbon.Document&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="9fe7d0a9-f8c3-49a7-b900-9e687f30ed8b" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_api/search/searchcenterurl" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Accept" Value="application/json;odata=verbose" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx?InitialTabId=Ribbon.Document&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="6985376c-44af-4776-9ceb-d482b191d22d" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/commandui.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="X-Requested-With" Value="XMLHttpRequest" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx?InitialTabId=Ribbon.Document&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="ver" Value="823153556" RecordedValue="823153556" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="lcid" Value="1033" RecordedValue="1033" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="qt" Value="commandhandlers" RecordedValue="commandhandlers" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="POST" Guid="afcd544f-a460-4bcb-b03a-422816fbc9e8" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/commandui.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="X-Requested-With" Value="XMLHttpRequest" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx?InitialTabId=Ribbon.Document&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="ver" Value="823153556" RecordedValue="823153556" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="id" Value="Ribbon.Document" RecordedValue="Ribbon.Document" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="lcid" Value="1033" RecordedValue="1033" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="qt" Value="ribbonvisibletabdeep" RecordedValue="ribbonvisibletabdeep" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody />
    </Request>
    <Request Method="GET" Guid="3ead2d80-7b46-488e-b532-ea6e64236305" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx?InitialTabId=Ribbon.Document&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="64d5d9dc-0c7b-4acd-ad55-6c775657a2d0" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx?InitialTabId=Ribbon.Document&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="POST" Guid="e731bca7-d657-4b0e-842e-8d6503dae09b" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/inplview.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx?InitialTabId=Ribbon.Document&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="List" Value="%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D" RecordedValue="%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="View" Value="%7BBFACA91F-93F2-4632-AB39-EEE92A5D06A2%7D" RecordedValue="%7BBFACA91F-93F2-4632-AB39-EEE92A5D06A2%7D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ViewCount" Value="0" RecordedValue="0" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsXslView" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsCSR" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ListViewPageUrl" Value="https%3A%2F%2Fsp.cordissolutions.com%2FApps00%2FShared%2520Documents%2FForms%2Fdetail%2520list%2520wo%2520folders%252001.aspx" RecordedValue="https%3A%2F%2Fsp.cordissolutions.com%2FApps00%2FShared%2520Documents%2FForms%2Fdetail%2520list%2520wo%2520folders%252001.aspx" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="SortField" Value="Modified" RecordedValue="Modified" CorrelationBinding="{{QueryStringParam1965.SortField}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="SortDir" Value="Desc" RecordedValue="Desc" CorrelationBinding="{{QueryStringParam1966.SortDir}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody />
    </Request>
    <Request Method="GET" Guid="b9d366fc-ef0b-44a2-80cf-2872b74a7ac4" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_api/search/searchcenterurl" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Accept" Value="application/json;odata=verbose" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx?InitialTabId=Ribbon.Document&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="34a9beec-93d4-4e43-b458-49e5bae15d8d" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="GET" Guid="a6da5bd3-52ce-4d28-9e85-225b5ce9bdab" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_api/Microsoft.SharePoint.Portal.SuiteNavData.GetSuiteNavData" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Content-Type" Value="application/x-www-form-urlencoded" />
            <Header Name="ACCEPT" Value="application/json; odata = verbose" />
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="v" Value="2" RecordedValue="2" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="Locale" Value="en-US" RecordedValue="en-US" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
          <FormPostHttpBody />
        </Request>
        <Request Method="GET" Guid="767e77e0-d263-4cb2-9908-dc59e8b206b1" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/shellicons.eot" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
        <Request Method="GET" Guid="7fdca2bd-32df-4458-80ad-4eeb880a0487" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/Office365Icons.eot" ThinkTime="2" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
        <Request Method="GET" Guid="a1ec6291-b2d5-493f-96ae-444290f8cfd1" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
        <Request Method="GET" Guid="545b84e7-290d-4b56-bdb1-93e5fe253b7f" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_api/search/searchcenterurl" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Accept" Value="application/json;odata=verbose" />
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
          </Headers>
        </Request>
        <Request Method="GET" Guid="4809e9e1-90bd-4533-862f-a9376b90a2f9" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_api/search/searchcenterurl" ThinkTime="5" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Accept" Value="application/json;odata=verbose" />
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
          </Headers>
        </Request>
      </DependentRequests>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam1.ctl00$ctl44$ctl04" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="d = &quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;;_sp" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam28.ctl00$PlaceHolderMain$UploadDocumentSection$ctl05$OverwriteSingle" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ble=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; ari" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam37.ctl00$ctl44$ctl04" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="d = &quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;;_sp" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
    </Request>
    <Request Method="GET" Guid="d5fb5bc4-8619-46ed-89c6-6705d2df66ab" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/Upload.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam20.__REQUESTDIGEST" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="18" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam12.IsDlg" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;IsDlg=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam65.List" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?List=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam66.IsDlg" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;IsDlg=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam10.MSOTlPn_View" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ent=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="3" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam11.MSOTlPn_ShowSettings" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value=" = (&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; == " />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam12.MSOTlPn_Button" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="y = &quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;;&#xD;&#xA;	" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam13.__EVENTTARGET" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ame=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; typ" />
            <RuleParameter Name="Index" Value="35" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam14.MSOSPWebPartManager_DisplayModeName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="9" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam15.MSOSPWebPartManager_ExitingDesignMode" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="10" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam16.MSOSPWebPartManager_OldDisplayModeName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="9" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam17.MSOSPWebPartManager_StartWebPartEditingName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="10" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam18.MSOSPWebPartManager_EndWebPartEditing" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="10" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam19._maintainWorkspaceScrollPosition" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ent=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="3" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam21.__VIEWSTATE" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="19" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam22.__VIEWSTATEGENERATOR" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="20" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam23.__SCROLLPOSITIONX" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ent=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="3" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam24.__SCROLLPOSITIONY" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ent=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="3" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam25.__EVENTVALIDATION" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="23" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam26.destination" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="25" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam27.ctl00$PlaceHolderMain$ctl05$ctl01$uploadLocation" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value=" == &quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;)&#xD;&#xA;	" />
            <RuleParameter Name="Index" Value="3" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="List" Value="{ED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B}" RecordedValue="{ED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B}" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="RootFolder" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsDlg" Value="1" RecordedValue="1" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="d668888d-802a-496d-90a0-06c2a77dcf4e" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/commandui.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="X-Requested-With" Value="XMLHttpRequest" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="ver" Value="823153556" RecordedValue="823153556" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="lcid" Value="1033" RecordedValue="1033" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="qt" Value="commandhandlers" RecordedValue="commandhandlers" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="POST" Guid="35bc680e-c98e-4c64-a149-faf2b7cc40e6" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/commandui.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="X-Requested-With" Value="XMLHttpRequest" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="ver" Value="823153556" RecordedValue="823153556" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="id" Value="Ribbon.Read" RecordedValue="Ribbon.Read" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="lcid" Value="1033" RecordedValue="1033" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="qt" Value="ribbonvisibletabdeep" RecordedValue="ribbonvisibletabdeep" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody />
    </Request>
    <Request Method="GET" Guid="1f90ffaa-4771-464e-99b4-6c1ca026c130" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/images/blank.gif" ThinkTime="10" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/_layouts/15/Upload.aspx?List=%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D&amp;RootFolder=&amp;IsDlg=1" />
      </Headers>
    </Request>
    <Request Method="POST" Guid="d017ff0a-74de-42e1-b133-5e2d14797ae2" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/UploadEx.aspx" ThinkTime="22" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/_layouts/15/Upload.aspx?List=%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D&amp;RootFolder=&amp;IsDlg=1" />
      </Headers>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam67.Mode" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?Mode=" />
            <RuleParameter Name="EndsWith" Value="\" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam68.ID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="\u0026ID=" />
            <RuleParameter Name="EndsWith" Value="\" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="List" Value="%7bED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7d" RecordedValue="%7bED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7d" CorrelationBinding="{{QueryStringParam65.List}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="RootFolder" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsDlg" Value="1" RecordedValue="1" CorrelationBinding="{{QueryStringParam66.IsDlg}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="MSOWebPartPage_PostbackSource" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_SelectedWpId" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_View" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam10.MSOTlPn_View}}" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_ShowSettings" Value="False" RecordedValue="False" CorrelationBinding="{{FormPostParam11.MSOTlPn_ShowSettings}}" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_SelectedLibrary" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_FilterString" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_Button" Value="none" RecordedValue="none" CorrelationBinding="{{FormPostParam12.MSOTlPn_Button}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$PlaceHolderMain$ctl04$RptControls$btnOK" RecordedValue="ctl00$PlaceHolderMain$ctl04$RptControls$btnOK" CorrelationBinding="{{FormPostParam13.__EVENTTARGET}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_DisplayModeName" Value="Browse" RecordedValue="Browse" CorrelationBinding="{{FormPostParam14.MSOSPWebPartManager_DisplayModeName}}" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_ExitingDesignMode" Value="false" RecordedValue="false" CorrelationBinding="{{FormPostParam15.MSOSPWebPartManager_ExitingDesignMode}}" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_Shared" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_LayoutChanges" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_InDesignMode" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_OldDisplayModeName" Value="Browse" RecordedValue="Browse" CorrelationBinding="{{FormPostParam16.MSOSPWebPartManager_OldDisplayModeName}}" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_StartWebPartEditingName" Value="false" RecordedValue="false" CorrelationBinding="{{FormPostParam17.MSOSPWebPartManager_StartWebPartEditingName}}" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_EndWebPartEditing" Value="false" RecordedValue="false" CorrelationBinding="{{FormPostParam18.MSOSPWebPartManager_EndWebPartEditing}}" UrlEncode="True" />
        <FormPostParameter Name="_maintainWorkspaceScrollPosition" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam19._maintainWorkspaceScrollPosition}}" UrlEncode="True" />
        <FormPostParameter Name="__REQUESTDIGEST" Value="{{FormPostParam20.__REQUESTDIGEST}}" RecordedValue="0x74F09B9312BE880D89F14C38024A40AD4324CAF10AB9088D970FA484B26BD42B15FA7F1AEE2ACEB6C53EE2ED724E85384509A0D18C8341DE733C844ACDB3C1AE,13 Jun 2018 11:37:37 -0000" CorrelationBinding="{{FormPostParam20.__REQUESTDIGEST}}" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="/wEPDwULLTE2MjA3MDQzNjUPZBYCZg9kFgICAQ8WAh4FY2xhc3MFFm1zLWRpYWxvZyBtcy1kaWFsb2ctbnIWBAIBD2QWAgIZD2QWAgIDD2QWAgIBD2QWAmYPFCsABmQFLmh0dHBzOi8vc3AuZXhjZWxzdXBwb3J0Lm9yZzo0NDMvbXkvUGVyc29uLmFzcHgFI2h0dHBzOi8vc3AuZXhjZWxzdXBwb3J0Lm9yZzo0NDMvbXkvBR8vQXBwczAwL19sYXlvdXRzLzE1L215c3Vicy5hc3B4BfsBL0FwcHMwMC9fbGF5b3V0cy8xNS9yZWdpb25hbHNldG5nLmFzcHg/dHlwZT11c2VyJnNvdXJjZT1odHRwcyUzQSUyRiUyRnNwJTJFY29yZGlzc29sdXRpb25zJTJFY29tJTJGQXBwczAwJTJGJTVGbGF5b3V0cyUyRjE1JTJGVXBsb2FkJTJFYXNweCUzRkxpc3QlM0QlMjU3QkVEMjgxOTJBJTI1MkQzQjY3JTI1MkQ0M0Q4JTI1MkRCQThBJTI1MkREQ0NBM0FDRTdEMEIlMjU3RCUyNmFtcCUzQlJvb3RGb2xkZXIlM0QlMjZhbXAlM0JJc0RsZyUzRDEFzwJodHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215L19sYXlvdXRzLzE1L0VkaXRQcm9maWxlLmFzcHg/VXNlclNldHRpbmdzUHJvdmlkZXI9MjM0YmYwZWQlMkQ3MGRiJTJENDE1OCUyRGEzMzIlMkQ0ZGZkNjgzYjQxNDgmUmV0dXJuVXJsPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkYlNUZsYXlvdXRzJTJGMTUlMkZVcGxvYWQlMkVhc3B4JTNGTGlzdCUzRCUyNTdCRUQyODE5MkElMjUyRDNCNjclMjUyRDQzRDglMjUyREJBOEElMjUyRERDQ0EzQUNFN0QwQiUyNTdEJTI2YW1wJTNCUm9vdEZvbGRlciUzRCUyNmFtcCUzQklzRGxnJTNEMWQCBw8WAh4HZW5jdHlwZQUTbXVsdGlwYXJ0L2Zvcm0tZGF0YRYIAgUPZBYCAgIPZBYEAgEPZBYCAgMPZBYCZg9kFgQCAw9kFgoCAQ8WBh4TQ2xpZW50T25DbGlja1NjcmlwdAV5RW5zdXJlU2NyaXB0RnVuYygnc2hhcmluZy5qcycsICdEaXNwbGF5U2hhcmVkV2l0aERpYWxvZycsIGZ1bmN0aW9uICgpIHsgRGlzcGxheVNoYXJlZFdpdGhEaWFsb2coJ1x1MDAyZkFwcHMwMFx1MDAyZicpOyB9KR4oQ2xpZW50T25DbGlja1NjcmlwdENvbnRhaW5pbmdQcmVmaXhlZFVybAV5RW5zdXJlU2NyaXB0RnVuYygnc2hhcmluZy5qcycsICdEaXNwbGF5U2hhcmVkV2l0aERpYWxvZycsIGZ1bmN0aW9uICgpIHsgRGlzcGxheVNoYXJlZFdpdGhEaWFsb2coJ1x1MDAyZkFwcHMwMFx1MDAyZicpOyB9KR4YQ2xpZW50T25DbGlja05hdmlnYXRlVXJsZGQCAw8WAh4HVmlzaWJsZWhkAgUPFgIfBWhkAgsPFgIfBWhkAhIPZBYCZg8PFgYeHFByZXZpb3VzQXV0aG9yaW5nSXRlbVZlcnNpb25lHhpQcmV2aW91c0F1dGhvcmluZ0l0ZW1Pd25lcmUeHFByZXZpb3VzQXV0aG9yaW5nQ29udHJvbE1vZGULKYgBTWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViQ29udHJvbHMuU1BDb250cm9sTW9kZSwgTWljcm9zb2Z0LlNoYXJlUG9pbnQsIFZlcnNpb249MTYuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49NzFlOWJjZTExMWU5NDI5YwBkZAIEDw8WAh4JQWNjZXNzS2V5BQEvZGQCAw9kFgICAQ9kFgICAQ9kFgYCAQ8PFgQeBF8hU0ICAh4IQ3NzQ2xhc3MFF21zLXByb21vdGVkQWN0aW9uQnV0dG9uZGQCAw9kFgJmDw8WBB8KAgIfCwUXbXMtcHJvbW90ZWRBY3Rpb25CdXR0b25kZAIFDw8WBh8LBRdtcy1wcm9tb3RlZEFjdGlvbkJ1dHRvbh8KAgIfBWhkZAIPD2QWAgIBD2QWAmYPDxYEHgRUZXh0BRBTaGFyZWQgRG9jdW1lbnRzHgtOYXZpZ2F0ZVVybAUxL0FwcHMwMC9TaGFyZWQgRG9jdW1lbnRzL0Zvcm1zL2FsbCBkb2N1bWVudHMuYXNweGRkAhMPZBYCAgEPZBYCAg0PDxYCHwVoZBYCAgEPZBYCZg9kFgICAw9kFgICBQ9kFgICAQ88KwAJAQAPFgQeDVBhdGhTZXBhcmF0b3IECB4NTmV2ZXJFeHBhbmRlZGdkZAIVD2QWAgIBD2QWBmYPFgIfDAUYL0FwcHMwMC9TaGFyZWQgRG9jdW1lbnRzZAIGD2QWCGYPZBYCAgQPZBYCAgEPZBYGZg9kFgJmDw8WAh8MZWRkAgEPZBYGAgEPDxYEHgxFcnJvck1lc3NhZ2UFMFlvdSBtdXN0IHNwZWNpZnkgYSB2YWx1ZSBmb3IgdGhlIHJlcXVpcmVkIGZpZWxkLh4UT3JpZ2luYWxFcnJvck1lc3NhZ2UFMFlvdSBtdXN0IHNwZWNpZnkgYSB2YWx1ZSBmb3IgdGhlIHJlcXVpcmVkIGZpZWxkLmRkAgMPDxYCHwVnZGQCBA8QDxYCHwwFJkFkZCBhcyBhIG5ldyB2ZXJzaW9uIHRvIGV4aXN0aW5nIGZpbGVzZGRkZAICDxYCHwVoZAIBD2QWBgIBD2QWAmYPFgIfDAUSRGVzdGluYXRpb24gRm9sZGVyZAICD2QWAmYPFgIfDGVkAgQPZBYCAgEPZBYGZg9kFgJmDw8WAh8MZWRkAgEPZBYCAgEPDxYCHwwFAS9kZAICDxYCHwVoZAICD2QWBgIBD2QWAmYPFgIfDAUTRGVzdGluYXRpb24gTGlicmFyeWQCAg9kFgJmDxYCHwxlZAIED2QWAgIBD2QWBGYPZBYCZg8PFgIfDGVkZAICDxYCHwVoZAIDD2QWBgIBD2QWAmYPFgIfDAUQVmVyc2lvbiBDb21tZW50c2QCAg9kFgJmDxYCHwxlZAIED2QWAgIBD2QWBGYPZBYCZg8PFgIfDGVkZAICDxYCHwVoZAIHD2QWCGYPFgQeCWlubmVyaHRtbAXyAUxhcmdlIGZpbGUgdXBsb2FkcyB3b3JrIGJldHRlciBpbiBzeW5jZWQgZm9sZGVycywgPGEgc3R5bGU9J3doaXRlLXNwYWNlOm5vd3JhcCcgb25jbGljaz0id2luZG93Lm9wZW4oJ2h0dHA6Ly9vZmZpY2UubWljcm9zb2Z0LmNvbS9lbi11cy9zdXBwb3J0L3N5bmMtYS1saWJyYXJ5LXRvLXlvdXItY29tcHV0ZXItSEExMDI4MzI0MDEuYXNweCcsICdfYmxhbmsnKSIgaHJlZj0nIyc+bGVhcm4gbW9yZTwvYT4uJm5ic3A7Jm5ic3A7Hghpc0hpZGRlbgVNdHlwZW9mIG5hdmlnYXRvci5tc1Byb3RvY29scyA9PSAib2JqZWN0IiAmJiAhbmF2aWdhdG9yLm1zUHJvdG9jb2xzWyJncnZvcGVuIl1kAgEPFgIeBXN0eWxlBQ1kaXNwbGF5Om5vbmU7ZAICD2QWAgIBDxYCHgdvbmNsaWNrBWZpZighcHJvY2Vzc0lucHV0KCkpIHJldHVybiBmYWxzZTtTdWJtaXRCdXR0b25PbkNsaWNrKCdjdGwwMF9QbGFjZUhvbGRlck1haW5fY3RsMDRfUnB0Q29udHJvbHNfYnRuT0snKTtkAgMPZBYCZg8WBB4JYWNjZXNza2V5BQFDHxUFrwN0cnkgeyANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuZnJhbWVFbGVtZW50LmNhbmNlbFBvcFVwKCk7IA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2F0Y2goZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChCb29sZWFuKHRvcCkgJiYgQm9vbGVhbih0b3AucG9zdE1lc3NhZ2UpKSANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wLnBvc3RNZXNzYWdlKCdDbG9zZURpYWxvZycsICcqJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO2QYAgUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgEFQWN0bDAwJFBsYWNlSG9sZGVyTWFpbiRVcGxvYWREb2N1bWVudFNlY3Rpb24kY3RsMDUkT3ZlcndyaXRlU2luZ2xlBRdjdGwwMCRUb3BOYXZpZ2F0aW9uTWVudQ8PZAUUSG9tZVxBcHBzICYgUHJvZHVjdHNkSIlxot5t9zwROWmbLKqVU0ipJE5Y3TnSZr4XLSfbqpo=" RecordedValue="/wEPDwULLTE2MjA3MDQzNjUPZBYCZg9kFgICAQ8WAh4FY2xhc3MFFm1zLWRpYWxvZyBtcy1kaWFsb2ctbnIWBAIBD2QWAgIZD2QWAgIDD2QWAgIBD2QWAmYPFCsABmQFLmh0dHBzOi8vc3AuZXhjZWxzdXBwb3J0Lm9yZzo0NDMvbXkvUGVyc29uLmFzcHgFI2h0dHBzOi8vc3AuZXhjZWxzdXBwb3J0Lm9yZzo0NDMvbXkvBR8vQXBwczAwL19sYXlvdXRzLzE1L215c3Vicy5hc3B4BfsBL0FwcHMwMC9fbGF5b3V0cy8xNS9yZWdpb25hbHNldG5nLmFzcHg/dHlwZT11c2VyJnNvdXJjZT1odHRwcyUzQSUyRiUyRnNwJTJFY29yZGlzc29sdXRpb25zJTJFY29tJTJGQXBwczAwJTJGJTVGbGF5b3V0cyUyRjE1JTJGVXBsb2FkJTJFYXNweCUzRkxpc3QlM0QlMjU3QkVEMjgxOTJBJTI1MkQzQjY3JTI1MkQ0M0Q4JTI1MkRCQThBJTI1MkREQ0NBM0FDRTdEMEIlMjU3RCUyNmFtcCUzQlJvb3RGb2xkZXIlM0QlMjZhbXAlM0JJc0RsZyUzRDEFzwJodHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215L19sYXlvdXRzLzE1L0VkaXRQcm9maWxlLmFzcHg/VXNlclNldHRpbmdzUHJvdmlkZXI9MjM0YmYwZWQlMkQ3MGRiJTJENDE1OCUyRGEzMzIlMkQ0ZGZkNjgzYjQxNDgmUmV0dXJuVXJsPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkYlNUZsYXlvdXRzJTJGMTUlMkZVcGxvYWQlMkVhc3B4JTNGTGlzdCUzRCUyNTdCRUQyODE5MkElMjUyRDNCNjclMjUyRDQzRDglMjUyREJBOEElMjUyRERDQ0EzQUNFN0QwQiUyNTdEJTI2YW1wJTNCUm9vdEZvbGRlciUzRCUyNmFtcCUzQklzRGxnJTNEMWQCBw8WAh4HZW5jdHlwZQUTbXVsdGlwYXJ0L2Zvcm0tZGF0YRYIAgUPZBYCAgIPZBYEAgEPZBYCAgMPZBYCZg9kFgQCAw9kFgoCAQ8WBh4TQ2xpZW50T25DbGlja1NjcmlwdAV5RW5zdXJlU2NyaXB0RnVuYygnc2hhcmluZy5qcycsICdEaXNwbGF5U2hhcmVkV2l0aERpYWxvZycsIGZ1bmN0aW9uICgpIHsgRGlzcGxheVNoYXJlZFdpdGhEaWFsb2coJ1x1MDAyZkFwcHMwMFx1MDAyZicpOyB9KR4oQ2xpZW50T25DbGlja1NjcmlwdENvbnRhaW5pbmdQcmVmaXhlZFVybAV5RW5zdXJlU2NyaXB0RnVuYygnc2hhcmluZy5qcycsICdEaXNwbGF5U2hhcmVkV2l0aERpYWxvZycsIGZ1bmN0aW9uICgpIHsgRGlzcGxheVNoYXJlZFdpdGhEaWFsb2coJ1x1MDAyZkFwcHMwMFx1MDAyZicpOyB9KR4YQ2xpZW50T25DbGlja05hdmlnYXRlVXJsZGQCAw8WAh4HVmlzaWJsZWhkAgUPFgIfBWhkAgsPFgIfBWhkAhIPZBYCZg8PFgYeHFByZXZpb3VzQXV0aG9yaW5nSXRlbVZlcnNpb25lHhpQcmV2aW91c0F1dGhvcmluZ0l0ZW1Pd25lcmUeHFByZXZpb3VzQXV0aG9yaW5nQ29udHJvbE1vZGULKYgBTWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViQ29udHJvbHMuU1BDb250cm9sTW9kZSwgTWljcm9zb2Z0LlNoYXJlUG9pbnQsIFZlcnNpb249MTYuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49NzFlOWJjZTExMWU5NDI5YwBkZAIEDw8WAh4JQWNjZXNzS2V5BQEvZGQCAw9kFgICAQ9kFgICAQ9kFgYCAQ8PFgQeBF8hU0ICAh4IQ3NzQ2xhc3MFF21zLXByb21vdGVkQWN0aW9uQnV0dG9uZGQCAw9kFgJmDw8WBB8KAgIfCwUXbXMtcHJvbW90ZWRBY3Rpb25CdXR0b25kZAIFDw8WBh8LBRdtcy1wcm9tb3RlZEFjdGlvbkJ1dHRvbh8KAgIfBWhkZAIPD2QWAgIBD2QWAmYPDxYEHgRUZXh0BRBTaGFyZWQgRG9jdW1lbnRzHgtOYXZpZ2F0ZVVybAUxL0FwcHMwMC9TaGFyZWQgRG9jdW1lbnRzL0Zvcm1zL2FsbCBkb2N1bWVudHMuYXNweGRkAhMPZBYCAgEPZBYCAg0PDxYCHwVoZBYCAgEPZBYCZg9kFgICAw9kFgICBQ9kFgICAQ88KwAJAQAPFgQeDVBhdGhTZXBhcmF0b3IECB4NTmV2ZXJFeHBhbmRlZGdkZAIVD2QWAgIBD2QWBmYPFgIfDAUYL0FwcHMwMC9TaGFyZWQgRG9jdW1lbnRzZAIGD2QWCGYPZBYCAgQPZBYCAgEPZBYGZg9kFgJmDw8WAh8MZWRkAgEPZBYGAgEPDxYEHgxFcnJvck1lc3NhZ2UFMFlvdSBtdXN0IHNwZWNpZnkgYSB2YWx1ZSBmb3IgdGhlIHJlcXVpcmVkIGZpZWxkLh4UT3JpZ2luYWxFcnJvck1lc3NhZ2UFMFlvdSBtdXN0IHNwZWNpZnkgYSB2YWx1ZSBmb3IgdGhlIHJlcXVpcmVkIGZpZWxkLmRkAgMPDxYCHwVnZGQCBA8QDxYCHwwFJkFkZCBhcyBhIG5ldyB2ZXJzaW9uIHRvIGV4aXN0aW5nIGZpbGVzZGRkZAICDxYCHwVoZAIBD2QWBgIBD2QWAmYPFgIfDAUSRGVzdGluYXRpb24gRm9sZGVyZAICD2QWAmYPFgIfDGVkAgQPZBYCAgEPZBYGZg9kFgJmDw8WAh8MZWRkAgEPZBYCAgEPDxYCHwwFAS9kZAICDxYCHwVoZAICD2QWBgIBD2QWAmYPFgIfDAUTRGVzdGluYXRpb24gTGlicmFyeWQCAg9kFgJmDxYCHwxlZAIED2QWAgIBD2QWBGYPZBYCZg8PFgIfDGVkZAICDxYCHwVoZAIDD2QWBgIBD2QWAmYPFgIfDAUQVmVyc2lvbiBDb21tZW50c2QCAg9kFgJmDxYCHwxlZAIED2QWAgIBD2QWBGYPZBYCZg8PFgIfDGVkZAICDxYCHwVoZAIHD2QWCGYPFgQeCWlubmVyaHRtbAXyAUxhcmdlIGZpbGUgdXBsb2FkcyB3b3JrIGJldHRlciBpbiBzeW5jZWQgZm9sZGVycywgPGEgc3R5bGU9J3doaXRlLXNwYWNlOm5vd3JhcCcgb25jbGljaz0id2luZG93Lm9wZW4oJ2h0dHA6Ly9vZmZpY2UubWljcm9zb2Z0LmNvbS9lbi11cy9zdXBwb3J0L3N5bmMtYS1saWJyYXJ5LXRvLXlvdXItY29tcHV0ZXItSEExMDI4MzI0MDEuYXNweCcsICdfYmxhbmsnKSIgaHJlZj0nIyc+bGVhcm4gbW9yZTwvYT4uJm5ic3A7Jm5ic3A7Hghpc0hpZGRlbgVNdHlwZW9mIG5hdmlnYXRvci5tc1Byb3RvY29scyA9PSAib2JqZWN0IiAmJiAhbmF2aWdhdG9yLm1zUHJvdG9jb2xzWyJncnZvcGVuIl1kAgEPFgIeBXN0eWxlBQ1kaXNwbGF5Om5vbmU7ZAICD2QWAgIBDxYCHgdvbmNsaWNrBWZpZighcHJvY2Vzc0lucHV0KCkpIHJldHVybiBmYWxzZTtTdWJtaXRCdXR0b25PbkNsaWNrKCdjdGwwMF9QbGFjZUhvbGRlck1haW5fY3RsMDRfUnB0Q29udHJvbHNfYnRuT0snKTtkAgMPZBYCZg8WBB4JYWNjZXNza2V5BQFDHxUFrwN0cnkgeyANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuZnJhbWVFbGVtZW50LmNhbmNlbFBvcFVwKCk7IA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2F0Y2goZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChCb29sZWFuKHRvcCkgJiYgQm9vbGVhbih0b3AucG9zdE1lc3NhZ2UpKSANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wLnBvc3RNZXNzYWdlKCdDbG9zZURpYWxvZycsICcqJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO2QYAgUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgEFQWN0bDAwJFBsYWNlSG9sZGVyTWFpbiRVcGxvYWREb2N1bWVudFNlY3Rpb24kY3RsMDUkT3ZlcndyaXRlU2luZ2xlBRdjdGwwMCRUb3BOYXZpZ2F0aW9uTWVudQ8PZAUUSG9tZVxBcHBzICYgUHJvZHVjdHNkSIlxot5t9zwROWmbLKqVU0ipJE5Y3TnSZr4XLSfbqpo=" CorrelationBinding="{{FormPostParam21.__VIEWSTATE}}" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="1D26ACB4" RecordedValue="1D26ACB4" CorrelationBinding="{{FormPostParam22.__VIEWSTATEGENERATOR}}" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam23.__SCROLLPOSITIONX}}" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam24.__SCROLLPOSITIONY}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="/wEdAAmWDRYPLHE9aQaOqHSv2NClLmXyYwA+OfFaG5A2lz8nCLUgFLpnKOjvBAU2tXnwD0wbt5xWilHkpAXrgutd9xsrar6II3t2myHtKm8Jrz0kqx/LcxD5kgYbY/iJTRTmpGRLQACdXqMi4fagnj5qOr30c0YKkcurSy8sxtEvwH10tcYcScc7e+6HOPbDGJRE27ugxFUBoRgwZsQCCQ0ze3jXLgH7sND0Xhqq7F/eIIKt6Q==" RecordedValue="/wEdAAmWDRYPLHE9aQaOqHSv2NClLmXyYwA+OfFaG5A2lz8nCLUgFLpnKOjvBAU2tXnwD0wbt5xWilHkpAXrgutd9xsrar6II3t2myHtKm8Jrz0kqx/LcxD5kgYbY/iJTRTmpGRLQACdXqMi4fagnj5qOr30c0YKkcurSy8sxtEvwH10tcYcScc7e+6HOPbDGJRE27ugxFUBoRgwZsQCCQ0ze3jXLgH7sND0Xhqq7F/eIIKt6Q==" CorrelationBinding="{{FormPostParam25.__EVENTVALIDATION}}" UrlEncode="True" />
        <FormPostParameter Name="destination" Value="/Apps00/Shared Documents" RecordedValue="/Apps00/Shared Documents" CorrelationBinding="{{FormPostParam26.destination}}" UrlEncode="True" />
        <FileUploadParameter Name="ctl00$PlaceHolderMain$UploadDocumentSection$ctl05$InputFile" FileName="File for the version 1.xlsx" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" GenerateUniqueName="True" UseGuids="False" FileUploadName="" HtmlEncodeFileName="True" />
        <FormPostParameter Name="ctl00$PlaceHolderMain$UploadDocumentSection$ctl05$OverwriteSingle" Value="on" RecordedValue="on" CorrelationBinding="{{FormPostParam28.ctl00$PlaceHolderMain$UploadDocumentSection$ctl05$OverwriteSingle}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$PlaceHolderMain$ctl05$ctl01$uploadLocation" Value="/" RecordedValue="/" CorrelationBinding="{{FormPostParam27.ctl00$PlaceHolderMain$ctl05$ctl01$uploadLocation}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$PlaceHolderMain$VersionCommentSection$ctl01$CheckInComment" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Guid="21655236-fdb3-4632-9008-0e90e3aefce1" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/EditForm.aspx" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="GET" Guid="017e1bdd-261e-4bef-b146-79d35c917d61" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/commandui.ashx" ThinkTime="2" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="X-Requested-With" Value="XMLHttpRequest" />
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/EditForm.aspx?Mode=Upload&amp;CheckInComment=&amp;ID=3455&amp;RootFolder=%2FApps00%2FShared%20Documents&amp;IsDlg=1" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="ver" Value="823153556" RecordedValue="823153556" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="lcid" Value="1033" RecordedValue="1033" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="qt" Value="commandhandlers" RecordedValue="commandhandlers" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
        <Request Method="POST" Guid="13435773-1b4f-4237-8a2f-a69919e28f9e" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/commandui.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="X-Requested-With" Value="XMLHttpRequest" />
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/EditForm.aspx?Mode=Upload&amp;CheckInComment=&amp;ID=3455&amp;RootFolder=%2FApps00%2FShared%20Documents&amp;IsDlg=1" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="ver" Value="823153556" RecordedValue="823153556" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="id" Value="Ribbon.DocLibListForm.Edit" RecordedValue="Ribbon.DocLibListForm.Edit" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="lcid" Value="1033" RecordedValue="1033" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="qt" Value="ribbonvisibletabdeep" RecordedValue="ribbonvisibletabdeep" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
          <FormPostHttpBody />
        </Request>
        <Request Method="GET" Guid="bcdf1f10-7dba-42ed-b159-d1e7f863450a" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/EditForm.aspx?Mode=Upload&amp;CheckInComment=&amp;ID=3455&amp;RootFolder=%2FApps00%2FShared%20Documents&amp;IsDlg=1" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
        <Request Method="GET" Guid="759d9109-ed6f-4cda-b4cb-5381e24f4e1c" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="8" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/EditForm.aspx?Mode=Upload&amp;CheckInComment=&amp;ID=3455&amp;RootFolder=%2FApps00%2FShared%20Documents&amp;IsDlg=1" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
      </DependentRequests>
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/_layouts/15/UploadEx.aspx?List=%7bED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7d&amp;RootFolder=&amp;IsDlg=1" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="2" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam7.RootFolder" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;RootFolder=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam8.IsDlg" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;IsDlg=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam154.RootFolder" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;RootFolder=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam155.IsDlg" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;IsDlg=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam5.Mode" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?Mode=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam6.ID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;ID=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam2.__EVENTTARGET" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ame=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; val" />
            <RuleParameter Name="Index" Value="50" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam3.ctl00$ctl44$ctl04" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value=" id=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; uns" />
            <RuleParameter Name="Index" Value="72" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam4.ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl01$ctl00$ContentTypeChoice" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Cor" />
            <RuleParameter Name="Index" Value="33" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam5.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_FileLeafRef" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ef&quot;:&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;Ti" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam6.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Title" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="le&quot;:&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;Ap" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam7.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Status" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="us&quot;:&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;Co" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam8.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_owshiddenversion" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="dal=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; --&gt;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam9.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_SubmitClientForm" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ons=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;&lt;ie" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam152.Mode" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?Mode=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam153.ID" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;ID=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam29.__EVENTTARGET" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ame=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; val" />
            <RuleParameter Name="Index" Value="50" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam30.ctl00$ctl44$ctl04" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value=" id=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; uns" />
            <RuleParameter Name="Index" Value="72" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam31.ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl01$ctl00$ContentTypeChoice" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;Cor" />
            <RuleParameter Name="Index" Value="33" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam32.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_FileLeafRef" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ef&quot;:&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;Ti" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam33.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Title" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="le&quot;:&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;Ap" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam34.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Status" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="us&quot;:&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;,&quot;Co" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam35.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_owshiddenversion" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="dal=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; --&gt;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam36.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_SubmitClientForm" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ons=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;&gt;&lt;ie" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="Mode" Value="Upload" RecordedValue="Upload" CorrelationBinding="{{QueryStringParam67.Mode}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="CheckInComment" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ID" Value="3455" RecordedValue="3455" CorrelationBinding="{{QueryStringParam68.ID}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="RootFolder" Value="%2FApps00%2FShared%20Documents" RecordedValue="%2FApps00%2FShared%20Documents" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsDlg" Value="1" RecordedValue="1" CorrelationBinding="{{QueryStringParam12.IsDlg}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="c3d37449-6c6d-4f53-9a1f-41847ba72490" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/images/blank.gif" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/EditForm.aspx?Mode=Upload&amp;CheckInComment=&amp;ID=3455&amp;RootFolder=%2FApps00%2FShared%20Documents&amp;IsDlg=1" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="7a94eb3b-9471-4be2-8587-b2eb2ff409a3" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/EditForm.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <QueryStringParameters>
        <QueryStringParameter Name="Mode" Value="Upload" RecordedValue="Upload" CorrelationBinding="{{QueryStringParam5.Mode}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="CheckInComment" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ID" Value="3455" RecordedValue="3455" CorrelationBinding="{{QueryStringParam6.ID}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="RootFolder" Value="{{QueryStringParam7.RootFolder}}" RecordedValue="%2fApps00%2fShared+Documents" CorrelationBinding="{{QueryStringParam7.RootFolder}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsDlg" Value="{{QueryStringParam8.IsDlg}}" RecordedValue="1" CorrelationBinding="{{QueryStringParam8.IsDlg}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="_wpcmWpid" Value="{{$HIDDEN2._wpcmWpid}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="wpcmVal" Value="{{$HIDDEN2.wpcmVal}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_PostbackSource" Value="{{$HIDDEN2.MSOWebPartPage_PostbackSource}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_SelectedWpId" Value="{{$HIDDEN2.MSOTlPn_SelectedWpId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_View" Value="{{$HIDDEN2.MSOTlPn_View}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_ShowSettings" Value="{{$HIDDEN2.MSOTlPn_ShowSettings}}" RecordedValue="False" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_SelectedLibrary" Value="{{$HIDDEN2.MSOGallery_SelectedLibrary}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_FilterString" Value="{{$HIDDEN2.MSOGallery_FilterString}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_Button" Value="{{$HIDDEN2.MSOTlPn_Button}}" RecordedValue="none" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$toolBarTbl$RightRptControls$ctl00$ctl00$diidIOSaveItem" RecordedValue="ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$toolBarTbl$RightRptControls$ctl00$ctl00$diidIOSaveItem" CorrelationBinding="{{FormPostParam2.__EVENTTARGET}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN2.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__REQUESTDIGEST" Value="{{$HIDDEN2.__REQUESTDIGEST}}" RecordedValue="0xF1794EBEC2F019DD4819171D27625FBB8BED51A10378B80DA8D04B428AA67CC757A66D4F133A98C7D0FAD1283E12AF6421CE01DD0401E0462A8742E3C5B5DAFF,13 Jun 2018 11:38:11 -0000" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_ListSchemaVersion_{ed28192a-3b67-43d8-ba8a-dcca3ace7d0b}" Value="{{$HIDDEN2._ListSchemaVersion_{ed28192a-3b67-43d8-ba8a-dcca3ace7d0b}}" RecordedValue="95" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_DisplayModeName" Value="{{$HIDDEN2.MSOSPWebPartManager_DisplayModeName}}" RecordedValue="Browse" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_ExitingDesignMode" Value="{{$HIDDEN2.MSOSPWebPartManager_ExitingDesignMode}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_Shared" Value="{{$HIDDEN2.MSOWebPartPage_Shared}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_LayoutChanges" Value="{{$HIDDEN2.MSOLayout_LayoutChanges}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_InDesignMode" Value="{{$HIDDEN2.MSOLayout_InDesignMode}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wpSelected" Value="{{$HIDDEN2._wpSelected}}" RecordedValue="MSOZoneCell_WebPartWPQ2" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wzSelected" Value="{{$HIDDEN2._wzSelected}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_OldDisplayModeName" Value="{{$HIDDEN2.MSOSPWebPartManager_OldDisplayModeName}}" RecordedValue="Browse" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_StartWebPartEditingName" Value="{{$HIDDEN2.MSOSPWebPartManager_StartWebPartEditingName}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_EndWebPartEditing" Value="{{$HIDDEN2.MSOSPWebPartManager_EndWebPartEditing}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_maintainWorkspaceScrollPosition" Value="{{$HIDDEN2._maintainWorkspaceScrollPosition}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN2.__VIEWSTATE}}" RecordedValue="/wEPDwUKLTk3NzIwMzI3NQ9kFgJmD2QWAgIBDxYCHgVjbGFzcwUJbXMtZGlhbG9nFgQCAQ9kFgICGQ9kFgICAw9kFgICAQ9kFgJmDxQrAAZkBS5odHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215L1BlcnNvbi5hc3B4BSNodHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215LwUfL0FwcHMwMC9fbGF5b3V0cy8xNS9teXN1YnMuYXNweAWgAi9BcHBzMDAvX2xheW91dHMvMTUvcmVnaW9uYWxzZXRuZy5hc3B4P3R5cGU9dXNlciZzb3VyY2U9aHR0cHMlM0ElMkYlMkZzcCUyRWNvcmRpc3NvbHV0aW9ucyUyRWNvbSUyRkFwcHMwMCUyRlNoYXJlZCUyMERvY3VtZW50cyUyRkZvcm1zJTJGRWRpdEZvcm0lMkVhc3B4JTNGTW9kZSUzRFVwbG9hZCUyNmFtcCUzQkNoZWNrSW5Db21tZW50JTNEJTI2YW1wJTNCSUQlM0QzNDU1JTI2YW1wJTNCUm9vdEZvbGRlciUzRCUyNTJGQXBwczAwJTI1MkZTaGFyZWQlMjUyMERvY3VtZW50cyUyNmFtcCUzQklzRGxnJTNEMQX0Amh0dHBzOi8vc3AuZXhjZWxzdXBwb3J0Lm9yZzo0NDMvbXkvX2xheW91dHMvMTUvRWRpdFByb2ZpbGUuYXNweD9Vc2VyU2V0dGluZ3NQcm92aWRlcj0yMzRiZjBlZCUyRDcwZGIlMkQ0MTU4JTJEYTMzMiUyRDRkZmQ2ODNiNDE0OCZSZXR1cm5Vcmw9aHR0cHMlM0ElMkYlMkZzcCUyRWNvcmRpc3NvbHV0aW9ucyUyRWNvbSUyRkFwcHMwMCUyRlNoYXJlZCUyMERvY3VtZW50cyUyRkZvcm1zJTJGRWRpdEZvcm0lMkVhc3B4JTNGTW9kZSUzRFVwbG9hZCUyNmFtcCUzQkNoZWNrSW5Db21tZW50JTNEJTI2YW1wJTNCSUQlM0QzNDU1JTI2YW1wJTNCUm9vdEZvbGRlciUzRCUyNTJGQXBwczAwJTI1MkZTaGFyZWQlMjUyMERvY3VtZW50cyUyNmFtcCUzQklzRGxnJTNEMWQCBw9kFgYCAQ9kFgICAQ9kFgIFJmdfMTEyNmIwZjhfZTVlNl80Mjc3X2JhYTZfNDIzZGEwYmJhNDc3D2QWAmYPZBYGAgMPZBYCAgEPZBYEAgEPZBYCZg9kFgICAw8PFgYeBFRleHQFBFNhdmUeDU9uQ2xpZW50Q2xpY2sFbGlmICghUHJlU2F2ZUl0ZW0oKSkgcmV0dXJuIGZhbHNlO2lmIChTUENsaWVudEZvcm1zLkNsaWVudEZvcm1NYW5hZ2VyLlN1Ym1pdENsaWVudEZvcm0oJ1dQUTInKSkgcmV0dXJuIGZhbHNlOx4IVGFiSW5kZXgBAABkZAIDD2QWAmYPZBYCAgMPDxYGHglBY2Nlc3NLZXkFAUMfAQUGQ2FuY2VsHwIFTHNldFRpbWVvdXQoZnVuY3Rpb24oKXt3aW5kb3cuZnJhbWVFbGVtZW50LmNhbmNlbFBvcFVwKCk7fSwgMCk7IHJldHVybiBmYWxzZTtkZAIFD2QWAmYPZBYCAgMPZBYCZg9kFgICAQ8PFg4fAQULRGVsZXRlIEl0ZW0eCEltYWdlVXJsBR8vX2xheW91dHMvMTUvaW1hZ2VzL2RlbGl0ZW0uZ2lmHwQFAVgeEVBlcm1pc3Npb25Db250ZXh0CymKAU1pY3Jvc29mdC5TaGFyZVBvaW50LlV0aWxpdGllcy5QZXJtaXNzaW9uQ29udGV4dCwgTWljcm9zb2Z0LlNoYXJlUG9pbnQsIFZlcnNpb249MTYuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49NzFlOWJjZTExMWU5NDI5YwIeC1Blcm1pc3Npb25zKCmAAU1pY3Jvc29mdC5TaGFyZVBvaW50LlNQQmFzZVBlcm1pc3Npb25zLCBNaWNyb3NvZnQuU2hhcmVQb2ludCwgVmVyc2lvbj0xNi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03MWU5YmNlMTExZTk0MjljD0RlbGV0ZUxpc3RJdGVtcx8CBSByZXR1cm4gRGVsZXRlSXRlbUNvbmZpcm1hdGlvbigpOx4oQ2xpZW50T25DbGlja1NjcmlwdENvbnRhaW5pbmdQcmVmaXhlZFVybGRkZAIHD2QWAmYPZBYIAgMPZBYCZg9kFgQCAw8QD2QWAh4Ib25jaGFuZ2UFkAFqYXZhc2NyaXB0OkNoYW5nZUNvbnRlbnRUeXBlKCJjdGwwMF9jdGw0M19nXzExMjZiMGY4X2U1ZTZfNDI3N19iYWE2XzQyM2RhMGJiYTQ3N19jdGwwMF9jdGwwMl9jdGwwMF9jdGwwMV9jdGwwMF9Db250ZW50VHlwZUNob2ljZSIpO3JldHVybiBmYWxzZTsPFgJmAgEWAhAFD0NvcmRpcyBEb2N1bWVudAVKMHgwMTAxMDBDODUyREUzMjI4NDI2RTQ4OUEzQUZEM0ZFQTJGNDExMTAwRTk3N0Q4N0Q5RjQxNTY0NThBNDBFQ0RGQ0E1Q0I3MEFnEAUZQ29yZGlzIExpbmsgdG8gYSBEb2N1bWVudAUqMHgwMTAxMEEwMDg2MzVFQjlBMzVDQjZBNDc4NTY1NUJGQzA5QkY4RDc4Z2RkAgUPDxYGHwFlHghDc3NDbGFzcwULbXMtbWV0YWRhdGEeBF8hU0ICAmRkAgUPZBYCZg9kFgICAQ9kFgxmD2QWAgIBD2QWAmYPZBYCAgkPFgIeE1ByZXZpb3VzQ29udHJvbE1vZGULKYgBTWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViQ29udHJvbHMuU1BDb250cm9sTW9kZSwgTWljcm9zb2Z0LlNoYXJlUG9pbnQsIFZlcnNpb249MTYuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49NzFlOWJjZTExMWU5NDI5YwJkAgEPZBYCAgEPZBYCZg9kFgICCQ8WAh8MCysGAmQCAg9kFgICAQ9kFgJmD2QWAgIJDxYCHwwLKwYCZAIDD2QWAgIBD2QWAmYPZBYCAgkPFgIfDAsrBgJkAgQPZBYCAgEPZBYCZg9kFgICCQ8WAh8MCysGAmQCBQ9kFgICAQ9kFgJmD2QWAgIJDxYCHwwLKwYCZAIHD2QWAmYPZBYEAgMPFgIfDAsrBgEWAmYPFgIfDAsrBgFkAgUPFgIfDAsrBgEWAmYPFgIfDAsrBgFkAhEPZBYEZg9kFgICAQ9kFgJmD2QWBgIDDxYCHwwLKwYBZAIFD2QWBAIBDxYCHwwLKwYBZAIDDxYCHwwLKwYBZAIHD2QWBAIBDxYCHwwLKwYBZAIDDxYCHwwLKwYBZAIBD2QWBAIBD2QWAmYPZBYCAgMPDxYGHwEFBFNhdmUfAgVsaWYgKCFQcmVTYXZlSXRlbSgpKSByZXR1cm4gZmFsc2U7aWYgKFNQQ2xpZW50Rm9ybXMuQ2xpZW50Rm9ybU1hbmFnZXIuU3VibWl0Q2xpZW50Rm9ybSgnV1BRMicpKSByZXR1cm4gZmFsc2U7HwMBAABkZAIDD2QWAmYPZBYCAgMPDxYGHwQFAUMfAQUGQ2FuY2VsHwIFTHNldFRpbWVvdXQoZnVuY3Rpb24oKXt3aW5kb3cuZnJhbWVFbGVtZW50LmNhbmNlbFBvcFVwKCk7fSwgMCk7IHJldHVybiBmYWxzZTtkZAIFD2QWAgICD2QWBAIBD2QWAgIDD2QWAmYPZBYEAgMPZBYIAgEPFgYeE0NsaWVudE9uQ2xpY2tTY3JpcHQFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkfCAV5RW5zdXJlU2NyaXB0RnVuYygnc2hhcmluZy5qcycsICdEaXNwbGF5U2hhcmVkV2l0aERpYWxvZycsIGZ1bmN0aW9uICgpIHsgRGlzcGxheVNoYXJlZFdpdGhEaWFsb2coJ1x1MDAyZkFwcHMwMFx1MDAyZicpOyB9KR4YQ2xpZW50T25DbGlja05hdmlnYXRlVXJsZGQCBQ8WAh4HVmlzaWJsZWhkAgsPFgIfD2hkAhIPZBYCZg8PFgYeHFByZXZpb3VzQXV0aG9yaW5nSXRlbVZlcnNpb24FATEeGlByZXZpb3VzQXV0aG9yaW5nSXRlbU93bmVyBQQzNDU1HhxQcmV2aW91c0F1dGhvcmluZ0NvbnRyb2xNb2RlCysGAmRkAgQPDxYCHwQFAS9kZAIDD2QWAgIBD2QWAgIBD2QWBgIBDw8WBB8LAgIfCgUXbXMtcHJvbW90ZWRBY3Rpb25CdXR0b25kZAIDD2QWAmYPDxYEHwsCAh8KBRdtcy1wcm9tb3RlZEFjdGlvbkJ1dHRvbmRkAgUPDxYGHwoFF21zLXByb21vdGVkQWN0aW9uQnV0dG9uHwsCAh8PaGRkAhMPZBYCAgEPZBYCAg0PDxYCHw9oZBYCAgEPZBYCZg9kFgICAw9kFgICBQ9kFgICAQ88KwAJAQAPFgQeDVBhdGhTZXBhcmF0b3IECB4NTmV2ZXJFeHBhbmRlZGdkZBgBBRdjdGwwMCRUb3BOYXZpZ2F0aW9uTWVudQ8PZAUUSG9tZVxBcHBzICYgUHJvZHVjdHNkxHlsPksEJjhJ7ZHcfGIKIzpAI8HOk8kS8P7EHSQCtxA=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN2.__VIEWSTATEGENERATOR}}" RecordedValue="2DB155A3" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN2.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN2.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN2.__EVENTVALIDATION}}" RecordedValue="/wEdAAoJu2KsFQCwGduQvqnhGg/HLmXyYwA+OfFaG5A2lz8nCLUgFLpnKOjvBAU2tXnwD0zcGx/ClmkNDkC6bI6ZjzGF4Y7PxaQ7vJ4c+yiHAL1cBA+pSN72eugVSovJ6GFyqLg4gYOetJ/ZZMCFwawqweQeNR224PUFoB078cRC/DtDfLacWTUWncfeq1XYE1tA88Emq1rCZTxXSVwfVenbodw86SlKWYvePIe3CVhZiu845NS8J9LFDAoOGRPY8iSEFgw=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl44$ctl04" Value="Ribbon.DocLibListForm.Edit" RecordedValue="Ribbon.DocLibListForm.Edit" CorrelationBinding="{{FormPostParam3.ctl00$ctl44$ctl04}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl01$ctl00$ContentTypeChoice" Value="0x010100C852DE3228426E489A3AFD3FEA2F411100E977D87D9F4156458A40ECDFCA5CB70A" RecordedValue="0x010100C852DE3228426E489A3AFD3FEA2F411100E977D87D9F4156458A40ECDFCA5CB70A" CorrelationBinding="{{FormPostParam4.ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl01$ctl00$ContentTypeChoice}}" UrlEncode="True" />
        <FormPostParameter Name="Status_1dab9b48-2d1a-47b3-878c-8e84f0d211ba_Radio" Value="DropDownButton" RecordedValue="DropDownButton" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl06$ctl00$owshiddenversion" Value="{{$HIDDEN2.ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl06$ctl00$owshiddenversion}}" RecordedValue="1" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_FileLeafRef" Value="File for the version 1.xlsx" RecordedValue="File for the version 1.xlsx" CorrelationBinding="{{FormPostParam5.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_FileLeafRef}}" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Title" Value="Cordis myFidoc English Template" RecordedValue="Cordis myFidoc English Template" CorrelationBinding="{{FormPostParam6.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Title}}" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Application" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Apps_x0020_Content_x0020_Type" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Status" Value="Draft" RecordedValue="Draft" CorrelationBinding="{{FormPostParam7.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Status}}" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Con_Tech" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_owshiddenversion" Value="1" RecordedValue="1" CorrelationBinding="{{FormPostParam8.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_owshiddenversion}}" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_SubmitClientForm" Value="true" RecordedValue="true" CorrelationBinding="{{FormPostParam9.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_SubmitClientForm}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="1577a7da-50da-4903-b422-cfabe05a1203" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/EditForm.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/EditForm.aspx?Mode=Upload&amp;CheckInComment=&amp;ID=3455&amp;RootFolder=%2FApps00%2FShared%20Documents&amp;IsDlg=1" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="Mode" Value="Upload" RecordedValue="Upload" CorrelationBinding="{{QueryStringParam152.Mode}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="CheckInComment" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ID" Value="3455" RecordedValue="3455" CorrelationBinding="{{QueryStringParam153.ID}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="RootFolder" Value="{{QueryStringParam154.RootFolder}}" RecordedValue="%2fApps00%2fShared+Documents" CorrelationBinding="{{QueryStringParam154.RootFolder}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsDlg" Value="{{QueryStringParam155.IsDlg}}" RecordedValue="1" CorrelationBinding="{{QueryStringParam155.IsDlg}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="_wpcmWpid" Value="{{$HIDDEN2._wpcmWpid}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="wpcmVal" Value="{{$HIDDEN2.wpcmVal}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_PostbackSource" Value="{{$HIDDEN2.MSOWebPartPage_PostbackSource}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_SelectedWpId" Value="{{$HIDDEN2.MSOTlPn_SelectedWpId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_View" Value="{{$HIDDEN2.MSOTlPn_View}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_ShowSettings" Value="{{$HIDDEN2.MSOTlPn_ShowSettings}}" RecordedValue="False" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_SelectedLibrary" Value="{{$HIDDEN2.MSOGallery_SelectedLibrary}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_FilterString" Value="{{$HIDDEN2.MSOGallery_FilterString}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_Button" Value="{{$HIDDEN2.MSOTlPn_Button}}" RecordedValue="none" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$toolBarTbl$RightRptControls$ctl00$ctl00$diidIOSaveItem" RecordedValue="ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$toolBarTbl$RightRptControls$ctl00$ctl00$diidIOSaveItem" CorrelationBinding="{{FormPostParam29.__EVENTTARGET}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN2.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__REQUESTDIGEST" Value="{{$HIDDEN2.__REQUESTDIGEST}}" RecordedValue="0xF1794EBEC2F019DD4819171D27625FBB8BED51A10378B80DA8D04B428AA67CC757A66D4F133A98C7D0FAD1283E12AF6421CE01DD0401E0462A8742E3C5B5DAFF,13 Jun 2018 11:38:11 -0000" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_ListSchemaVersion_{ed28192a-3b67-43d8-ba8a-dcca3ace7d0b}" Value="{{$HIDDEN2._ListSchemaVersion_{ed28192a-3b67-43d8-ba8a-dcca3ace7d0b}}" RecordedValue="95" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_DisplayModeName" Value="{{$HIDDEN2.MSOSPWebPartManager_DisplayModeName}}" RecordedValue="Browse" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_ExitingDesignMode" Value="{{$HIDDEN2.MSOSPWebPartManager_ExitingDesignMode}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_Shared" Value="{{$HIDDEN2.MSOWebPartPage_Shared}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_LayoutChanges" Value="{{$HIDDEN2.MSOLayout_LayoutChanges}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_InDesignMode" Value="{{$HIDDEN2.MSOLayout_InDesignMode}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wpSelected" Value="{{$HIDDEN2._wpSelected}}" RecordedValue="MSOZoneCell_WebPartWPQ2" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wzSelected" Value="{{$HIDDEN2._wzSelected}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_OldDisplayModeName" Value="{{$HIDDEN2.MSOSPWebPartManager_OldDisplayModeName}}" RecordedValue="Browse" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_StartWebPartEditingName" Value="{{$HIDDEN2.MSOSPWebPartManager_StartWebPartEditingName}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_EndWebPartEditing" Value="{{$HIDDEN2.MSOSPWebPartManager_EndWebPartEditing}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_maintainWorkspaceScrollPosition" Value="{{$HIDDEN2._maintainWorkspaceScrollPosition}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN2.__VIEWSTATE}}" RecordedValue="/wEPDwUKLTk3NzIwMzI3NQ9kFgJmD2QWAgIBDxYCHgVjbGFzcwUJbXMtZGlhbG9nFgQCAQ9kFgICGQ9kFgICAw9kFgICAQ9kFgJmDxQrAAZkBS5odHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215L1BlcnNvbi5hc3B4BSNodHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215LwUfL0FwcHMwMC9fbGF5b3V0cy8xNS9teXN1YnMuYXNweAWgAi9BcHBzMDAvX2xheW91dHMvMTUvcmVnaW9uYWxzZXRuZy5hc3B4P3R5cGU9dXNlciZzb3VyY2U9aHR0cHMlM0ElMkYlMkZzcCUyRWNvcmRpc3NvbHV0aW9ucyUyRWNvbSUyRkFwcHMwMCUyRlNoYXJlZCUyMERvY3VtZW50cyUyRkZvcm1zJTJGRWRpdEZvcm0lMkVhc3B4JTNGTW9kZSUzRFVwbG9hZCUyNmFtcCUzQkNoZWNrSW5Db21tZW50JTNEJTI2YW1wJTNCSUQlM0QzNDU1JTI2YW1wJTNCUm9vdEZvbGRlciUzRCUyNTJGQXBwczAwJTI1MkZTaGFyZWQlMjUyMERvY3VtZW50cyUyNmFtcCUzQklzRGxnJTNEMQX0Amh0dHBzOi8vc3AuZXhjZWxzdXBwb3J0Lm9yZzo0NDMvbXkvX2xheW91dHMvMTUvRWRpdFByb2ZpbGUuYXNweD9Vc2VyU2V0dGluZ3NQcm92aWRlcj0yMzRiZjBlZCUyRDcwZGIlMkQ0MTU4JTJEYTMzMiUyRDRkZmQ2ODNiNDE0OCZSZXR1cm5Vcmw9aHR0cHMlM0ElMkYlMkZzcCUyRWNvcmRpc3NvbHV0aW9ucyUyRWNvbSUyRkFwcHMwMCUyRlNoYXJlZCUyMERvY3VtZW50cyUyRkZvcm1zJTJGRWRpdEZvcm0lMkVhc3B4JTNGTW9kZSUzRFVwbG9hZCUyNmFtcCUzQkNoZWNrSW5Db21tZW50JTNEJTI2YW1wJTNCSUQlM0QzNDU1JTI2YW1wJTNCUm9vdEZvbGRlciUzRCUyNTJGQXBwczAwJTI1MkZTaGFyZWQlMjUyMERvY3VtZW50cyUyNmFtcCUzQklzRGxnJTNEMWQCBw9kFgYCAQ9kFgICAQ9kFgIFJmdfMTEyNmIwZjhfZTVlNl80Mjc3X2JhYTZfNDIzZGEwYmJhNDc3D2QWAmYPZBYGAgMPZBYCAgEPZBYEAgEPZBYCZg9kFgICAw8PFgYeBFRleHQFBFNhdmUeDU9uQ2xpZW50Q2xpY2sFbGlmICghUHJlU2F2ZUl0ZW0oKSkgcmV0dXJuIGZhbHNlO2lmIChTUENsaWVudEZvcm1zLkNsaWVudEZvcm1NYW5hZ2VyLlN1Ym1pdENsaWVudEZvcm0oJ1dQUTInKSkgcmV0dXJuIGZhbHNlOx4IVGFiSW5kZXgBAABkZAIDD2QWAmYPZBYCAgMPDxYGHglBY2Nlc3NLZXkFAUMfAQUGQ2FuY2VsHwIFTHNldFRpbWVvdXQoZnVuY3Rpb24oKXt3aW5kb3cuZnJhbWVFbGVtZW50LmNhbmNlbFBvcFVwKCk7fSwgMCk7IHJldHVybiBmYWxzZTtkZAIFD2QWAmYPZBYCAgMPZBYCZg9kFgICAQ8PFg4fAQULRGVsZXRlIEl0ZW0eCEltYWdlVXJsBR8vX2xheW91dHMvMTUvaW1hZ2VzL2RlbGl0ZW0uZ2lmHwQFAVgeEVBlcm1pc3Npb25Db250ZXh0CymKAU1pY3Jvc29mdC5TaGFyZVBvaW50LlV0aWxpdGllcy5QZXJtaXNzaW9uQ29udGV4dCwgTWljcm9zb2Z0LlNoYXJlUG9pbnQsIFZlcnNpb249MTYuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49NzFlOWJjZTExMWU5NDI5YwIeC1Blcm1pc3Npb25zKCmAAU1pY3Jvc29mdC5TaGFyZVBvaW50LlNQQmFzZVBlcm1pc3Npb25zLCBNaWNyb3NvZnQuU2hhcmVQb2ludCwgVmVyc2lvbj0xNi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03MWU5YmNlMTExZTk0MjljD0RlbGV0ZUxpc3RJdGVtcx8CBSByZXR1cm4gRGVsZXRlSXRlbUNvbmZpcm1hdGlvbigpOx4oQ2xpZW50T25DbGlja1NjcmlwdENvbnRhaW5pbmdQcmVmaXhlZFVybGRkZAIHD2QWAmYPZBYIAgMPZBYCZg9kFgQCAw8QD2QWAh4Ib25jaGFuZ2UFkAFqYXZhc2NyaXB0OkNoYW5nZUNvbnRlbnRUeXBlKCJjdGwwMF9jdGw0M19nXzExMjZiMGY4X2U1ZTZfNDI3N19iYWE2XzQyM2RhMGJiYTQ3N19jdGwwMF9jdGwwMl9jdGwwMF9jdGwwMV9jdGwwMF9Db250ZW50VHlwZUNob2ljZSIpO3JldHVybiBmYWxzZTsPFgJmAgEWAhAFD0NvcmRpcyBEb2N1bWVudAVKMHgwMTAxMDBDODUyREUzMjI4NDI2RTQ4OUEzQUZEM0ZFQTJGNDExMTAwRTk3N0Q4N0Q5RjQxNTY0NThBNDBFQ0RGQ0E1Q0I3MEFnEAUZQ29yZGlzIExpbmsgdG8gYSBEb2N1bWVudAUqMHgwMTAxMEEwMDg2MzVFQjlBMzVDQjZBNDc4NTY1NUJGQzA5QkY4RDc4Z2RkAgUPDxYGHwFlHghDc3NDbGFzcwULbXMtbWV0YWRhdGEeBF8hU0ICAmRkAgUPZBYCZg9kFgICAQ9kFgxmD2QWAgIBD2QWAmYPZBYCAgkPFgIeE1ByZXZpb3VzQ29udHJvbE1vZGULKYgBTWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViQ29udHJvbHMuU1BDb250cm9sTW9kZSwgTWljcm9zb2Z0LlNoYXJlUG9pbnQsIFZlcnNpb249MTYuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49NzFlOWJjZTExMWU5NDI5YwJkAgEPZBYCAgEPZBYCZg9kFgICCQ8WAh8MCysGAmQCAg9kFgICAQ9kFgJmD2QWAgIJDxYCHwwLKwYCZAIDD2QWAgIBD2QWAmYPZBYCAgkPFgIfDAsrBgJkAgQPZBYCAgEPZBYCZg9kFgICCQ8WAh8MCysGAmQCBQ9kFgICAQ9kFgJmD2QWAgIJDxYCHwwLKwYCZAIHD2QWAmYPZBYEAgMPFgIfDAsrBgEWAmYPFgIfDAsrBgFkAgUPFgIfDAsrBgEWAmYPFgIfDAsrBgFkAhEPZBYEZg9kFgICAQ9kFgJmD2QWBgIDDxYCHwwLKwYBZAIFD2QWBAIBDxYCHwwLKwYBZAIDDxYCHwwLKwYBZAIHD2QWBAIBDxYCHwwLKwYBZAIDDxYCHwwLKwYBZAIBD2QWBAIBD2QWAmYPZBYCAgMPDxYGHwEFBFNhdmUfAgVsaWYgKCFQcmVTYXZlSXRlbSgpKSByZXR1cm4gZmFsc2U7aWYgKFNQQ2xpZW50Rm9ybXMuQ2xpZW50Rm9ybU1hbmFnZXIuU3VibWl0Q2xpZW50Rm9ybSgnV1BRMicpKSByZXR1cm4gZmFsc2U7HwMBAABkZAIDD2QWAmYPZBYCAgMPDxYGHwQFAUMfAQUGQ2FuY2VsHwIFTHNldFRpbWVvdXQoZnVuY3Rpb24oKXt3aW5kb3cuZnJhbWVFbGVtZW50LmNhbmNlbFBvcFVwKCk7fSwgMCk7IHJldHVybiBmYWxzZTtkZAIFD2QWAgICD2QWBAIBD2QWAgIDD2QWAmYPZBYEAgMPZBYIAgEPFgYeE0NsaWVudE9uQ2xpY2tTY3JpcHQFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkfCAV5RW5zdXJlU2NyaXB0RnVuYygnc2hhcmluZy5qcycsICdEaXNwbGF5U2hhcmVkV2l0aERpYWxvZycsIGZ1bmN0aW9uICgpIHsgRGlzcGxheVNoYXJlZFdpdGhEaWFsb2coJ1x1MDAyZkFwcHMwMFx1MDAyZicpOyB9KR4YQ2xpZW50T25DbGlja05hdmlnYXRlVXJsZGQCBQ8WAh4HVmlzaWJsZWhkAgsPFgIfD2hkAhIPZBYCZg8PFgYeHFByZXZpb3VzQXV0aG9yaW5nSXRlbVZlcnNpb24FATEeGlByZXZpb3VzQXV0aG9yaW5nSXRlbU93bmVyBQQzNDU1HhxQcmV2aW91c0F1dGhvcmluZ0NvbnRyb2xNb2RlCysGAmRkAgQPDxYCHwQFAS9kZAIDD2QWAgIBD2QWAgIBD2QWBgIBDw8WBB8LAgIfCgUXbXMtcHJvbW90ZWRBY3Rpb25CdXR0b25kZAIDD2QWAmYPDxYEHwsCAh8KBRdtcy1wcm9tb3RlZEFjdGlvbkJ1dHRvbmRkAgUPDxYGHwoFF21zLXByb21vdGVkQWN0aW9uQnV0dG9uHwsCAh8PaGRkAhMPZBYCAgEPZBYCAg0PDxYCHw9oZBYCAgEPZBYCZg9kFgICAw9kFgICBQ9kFgICAQ88KwAJAQAPFgQeDVBhdGhTZXBhcmF0b3IECB4NTmV2ZXJFeHBhbmRlZGdkZBgBBRdjdGwwMCRUb3BOYXZpZ2F0aW9uTWVudQ8PZAUUSG9tZVxBcHBzICYgUHJvZHVjdHNkxHlsPksEJjhJ7ZHcfGIKIzpAI8HOk8kS8P7EHSQCtxA=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN2.__VIEWSTATEGENERATOR}}" RecordedValue="2DB155A3" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN2.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN2.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN2.__EVENTVALIDATION}}" RecordedValue="/wEdAAoJu2KsFQCwGduQvqnhGg/HLmXyYwA+OfFaG5A2lz8nCLUgFLpnKOjvBAU2tXnwD0zcGx/ClmkNDkC6bI6ZjzGF4Y7PxaQ7vJ4c+yiHAL1cBA+pSN72eugVSovJ6GFyqLg4gYOetJ/ZZMCFwawqweQeNR224PUFoB078cRC/DtDfLacWTUWncfeq1XYE1tA88Emq1rCZTxXSVwfVenbodw86SlKWYvePIe3CVhZiu845NS8J9LFDAoOGRPY8iSEFgw=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl44$ctl04" Value="Ribbon.DocLibListForm.Edit" RecordedValue="Ribbon.DocLibListForm.Edit" CorrelationBinding="{{FormPostParam30.ctl00$ctl44$ctl04}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl01$ctl00$ContentTypeChoice" Value="0x010100C852DE3228426E489A3AFD3FEA2F411100E977D87D9F4156458A40ECDFCA5CB70A" RecordedValue="0x010100C852DE3228426E489A3AFD3FEA2F411100E977D87D9F4156458A40ECDFCA5CB70A" CorrelationBinding="{{FormPostParam31.ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl01$ctl00$ContentTypeChoice}}" UrlEncode="True" />
        <FormPostParameter Name="Status_1dab9b48-2d1a-47b3-878c-8e84f0d211ba_Radio" Value="DropDownButton" RecordedValue="DropDownButton" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl06$ctl00$owshiddenversion" Value="{{$HIDDEN2.ctl00$ctl43$g_1126b0f8_e5e6_4277_baa6_423da0bba477$ctl00$ctl02$ctl00$ctl06$ctl00$owshiddenversion}}" RecordedValue="1" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_FileLeafRef" Value="File for the version 1.xlsx" RecordedValue="File for the version 1.xlsx" CorrelationBinding="{{FormPostParam32.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_FileLeafRef}}" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Title" Value="Cordis myFidoc English Template" RecordedValue="Cordis myFidoc English Template" CorrelationBinding="{{FormPostParam33.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Title}}" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Application" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Apps_x0020_Content_x0020_Type" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Status" Value="Draft" RecordedValue="Draft" CorrelationBinding="{{FormPostParam34.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Status}}" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_Con_Tech" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_owshiddenversion" Value="1" RecordedValue="1" CorrelationBinding="{{FormPostParam35.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_owshiddenversion}}" UrlEncode="True" />
        <FormPostParameter Name="ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_SubmitClientForm" Value="true" RecordedValue="true" CorrelationBinding="{{FormPostParam36.ClientFormPostBackValue_ed28192a-3b67-43d8-ba8a-dcca3ace7d0b_SubmitClientForm}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Guid="ab971746-6cb9-4d5c-a84d-15a3c4ff4ce9" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/blank.htm" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="646d1ff0-29dd-4ccf-9ffc-be7cbe191b5f" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <QueryStringParameters>
        <QueryStringParameter Name="InitialTabId" Value="Ribbon%2ERead" RecordedValue="Ribbon%2ERead" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="VisibilityContext" Value="WSSTabPersistence" RecordedValue="WSSTabPersistence" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="_wpcmWpid" Value="{{$HIDDEN1._wpcmWpid}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="wpcmVal" Value="{{$HIDDEN1.wpcmVal}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_PostbackSource" Value="{{$HIDDEN1.MSOWebPartPage_PostbackSource}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_SelectedWpId" Value="{{$HIDDEN1.MSOTlPn_SelectedWpId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_View" Value="{{$HIDDEN1.MSOTlPn_View}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_ShowSettings" Value="{{$HIDDEN1.MSOTlPn_ShowSettings}}" RecordedValue="False" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_SelectedLibrary" Value="{{$HIDDEN1.MSOGallery_SelectedLibrary}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_FilterString" Value="{{$HIDDEN1.MSOGallery_FilterString}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_Button" Value="{{$HIDDEN1.MSOTlPn_Button}}" RecordedValue="none" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__REQUESTDIGEST" Value="{{$HIDDEN1.__REQUESTDIGEST}}" RecordedValue="0x8FE4975E52D60F51D0872CC95F790E502E71EC9950E74798ECB5082F551062F768156A53A134337D16D1561CE83EDD294AC822E1EAD04BD97FE9082CDE276E9A,13 Jun 2018 11:37:28 -0000" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_DisplayModeName" Value="{{$HIDDEN1.MSOSPWebPartManager_DisplayModeName}}" RecordedValue="Browse" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_ExitingDesignMode" Value="{{$HIDDEN1.MSOSPWebPartManager_ExitingDesignMode}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_Shared" Value="{{$HIDDEN1.MSOWebPartPage_Shared}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_LayoutChanges" Value="{{$HIDDEN1.MSOLayout_LayoutChanges}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_InDesignMode" Value="{{$HIDDEN1.MSOLayout_InDesignMode}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wpSelected" Value="{{$HIDDEN1._wpSelected}}" RecordedValue="MSOZoneCell_WebPartWPQ2" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wzSelected" Value="{{$HIDDEN1._wzSelected}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_OldDisplayModeName" Value="{{$HIDDEN1.MSOSPWebPartManager_OldDisplayModeName}}" RecordedValue="Browse" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_StartWebPartEditingName" Value="{{$HIDDEN1.MSOSPWebPartManager_StartWebPartEditingName}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_EndWebPartEditing" Value="{{$HIDDEN1.MSOSPWebPartManager_EndWebPartEditing}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_maintainWorkspaceScrollPosition" Value="{{$HIDDEN1._maintainWorkspaceScrollPosition}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="/wEPDwUJMjI4MzQ1ODc1D2QWAmYPZBYCAgEPZBYEAgEPZBYCAhkPZBYCAgMPZBYCAgEPZBYCZg8UKwAGZAUuaHR0cHM6Ly9zcC5leGNlbHN1cHBvcnQub3JnOjQ0My9teS9QZXJzb24uYXNweAUjaHR0cHM6Ly9zcC5leGNlbHN1cHBvcnQub3JnOjQ0My9teS8FHy9BcHBzMDAvX2xheW91dHMvMTUvbXlzdWJzLmFzcHgFnwEvQXBwczAwL19sYXlvdXRzLzE1L3JlZ2lvbmFsc2V0bmcuYXNweD90eXBlPXVzZXImc291cmNlPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkZTaGFyZWQlMjBEb2N1bWVudHMlMkZGb3JtcyUyRmFsbCUyMGRvY3VtZW50cyUyRWFzcHgF8wFodHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215L19sYXlvdXRzLzE1L0VkaXRQcm9maWxlLmFzcHg/VXNlclNldHRpbmdzUHJvdmlkZXI9MjM0YmYwZWQlMkQ3MGRiJTJENDE1OCUyRGEzMzIlMkQ0ZGZkNjgzYjQxNDgmUmV0dXJuVXJsPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkZTaGFyZWQlMjBEb2N1bWVudHMlMkZGb3JtcyUyRmFsbCUyMGRvY3VtZW50cyUyRWFzcHhkAgcPZBYIAgEPZBYCAgEPZBYCBSZnXzEyNjcxNWI3X2I1ZjhfNGFkYl84YTNhX2E5NGQyMDhjMjBhNRAPFgYeC1BhcmFtVmFsdWVzMsgIAAEAAAD/////AQAAAAAAAAAMAgAAAFhNaWNyb3NvZnQuU2hhcmVQb2ludCwgVmVyc2lvbj0xNi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03MWU5YmNlMTExZTk0MjljBQEAAAA9TWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViUGFydFBhZ2VzLlBhcmFtZXRlck5hbWVWYWx1ZUhhc2h0YWJsZQEAAAAFX2NvbGwDHFN5c3RlbS5Db2xsZWN0aW9ucy5IYXNodGFibGUCAAAACQMAAAAEAwAAABxTeXN0ZW0uQ29sbGVjdGlvbnMuSGFzaHRhYmxlBwAAAApMb2FkRmFjdG9yB1ZlcnNpb24IQ29tcGFyZXIQSGFzaENvZGVQcm92aWRlcghIYXNoU2l6ZQRLZXlzBlZhbHVlcwAAAwMABQULCBxTeXN0ZW0uQ29sbGVjdGlvbnMuSUNvbXBhcmVyJFN5c3RlbS5Db2xsZWN0aW9ucy5JSGFzaENvZGVQcm92aWRlcgjsUTg/DQAAAAoKEQAAAAkEAAAACQUAAAAQBAAAAAsAAAAGBgAAAA9Ob0Fubm91bmNlbWVudHMGBwAAAApGaWx0ZXJMaW5rBggAAAANaWRQcmVzRW5hYmxlZAYJAAAACW9wZW5fbWVudQYKAAAAClNlbGVjdGVkSUQGCwAAABBkdnRfcHJldnBhZ2VkYXRhBgwAAAARZHZ0X3N0YXJ0cG9zaXRpb24GDQAAABVPcGVuTWVudUtleUFjY2Vzc2libGUGDgAAABBkdnRfbmV4dHBhZ2VkYXRhBg8AAAATc2VsZWN0X2Rlc2VsZWN0X2FsbAYQAAAAFE5vQW5ub3VuY2VtZW50c0hvd1RvEAUAAAALAAAABhEAAABTVGhlcmUgYXJlIG5vIGl0ZW1zIHRvIHNob3cgaW4gdGhpcyB2aWV3IG9mIHRoZSAiU2hhcmVkIERvY3VtZW50cyIgZG9jdW1lbnQgbGlicmFyeS4GEgAAAAE/BhMAAAAgUHJlc2VuY2UgZW5hYmxlZCBmb3IgdGhpcyBjb2x1bW4GFAAAAAlPcGVuIE1lbnUGFQAAAAItMQYWAAAAM1BhZ2VkPVRSVUUmUGFnZWRQcmV2PVRSVUUmcF9Hcm91cENvbDE9JnBfR3JvdXBDb2wyPQYXAAAAAAYYAAAALlVzZSBTSElGVCtFTlRFUiB0byBvcGVuIHRoZSBtZW51IChuZXcgd2luZG93KS4GGQAAADVQYWdlZD1UUlVFJnBfR3JvdXBDb2wxPW15SVImcF9Hcm91cENvbDI9MDIlMjBPdmVydmlldwYaAAAAHFNlbGVjdCBvciBkZXNlbGVjdCBhbGwgaXRlbXMGGwAAACtUbyBhZGQgYSBuZXcgaXRlbSwgY2xpY2sgIk5ldyIgb3IgIlVwbG9hZCIuCx4QRmlsdGVyT3BlcmF0aW9uczKNBQABAAAA/////wEAAAAAAAAABAEAAACTAlN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkRpY3Rpb25hcnlgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbTWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViUGFydFBhZ2VzLkZpbHRlck9wZXJhdGlvbiwgTWljcm9zb2Z0LlNoYXJlUG9pbnQsIFZlcnNpb249MTYuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49NzFlOWJjZTExMWU5NDI5Y11dAwAAAAdWZXJzaW9uCENvbXBhcmVyCEhhc2hTaXplAAMACJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0IAAAAAAkCAAAAAAAAAAQCAAAAkgFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5HZW5lcmljRXF1YWxpdHlDb21wYXJlcmAxW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQAAAAALHgxfdmlld0NvdW50ZXJmZGQWAmYPZBYCZg9kFgRmDxYGHgxGZWF0dXJlU2NvcGUFBFNpdGUeCExvY2F0aW9uBSFNaWNyb3NvZnQuU2hhcmVQb2ludC5TdGFuZGFyZE1lbnUeB0dyb3VwSWQFEFZpZXdTZWxlY3Rvck1lbnVkAgEPDxYCHglBY2Nlc3NLZXkFAVdkZAIFD2QWAgICD2QWBAIBD2QWAgIDD2QWAmYPZBYEAgMPZBYIAgEPFgYeE0NsaWVudE9uQ2xpY2tTY3JpcHQFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkeKENsaWVudE9uQ2xpY2tTY3JpcHRDb250YWluaW5nUHJlZml4ZWRVcmwFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkeGENsaWVudE9uQ2xpY2tOYXZpZ2F0ZVVybGRkAgUPFgIeB1Zpc2libGVoZAILDxYCHwpoZAISD2QWAmYPDxYGHhxQcmV2aW91c0F1dGhvcmluZ0l0ZW1WZXJzaW9uZR4aUHJldmlvdXNBdXRob3JpbmdJdGVtT3duZXJlHhxQcmV2aW91c0F1dGhvcmluZ0NvbnRyb2xNb2RlCymIAU1pY3Jvc29mdC5TaGFyZVBvaW50LldlYkNvbnRyb2xzLlNQQ29udHJvbE1vZGUsIE1pY3Jvc29mdC5TaGFyZVBvaW50LCBWZXJzaW9uPTE2LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTcxZTliY2UxMTFlOTQyOWMAZGQCBA8PFgIfBgUBL2RkAgMPZBYCAgEPZBYCAgEPZBYGAgEPDxYEHgRfIVNCAgIeCENzc0NsYXNzBRdtcy1wcm9tb3RlZEFjdGlvbkJ1dHRvbmRkAgMPZBYCZg8PFgQfDgICHw8FF21zLXByb21vdGVkQWN0aW9uQnV0dG9uZGQCBQ8PFgYfDwUXbXMtcHJvbW90ZWRBY3Rpb25CdXR0b24fDgICHwpoZGQCDw9kFgICAQ9kFgICAQ88KwAFAQAPFgIeFVBhcmVudExldmVsc0Rpc3BsYXllZGZkZAITD2QWAgIBD2QWBgIHD2QWAgIDDw8WAh8KaGRkAgkPZBYCAgEPFgIfCmhkAg0PDxYCHwpoZBYCAgEPZBYCZg9kFgICAw9kFgICBQ9kFgICAQ88KwAJAQAPFgQeDVBhdGhTZXBhcmF0b3IECB4NTmV2ZXJFeHBhbmRlZGdkZBgCBS1jdGwwMCRQbGFjZUhvbGRlckxlZnROYXZCYXIkVjRRdWlja0xhdW5jaE1lbnUPD2QFGkxpYnJhcmllc1xTaGFyZWQgRG9jdW1lbnRzZAUXY3RsMDAkVG9wTmF2aWdhdGlvbk1lbnUPD2QFFEhvbWVcQXBwcyAmIFByb2R1Y3RzZDbazdh6QNWgT1ZU+ZmJDIFDS06rjHs85E0HYHgTeeCU" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="06E2AF16" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN1.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN1.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN1.__EVENTVALIDATION}}" RecordedValue="/wEdAAPP+lotmyEIrDH1xYYcZbNsLmXyYwA+OfFaG5A2lz8nCLUgFLpnKOjvBAU2tXnwD0xmuX9v0xRqKMlbWztWtWznqd8sQh601nRczT968uN6vQ==" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl44$ctl04" Value="Ribbon.Read" RecordedValue="Ribbon.Read" CorrelationBinding="{{FormPostParam1.ctl00$ctl44$ctl04}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="9d348ed3-38f8-4db5-a82b-9c3b2345c15b" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx" />
      </Headers>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam777.InitialTabId" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?InitialTabId=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam778.VisibilityContext" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;VisibilityContext=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam793.InitialTabId" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?InitialTabId=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam794.VisibilityContext" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;VisibilityContext=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="1" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="InitialTabId" Value="Ribbon%2ERead" RecordedValue="Ribbon%2ERead" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="VisibilityContext" Value="WSSTabPersistence" RecordedValue="WSSTabPersistence" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="_wpcmWpid" Value="{{$HIDDEN1._wpcmWpid}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="wpcmVal" Value="{{$HIDDEN1.wpcmVal}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_PostbackSource" Value="{{$HIDDEN1.MSOWebPartPage_PostbackSource}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_SelectedWpId" Value="{{$HIDDEN1.MSOTlPn_SelectedWpId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_View" Value="{{$HIDDEN1.MSOTlPn_View}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_ShowSettings" Value="{{$HIDDEN1.MSOTlPn_ShowSettings}}" RecordedValue="False" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_SelectedLibrary" Value="{{$HIDDEN1.MSOGallery_SelectedLibrary}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_FilterString" Value="{{$HIDDEN1.MSOGallery_FilterString}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_Button" Value="{{$HIDDEN1.MSOTlPn_Button}}" RecordedValue="none" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__REQUESTDIGEST" Value="{{$HIDDEN1.__REQUESTDIGEST}}" RecordedValue="0x8FE4975E52D60F51D0872CC95F790E502E71EC9950E74798ECB5082F551062F768156A53A134337D16D1561CE83EDD294AC822E1EAD04BD97FE9082CDE276E9A,13 Jun 2018 11:37:28 -0000" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_DisplayModeName" Value="{{$HIDDEN1.MSOSPWebPartManager_DisplayModeName}}" RecordedValue="Browse" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_ExitingDesignMode" Value="{{$HIDDEN1.MSOSPWebPartManager_ExitingDesignMode}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_Shared" Value="{{$HIDDEN1.MSOWebPartPage_Shared}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_LayoutChanges" Value="{{$HIDDEN1.MSOLayout_LayoutChanges}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_InDesignMode" Value="{{$HIDDEN1.MSOLayout_InDesignMode}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wpSelected" Value="{{$HIDDEN1._wpSelected}}" RecordedValue="MSOZoneCell_WebPartWPQ2" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wzSelected" Value="{{$HIDDEN1._wzSelected}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_OldDisplayModeName" Value="{{$HIDDEN1.MSOSPWebPartManager_OldDisplayModeName}}" RecordedValue="Browse" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_StartWebPartEditingName" Value="{{$HIDDEN1.MSOSPWebPartManager_StartWebPartEditingName}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_EndWebPartEditing" Value="{{$HIDDEN1.MSOSPWebPartManager_EndWebPartEditing}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_maintainWorkspaceScrollPosition" Value="{{$HIDDEN1._maintainWorkspaceScrollPosition}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="/wEPDwUJMjI4MzQ1ODc1D2QWAmYPZBYCAgEPZBYEAgEPZBYCAhkPZBYCAgMPZBYCAgEPZBYCZg8UKwAGZAUuaHR0cHM6Ly9zcC5leGNlbHN1cHBvcnQub3JnOjQ0My9teS9QZXJzb24uYXNweAUjaHR0cHM6Ly9zcC5leGNlbHN1cHBvcnQub3JnOjQ0My9teS8FHy9BcHBzMDAvX2xheW91dHMvMTUvbXlzdWJzLmFzcHgFnwEvQXBwczAwL19sYXlvdXRzLzE1L3JlZ2lvbmFsc2V0bmcuYXNweD90eXBlPXVzZXImc291cmNlPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkZTaGFyZWQlMjBEb2N1bWVudHMlMkZGb3JtcyUyRmFsbCUyMGRvY3VtZW50cyUyRWFzcHgF8wFodHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215L19sYXlvdXRzLzE1L0VkaXRQcm9maWxlLmFzcHg/VXNlclNldHRpbmdzUHJvdmlkZXI9MjM0YmYwZWQlMkQ3MGRiJTJENDE1OCUyRGEzMzIlMkQ0ZGZkNjgzYjQxNDgmUmV0dXJuVXJsPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkZTaGFyZWQlMjBEb2N1bWVudHMlMkZGb3JtcyUyRmFsbCUyMGRvY3VtZW50cyUyRWFzcHhkAgcPZBYIAgEPZBYCAgEPZBYCBSZnXzEyNjcxNWI3X2I1ZjhfNGFkYl84YTNhX2E5NGQyMDhjMjBhNRAPFgYeC1BhcmFtVmFsdWVzMsgIAAEAAAD/////AQAAAAAAAAAMAgAAAFhNaWNyb3NvZnQuU2hhcmVQb2ludCwgVmVyc2lvbj0xNi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03MWU5YmNlMTExZTk0MjljBQEAAAA9TWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViUGFydFBhZ2VzLlBhcmFtZXRlck5hbWVWYWx1ZUhhc2h0YWJsZQEAAAAFX2NvbGwDHFN5c3RlbS5Db2xsZWN0aW9ucy5IYXNodGFibGUCAAAACQMAAAAEAwAAABxTeXN0ZW0uQ29sbGVjdGlvbnMuSGFzaHRhYmxlBwAAAApMb2FkRmFjdG9yB1ZlcnNpb24IQ29tcGFyZXIQSGFzaENvZGVQcm92aWRlcghIYXNoU2l6ZQRLZXlzBlZhbHVlcwAAAwMABQULCBxTeXN0ZW0uQ29sbGVjdGlvbnMuSUNvbXBhcmVyJFN5c3RlbS5Db2xsZWN0aW9ucy5JSGFzaENvZGVQcm92aWRlcgjsUTg/DQAAAAoKEQAAAAkEAAAACQUAAAAQBAAAAAsAAAAGBgAAAA9Ob0Fubm91bmNlbWVudHMGBwAAAApGaWx0ZXJMaW5rBggAAAANaWRQcmVzRW5hYmxlZAYJAAAACW9wZW5fbWVudQYKAAAAClNlbGVjdGVkSUQGCwAAABBkdnRfcHJldnBhZ2VkYXRhBgwAAAARZHZ0X3N0YXJ0cG9zaXRpb24GDQAAABVPcGVuTWVudUtleUFjY2Vzc2libGUGDgAAABBkdnRfbmV4dHBhZ2VkYXRhBg8AAAATc2VsZWN0X2Rlc2VsZWN0X2FsbAYQAAAAFE5vQW5ub3VuY2VtZW50c0hvd1RvEAUAAAALAAAABhEAAABTVGhlcmUgYXJlIG5vIGl0ZW1zIHRvIHNob3cgaW4gdGhpcyB2aWV3IG9mIHRoZSAiU2hhcmVkIERvY3VtZW50cyIgZG9jdW1lbnQgbGlicmFyeS4GEgAAAAE/BhMAAAAgUHJlc2VuY2UgZW5hYmxlZCBmb3IgdGhpcyBjb2x1bW4GFAAAAAlPcGVuIE1lbnUGFQAAAAItMQYWAAAAM1BhZ2VkPVRSVUUmUGFnZWRQcmV2PVRSVUUmcF9Hcm91cENvbDE9JnBfR3JvdXBDb2wyPQYXAAAAAAYYAAAALlVzZSBTSElGVCtFTlRFUiB0byBvcGVuIHRoZSBtZW51IChuZXcgd2luZG93KS4GGQAAADVQYWdlZD1UUlVFJnBfR3JvdXBDb2wxPW15SVImcF9Hcm91cENvbDI9MDIlMjBPdmVydmlldwYaAAAAHFNlbGVjdCBvciBkZXNlbGVjdCBhbGwgaXRlbXMGGwAAACtUbyBhZGQgYSBuZXcgaXRlbSwgY2xpY2sgIk5ldyIgb3IgIlVwbG9hZCIuCx4QRmlsdGVyT3BlcmF0aW9uczKNBQABAAAA/////wEAAAAAAAAABAEAAACTAlN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkRpY3Rpb25hcnlgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbTWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViUGFydFBhZ2VzLkZpbHRlck9wZXJhdGlvbiwgTWljcm9zb2Z0LlNoYXJlUG9pbnQsIFZlcnNpb249MTYuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49NzFlOWJjZTExMWU5NDI5Y11dAwAAAAdWZXJzaW9uCENvbXBhcmVyCEhhc2hTaXplAAMACJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0IAAAAAAkCAAAAAAAAAAQCAAAAkgFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5HZW5lcmljRXF1YWxpdHlDb21wYXJlcmAxW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQAAAAALHgxfdmlld0NvdW50ZXJmZGQWAmYPZBYCZg9kFgRmDxYGHgxGZWF0dXJlU2NvcGUFBFNpdGUeCExvY2F0aW9uBSFNaWNyb3NvZnQuU2hhcmVQb2ludC5TdGFuZGFyZE1lbnUeB0dyb3VwSWQFEFZpZXdTZWxlY3Rvck1lbnVkAgEPDxYCHglBY2Nlc3NLZXkFAVdkZAIFD2QWAgICD2QWBAIBD2QWAgIDD2QWAmYPZBYEAgMPZBYIAgEPFgYeE0NsaWVudE9uQ2xpY2tTY3JpcHQFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkeKENsaWVudE9uQ2xpY2tTY3JpcHRDb250YWluaW5nUHJlZml4ZWRVcmwFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkeGENsaWVudE9uQ2xpY2tOYXZpZ2F0ZVVybGRkAgUPFgIeB1Zpc2libGVoZAILDxYCHwpoZAISD2QWAmYPDxYGHhxQcmV2aW91c0F1dGhvcmluZ0l0ZW1WZXJzaW9uZR4aUHJldmlvdXNBdXRob3JpbmdJdGVtT3duZXJlHhxQcmV2aW91c0F1dGhvcmluZ0NvbnRyb2xNb2RlCymIAU1pY3Jvc29mdC5TaGFyZVBvaW50LldlYkNvbnRyb2xzLlNQQ29udHJvbE1vZGUsIE1pY3Jvc29mdC5TaGFyZVBvaW50LCBWZXJzaW9uPTE2LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTcxZTliY2UxMTFlOTQyOWMAZGQCBA8PFgIfBgUBL2RkAgMPZBYCAgEPZBYCAgEPZBYGAgEPDxYEHgRfIVNCAgIeCENzc0NsYXNzBRdtcy1wcm9tb3RlZEFjdGlvbkJ1dHRvbmRkAgMPZBYCZg8PFgQfDgICHw8FF21zLXByb21vdGVkQWN0aW9uQnV0dG9uZGQCBQ8PFgYfDwUXbXMtcHJvbW90ZWRBY3Rpb25CdXR0b24fDgICHwpoZGQCDw9kFgICAQ9kFgICAQ88KwAFAQAPFgIeFVBhcmVudExldmVsc0Rpc3BsYXllZGZkZAITD2QWAgIBD2QWBgIHD2QWAgIDDw8WAh8KaGRkAgkPZBYCAgEPFgIfCmhkAg0PDxYCHwpoZBYCAgEPZBYCZg9kFgICAw9kFgICBQ9kFgICAQ88KwAJAQAPFgQeDVBhdGhTZXBhcmF0b3IECB4NTmV2ZXJFeHBhbmRlZGdkZBgCBS1jdGwwMCRQbGFjZUhvbGRlckxlZnROYXZCYXIkVjRRdWlja0xhdW5jaE1lbnUPD2QFGkxpYnJhcmllc1xTaGFyZWQgRG9jdW1lbnRzZAUXY3RsMDAkVG9wTmF2aWdhdGlvbk1lbnUPD2QFFEhvbWVcQXBwcyAmIFByb2R1Y3RzZDbazdh6QNWgT1ZU+ZmJDIFDS06rjHs85E0HYHgTeeCU" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="06E2AF16" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN1.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN1.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN1.__EVENTVALIDATION}}" RecordedValue="/wEdAAPP+lotmyEIrDH1xYYcZbNsLmXyYwA+OfFaG5A2lz8nCLUgFLpnKOjvBAU2tXnwD0xmuX9v0xRqKMlbWztWtWznqd8sQh601nRczT968uN6vQ==" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl44$ctl04" Value="Ribbon.Read" RecordedValue="Ribbon.Read" CorrelationBinding="{{FormPostParam37.ctl00$ctl44$ctl04}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Guid="32f682dd-a1fa-475e-b830-c2788e8f9ac9" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/shellicons.eot" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx?InitialTabId=Ribbon.Read&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="f999fc2a-8dc9-4b25-9e17-86fdb372c515" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_api/search/searchcenterurl" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Accept" Value="application/json;odata=verbose" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx?InitialTabId=Ribbon.Read&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="ed31bd54-329b-4d05-93e4-5863bc563551" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx?InitialTabId=Ribbon.Read&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="d6ed7bfb-0eed-4f6f-a210-13f3d102cc3e" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="6" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx?InitialTabId=Ribbon.Read&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="ea25c15b-eb9c-4271-adf5-e0ba2a465920" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents1.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="GET" Guid="167c3381-6272-4247-bd3b-e5c3f91d709f" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/shellicons.eot" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents1.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
        <Request Method="GET" Guid="7a511165-b4ff-430c-bfa5-1d373be1e5ba" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_api/search/searchcenterurl" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Accept" Value="application/json;odata=verbose" />
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents1.aspx" />
          </Headers>
        </Request>
        <Request Method="GET" Guid="7f28cef2-062d-4972-9cbf-c34465fbf36c" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents1.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
        <Request Method="GET" Guid="1571f50a-c1f9-4478-8fd4-81c6068a8753" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="2" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents1.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
      </DependentRequests>
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents.aspx?InitialTabId=Ribbon.Read&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="8afe4e06-f20d-47a2-bf51-517c111ce0c3" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="GET" Guid="ef25e0c2-c0ec-4747-8cf8-444c387d527a" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/shellicons.eot" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
        <Request Method="GET" Guid="dc29a6fa-96bf-4dc6-b1d5-0bfcff643397" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_api/search/searchcenterurl" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Accept" Value="application/json;odata=verbose" />
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
          </Headers>
        </Request>
        <Request Method="GET" Guid="0d2362f3-2c53-4e68-9cfe-13841e22dfe5" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
        <Request Method="GET" Guid="d7701388-6076-4b31-aa04-66f3fab74f5b" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="5" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
          </Headers>
          <QueryStringParameters>
            <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
        </Request>
      </DependentRequests>
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/all%20documents1.aspx" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam44.__REQUESTDIGEST" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="11" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam43.MSOTlPn_ShowSettings" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="5" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam45.MSOSPWebPartManager_DisplayModeName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="12" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam46.MSOSPWebPartManager_ExitingDesignMode" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="13" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam47._wpSelected" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="17" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam48.MSOSPWebPartManager_OldDisplayModeName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="12" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam49.MSOSPWebPartManager_StartWebPartEditingName" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="13" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam50.MSOSPWebPartManager_EndWebPartEditing" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="13" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam51.__VIEWSTATE" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="23" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam52.__VIEWSTATEGENERATOR" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="24" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam53.__EVENTVALIDATION" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="27" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam54.ctl00$ctl44$ctl04" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="d = &quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;;_sp" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam55.ctl00$ctl44$ctl04" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="d = &quot;" />
            <RuleParameter Name="EndsWith" Value="&quot;;_sp" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
    </Request>
    <Request Method="GET" Guid="88f1a70a-831d-42b2-99fb-9a3518270374" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/filter.aspx" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="ListId" Value="{ED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B}" RecordedValue="{ED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B}" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="FieldInternalName" Value="Modified" RecordedValue="Modified" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ViewId" Value="{BFACA91F-93F2-4632-AB39-EEE92A5D06A2}" RecordedValue="{BFACA91F-93F2-4632-AB39-EEE92A5D06A2}" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="FilterOnly" Value="1" RecordedValue="1" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="Filter" Value="1" RecordedValue="1" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="33828340-f564-4bec-8569-cb5a68eb2197" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/blank.htm" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
      </Headers>
    </Request>
    <Request Method="POST" Guid="88f7d154-2712-4183-8af9-ea911e8f8681" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/inplview.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="List" Value="%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D" RecordedValue="%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="View" Value="%7BBFACA91F-93F2-4632-AB39-EEE92A5D06A2%7D" RecordedValue="%7BBFACA91F-93F2-4632-AB39-EEE92A5D06A2%7D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ViewCount" Value="0" RecordedValue="0" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsXslView" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsCSR" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ListViewPageUrl" Value="https%3A%2F%2Fsp.cordissolutions.com%2FApps00%2FShared%2520Documents%2FForms%2Fdetail%2520list%2520wo%2520folders%252001.aspx" RecordedValue="https%3A%2F%2Fsp.cordissolutions.com%2FApps00%2FShared%2520Documents%2FForms%2Fdetail%2520list%2520wo%2520folders%252001.aspx" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="SortField" Value="Modified" RecordedValue="Modified" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="SortDir" Value="Desc" RecordedValue="Desc" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody />
    </Request>
    <Request Method="GET" Guid="db410314-7772-4a0d-88cc-5857cb38e6a4" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" ThinkTime="4" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx#InplviewHashbfaca91f-93f2-4632-ab39-eee92a5d06a2=SortField%3DModified-SortDir%3DDesc" ReportingName="" IgnoreHttpStatusCode="False" />
    <Request Method="POST" Guid="a23a7e8a-746f-405d-99b1-8142f9627ffd" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/inplview.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
      </Headers>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam38.MSOTlPn_View" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ing=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; cel" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam39.MSOTlPn_Button" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="dir=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; onm" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam40._maintainWorkspaceScrollPosition" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ing=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; cel" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam41.__SCROLLPOSITIONX" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ing=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; cel" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam42.__SCROLLPOSITIONY" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ing=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; cel" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam887.SortField" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?SortField=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam888.SortDir" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;SortDir=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="List" Value="%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D" RecordedValue="%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="View" Value="%7BBFACA91F-93F2-4632-AB39-EEE92A5D06A2%7D" RecordedValue="%7BBFACA91F-93F2-4632-AB39-EEE92A5D06A2%7D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ViewCount" Value="0" RecordedValue="0" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsXslView" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsCSR" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ListViewPageUrl" Value="https%3A%2F%2Fsp.cordissolutions.com%2FApps00%2FShared%2520Documents%2FForms%2Fdetail%2520list%2520wo%2520folders%252001.aspx" RecordedValue="https%3A%2F%2Fsp.cordissolutions.com%2FApps00%2FShared%2520Documents%2FForms%2Fdetail%2520list%2520wo%2520folders%252001.aspx" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsRibbon" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="Cmd" Value="EcbView" RecordedValue="EcbView" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="SortField" Value="Modified" RecordedValue="Modified" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="SortDir" Value="Desc" RecordedValue="Desc" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody />
    </Request>
    <Request Method="GET" Guid="07b88060-76b0-4013-87b2-6a8a4b205878" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/commandui.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="X-Requested-With" Value="XMLHttpRequest" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="ver" Value="823153556" RecordedValue="823153556" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="lcid" Value="1033" RecordedValue="1033" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="qt" Value="commandhandlers" RecordedValue="commandhandlers" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="POST" Guid="3e97368d-9728-47fb-8792-9c37dc099a2f" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/commandui.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="X-Requested-With" Value="XMLHttpRequest" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="ver" Value="823153556" RecordedValue="823153556" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="id" Value="Ribbon.Read" RecordedValue="Ribbon.Read" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="lcid" Value="1033" RecordedValue="1033" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="qt" Value="ribbonvisibletabdeep" RecordedValue="ribbonvisibletabdeep" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody />
    </Request>
    <Request Method="GET" Guid="1b20f7eb-8ab1-4850-a529-d06134b8c1b5" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/tenantappinfo.ashx" ThinkTime="2" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="etag" Value="0" RecordedValue="0" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="lcid" Value="1033" RecordedValue="1033" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="POST" Guid="7257ddb6-a30a-4d2e-ac74-c88167b947c6" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_vti_bin/client.svc/ProcessQuery" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="X-Requested-With" Value="XMLHttpRequest" />
        <Header Name="X-RequestDigest" Value="0x678977E32F796A5FC8C8DF2C8AF0221BB4000D27226AE3D7D36572774799CCF1425A0E9623D1B089F668426B41370F4B57AA0ECBE51A207A5B86D7812C34869F,13 Jun 2018 11:38:39 -0000" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
      </Headers>
      <StringHttpBody ContentType="text/xml" InsertByteOrderMark="False">PABSAGUAcQB1AGUAcwB0ACAAeABtAGwAbgBzAD0AIgBoAHQAdABwADoALwAvAHMAYwBoAGUAbQBhAHMALgBtAGkAYwByAG8AcwBvAGYAdAAuAGMAbwBtAC8AcwBoAGEAcgBlAHAAbwBpAG4AdAAvAGMAbABpAGUAbgB0AHEAdQBlAHIAeQAvADIAMAAwADkAIgAgAFMAYwBoAGUAbQBhAFYAZQByAHMAaQBvAG4APQAiADEANQAuADAALgAwAC4AMAAiACAATABpAGIAcgBhAHIAeQBWAGUAcgBzAGkAbwBuAD0AIgAxADYALgAwAC4AMAAuADAAIgAgAEEAcABwAGwAaQBjAGEAdABpAG8AbgBOAGEAbQBlAD0AIgBKAGEAdgBhAHMAYwByAGkAcAB0ACAATABpAGIAcgBhAHIAeQAiAD4APABBAGMAdABpAG8AbgBzAD4APABFAHgAYwBlAHAAdABpAG8AbgBIAGEAbgBkAGwAaQBuAGcAUwBjAG8AcABlAFMAaQBtAHAAbABlACAASQBkAD0AIgAwACIAPgA8AE8AYgBqAGUAYwB0AFAAYQB0AGgAIABJAGQAPQAiADMAIgAgAE8AYgBqAGUAYwB0AFAAYQB0AGgASQBkAD0AIgAyACIAIAAvAD4APABPAGIAagBlAGMAdABQAGEAdABoACAASQBkAD0AIgA1ACIAIABPAGIAagBlAGMAdABQAGEAdABoAEkAZAA9ACIANAAiACAALwA+ADwATwBiAGoAZQBjAHQAUABhAHQAaAAgAEkAZAA9ACIANwAiACAATwBiAGoAZQBjAHQAUABhAHQAaABJAGQAPQAiADYAIgAgAC8APgA8AE8AYgBqAGUAYwB0AFAAYQB0AGgAIABJAGQAPQAiADkAIgAgAE8AYgBqAGUAYwB0AFAAYQB0AGgASQBkAD0AIgA4ACIAIAAvAD4APABPAGIAagBlAGMAdABQAGEAdABoACAASQBkAD0AIgAxADEAIgAgAE8AYgBqAGUAYwB0AFAAYQB0AGgASQBkAD0AIgAxADAAIgAgAC8APgA8AFEAdQBlAHIAeQAgAEkAZAA9ACIAMQAyACIAIABPAGIAagBlAGMAdABQAGEAdABoAEkAZAA9ACIAMQAwACIAPgA8AFEAdQBlAHIAeQAgAFMAZQBsAGUAYwB0AEEAbABsAFAAcgBvAHAAZQByAHQAaQBlAHMAPQAiAGYAYQBsAHMAZQAiAD4APABQAHIAbwBwAGUAcgB0AGkAZQBzAD4APABQAHIAbwBwAGUAcgB0AHkAIABOAGEAbQBlAD0AIgBGAGkAbABlAEwAZQBhAGYAUgBlAGYAIgAgAFMAYwBhAGwAYQByAFAAcgBvAHAAZQByAHQAeQA9ACIAdAByAHUAZQAiACAALwA+ADwALwBQAHIAbwBwAGUAcgB0AGkAZQBzAD4APAAvAFEAdQBlAHIAeQA+ADwALwBRAHUAZQByAHkAPgA8AE0AZQB0AGgAbwBkACAATgBhAG0AZQA9ACIAUgBlAGMAeQBjAGwAZQAiACAASQBkAD0AIgAxADMAIgAgAE8AYgBqAGUAYwB0AFAAYQB0AGgASQBkAD0AIgAxADAAIgAgAC8APgA8AC8ARQB4AGMAZQBwAHQAaQBvAG4ASABhAG4AZABsAGkAbgBnAFMAYwBvAHAAZQBTAGkAbQBwAGwAZQA+ADwALwBBAGMAdABpAG8AbgBzAD4APABPAGIAagBlAGMAdABQAGEAdABoAHMAPgA8AFMAdABhAHQAaQBjAFAAcgBvAHAAZQByAHQAeQAgAEkAZAA9ACIAMgAiACAAVAB5AHAAZQBJAGQAPQAiAHsAMwA3ADQANwBhAGQAYwBkAC0AYQAzAGMAMwAtADQAMQBiADkALQBiAGYAYQBiAC0ANABhADYANABkAGQAMgBmADEAZQAwAGEAfQAiACAATgBhAG0AZQA9ACIAQwB1AHIAcgBlAG4AdAAiACAALwA+ADwAUAByAG8AcABlAHIAdAB5ACAASQBkAD0AIgA0ACIAIABQAGEAcgBlAG4AdABJAGQAPQAiADIAIgAgAE4AYQBtAGUAPQAiAFcAZQBiACIAIAAvAD4APABQAHIAbwBwAGUAcgB0AHkAIABJAGQAPQAiADYAIgAgAFAAYQByAGUAbgB0AEkAZAA9ACIANAAiACAATgBhAG0AZQA9ACIATABpAHMAdABzACIAIAAvAD4APABNAGUAdABoAG8AZAAgAEkAZAA9ACIAOAAiACAAUABhAHIAZQBuAHQASQBkAD0AIgA2ACIAIABOAGEAbQBlAD0AIgBHAGUAdABCAHkASQBkACIAPgA8AFAAYQByAGEAbQBlAHQAZQByAHMAPgA8AFAAYQByAGEAbQBlAHQAZQByACAAVAB5AHAAZQA9ACIAUwB0AHIAaQBuAGcAIgA+AHsARQBEADIAOAAxADkAMgBBAC0AMwBCADYANwAtADQAMwBEADgALQBCAEEAOABBAC0ARABDAEMAQQAzAEEAQwBFADcARAAwAEIAfQA8AC8AUABhAHIAYQBtAGUAdABlAHIAPgA8AC8AUABhAHIAYQBtAGUAdABlAHIAcwA+ADwALwBNAGUAdABoAG8AZAA+ADwATQBlAHQAaABvAGQAIABJAGQAPQAiADEAMAAiACAAUABhAHIAZQBuAHQASQBkAD0AIgA4ACIAIABOAGEAbQBlAD0AIgBHAGUAdABJAHQAZQBtAEIAeQBJAGQAIgA+ADwAUABhAHIAYQBtAGUAdABlAHIAcwA+ADwAUABhAHIAYQBtAGUAdABlAHIAIABUAHkAcABlAD0AIgBOAHUAbQBiAGUAcgAiAD4AMwA0ADUANQA8AC8AUABhAHIAYQBtAGUAdABlAHIAPgA8AC8AUABhAHIAYQBtAGUAdABlAHIAcwA+ADwALwBNAGUAdABoAG8AZAA+ADwALwBPAGIAagBlAGMAdABQAGEAdABoAHMAPgA8AC8AUgBlAHEAdQBlAHMAdAA+AA==</StringHttpBody>
    </Request>
    <Request Method="GET" Guid="d84913c7-806c-4a6e-9cba-1c15526bc444" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx?InitialTabId=Ribbon%2ERead&amp;VisibilityContext=WSSTabPersistence#InplviewHashbfaca91f-93f2-4632-ab39-eee92a5d06a2=SortField%3DModified-SortDir%3DDesc" ReportingName="" IgnoreHttpStatusCode="False">
      <QueryStringParameters>
        <QueryStringParameter Name="InitialTabId" Value="Ribbon%2ERead" RecordedValue="Ribbon%2ERead" CorrelationBinding="{{QueryStringParam777.InitialTabId}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="VisibilityContext" Value="WSSTabPersistence" RecordedValue="WSSTabPersistence" CorrelationBinding="{{QueryStringParam778.VisibilityContext}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="_wpcmWpid" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="wpcmVal" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_PostbackSource" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_SelectedWpId" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_View" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam38.MSOTlPn_View}}" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_ShowSettings" Value="False" RecordedValue="False" CorrelationBinding="{{FormPostParam43.MSOTlPn_ShowSettings}}" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_SelectedLibrary" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_FilterString" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_Button" Value="none" RecordedValue="none" CorrelationBinding="{{FormPostParam39.MSOTlPn_Button}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__REQUESTDIGEST" Value="{{FormPostParam44.__REQUESTDIGEST}}" RecordedValue="0x678977E32F796A5FC8C8DF2C8AF0221BB4000D27226AE3D7D36572774799CCF1425A0E9623D1B089F668426B41370F4B57AA0ECBE51A207A5B86D7812C34869F,13 Jun 2018 11:38:39 -0000" CorrelationBinding="{{FormPostParam44.__REQUESTDIGEST}}" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_DisplayModeName" Value="Browse" RecordedValue="Browse" CorrelationBinding="{{FormPostParam45.MSOSPWebPartManager_DisplayModeName}}" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_ExitingDesignMode" Value="false" RecordedValue="false" CorrelationBinding="{{FormPostParam46.MSOSPWebPartManager_ExitingDesignMode}}" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_Shared" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_LayoutChanges" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_InDesignMode" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wpSelected" Value="MSOZoneCell_WebPartWPQ2" RecordedValue="MSOZoneCell_WebPartWPQ2" CorrelationBinding="{{FormPostParam47._wpSelected}}" UrlEncode="True" />
        <FormPostParameter Name="_wzSelected" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_OldDisplayModeName" Value="Browse" RecordedValue="Browse" CorrelationBinding="{{FormPostParam48.MSOSPWebPartManager_OldDisplayModeName}}" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_StartWebPartEditingName" Value="false" RecordedValue="false" CorrelationBinding="{{FormPostParam49.MSOSPWebPartManager_StartWebPartEditingName}}" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_EndWebPartEditing" Value="false" RecordedValue="false" CorrelationBinding="{{FormPostParam50.MSOSPWebPartManager_EndWebPartEditing}}" UrlEncode="True" />
        <FormPostParameter Name="_maintainWorkspaceScrollPosition" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam40._maintainWorkspaceScrollPosition}}" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="/wEPDwUJMjI4MzQ1ODc1D2QWAmYPZBYCAgEPZBYEAgEPZBYCAhkPZBYCAgMPZBYCAgEPZBYCZg8UKwAGZAUuaHR0cHM6Ly9zcC5leGNlbHN1cHBvcnQub3JnOjQ0My9teS9QZXJzb24uYXNweAUjaHR0cHM6Ly9zcC5leGNlbHN1cHBvcnQub3JnOjQ0My9teS8FHy9BcHBzMDAvX2xheW91dHMvMTUvbXlzdWJzLmFzcHgFsQEvQXBwczAwL19sYXlvdXRzLzE1L3JlZ2lvbmFsc2V0bmcuYXNweD90eXBlPXVzZXImc291cmNlPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkZTaGFyZWQlMjBEb2N1bWVudHMlMkZGb3JtcyUyRmRldGFpbCUyMGxpc3QlMjB3byUyMGZvbGRlcnMlMjAwMSUyRWFzcHgFhQJodHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215L19sYXlvdXRzLzE1L0VkaXRQcm9maWxlLmFzcHg/VXNlclNldHRpbmdzUHJvdmlkZXI9MjM0YmYwZWQlMkQ3MGRiJTJENDE1OCUyRGEzMzIlMkQ0ZGZkNjgzYjQxNDgmUmV0dXJuVXJsPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkZTaGFyZWQlMjBEb2N1bWVudHMlMkZGb3JtcyUyRmRldGFpbCUyMGxpc3QlMjB3byUyMGZvbGRlcnMlMjAwMSUyRWFzcHhkAgcPZBYIAgEPZBYCAgEPZBYCBSZnX2JmYWNhOTFmXzkzZjJfNDYzMl9hYjM5X2VlZTkyYTVkMDZhMhAPFgYeC1BhcmFtVmFsdWVzMvQIAAEAAAD/////AQAAAAAAAAAMAgAAAFhNaWNyb3NvZnQuU2hhcmVQb2ludCwgVmVyc2lvbj0xNi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03MWU5YmNlMTExZTk0MjljBQEAAAA9TWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViUGFydFBhZ2VzLlBhcmFtZXRlck5hbWVWYWx1ZUhhc2h0YWJsZQEAAAAFX2NvbGwDHFN5c3RlbS5Db2xsZWN0aW9ucy5IYXNodGFibGUCAAAACQMAAAAEAwAAABxTeXN0ZW0uQ29sbGVjdGlvbnMuSGFzaHRhYmxlBwAAAApMb2FkRmFjdG9yB1ZlcnNpb24IQ29tcGFyZXIQSGFzaENvZGVQcm92aWRlcghIYXNoU2l6ZQRLZXlzBlZhbHVlcwAAAwMABQULCBxTeXN0ZW0uQ29sbGVjdGlvbnMuSUNvbXBhcmVyJFN5c3RlbS5Db2xsZWN0aW9ucy5JSGFzaENvZGVQcm92aWRlcgjsUTg/DQAAAAoKEQAAAAkEAAAACQUAAAAQBAAAAAsAAAAGBgAAAA9Ob0Fubm91bmNlbWVudHMGBwAAAApGaWx0ZXJMaW5rBggAAAANaWRQcmVzRW5hYmxlZAYJAAAACW9wZW5fbWVudQYKAAAAClNlbGVjdGVkSUQGCwAAABBkdnRfcHJldnBhZ2VkYXRhBgwAAAARZHZ0X3N0YXJ0cG9zaXRpb24GDQAAABVPcGVuTWVudUtleUFjY2Vzc2libGUGDgAAABBkdnRfbmV4dHBhZ2VkYXRhBg8AAAATc2VsZWN0X2Rlc2VsZWN0X2FsbAYQAAAAFE5vQW5ub3VuY2VtZW50c0hvd1RvEAUAAAALAAAABhEAAABTVGhlcmUgYXJlIG5vIGl0ZW1zIHRvIHNob3cgaW4gdGhpcyB2aWV3IG9mIHRoZSAiU2hhcmVkIERvY3VtZW50cyIgZG9jdW1lbnQgbGlicmFyeS4GEgAAAAE/BhMAAAAgUHJlc2VuY2UgZW5hYmxlZCBmb3IgdGhpcyBjb2x1bW4GFAAAAAlPcGVuIE1lbnUGFQAAAAItMQYWAAAAUVBhZ2VkPVRSVUUmUGFnZWRQcmV2PVRSVUUmcF9BcHBsaWNhdGlvbj0mcF9BcHBzX3gwMDIwX0NvbnRlbnRfeDAwMjBfVHlwZT0mcF9JRD0yMQYXAAAAAAYYAAAALlVzZSBTSElGVCtFTlRFUiB0byBvcGVuIHRoZSBtZW51IChuZXcgd2luZG93KS4GGQAAAENQYWdlZD1UUlVFJnBfQXBwbGljYXRpb249JnBfQXBwc194MDAyMF9Db250ZW50X3gwMDIwX1R5cGU9JnBfSUQ9NDY2BhoAAAAcU2VsZWN0IG9yIGRlc2VsZWN0IGFsbCBpdGVtcwYbAAAAK1RvIGFkZCBhIG5ldyBpdGVtLCBjbGljayAiTmV3IiBvciAiVXBsb2FkIi4LHhBGaWx0ZXJPcGVyYXRpb25zMo0FAAEAAAD/////AQAAAAAAAAAEAQAAAJMCU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtNaWNyb3NvZnQuU2hhcmVQb2ludC5XZWJQYXJ0UGFnZXMuRmlsdGVyT3BlcmF0aW9uLCBNaWNyb3NvZnQuU2hhcmVQb2ludCwgVmVyc2lvbj0xNi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03MWU5YmNlMTExZTk0MjljXV0DAAAAB1ZlcnNpb24IQ29tcGFyZXIISGFzaFNpemUAAwAIkgFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5HZW5lcmljRXF1YWxpdHlDb21wYXJlcmAxW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQgAAAAACQIAAAAAAAAABAIAAACSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAAAAAAseDF92aWV3Q291bnRlcmZkZBYCAgEPZBYCZg9kFgRmDxYGHgxGZWF0dXJlU2NvcGUFBFNpdGUeCExvY2F0aW9uBSFNaWNyb3NvZnQuU2hhcmVQb2ludC5TdGFuZGFyZE1lbnUeB0dyb3VwSWQFEFZpZXdTZWxlY3Rvck1lbnVkAgEPDxYCHglBY2Nlc3NLZXkFAVdkZAIFD2QWAgICD2QWBAIBD2QWAgIDD2QWAmYPZBYEAgMPZBYIAgEPFgYeE0NsaWVudE9uQ2xpY2tTY3JpcHQFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkeKENsaWVudE9uQ2xpY2tTY3JpcHRDb250YWluaW5nUHJlZml4ZWRVcmwFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkeGENsaWVudE9uQ2xpY2tOYXZpZ2F0ZVVybGRkAgUPFgIeB1Zpc2libGVoZAILDxYCHwpoZAISD2QWAmYPDxYGHhxQcmV2aW91c0F1dGhvcmluZ0l0ZW1WZXJzaW9uZR4aUHJldmlvdXNBdXRob3JpbmdJdGVtT3duZXJlHhxQcmV2aW91c0F1dGhvcmluZ0NvbnRyb2xNb2RlCymIAU1pY3Jvc29mdC5TaGFyZVBvaW50LldlYkNvbnRyb2xzLlNQQ29udHJvbE1vZGUsIE1pY3Jvc29mdC5TaGFyZVBvaW50LCBWZXJzaW9uPTE2LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTcxZTliY2UxMTFlOTQyOWMAZGQCBA8PFgIfBgUBL2RkAgMPZBYCAgEPZBYCAgEPZBYGAgEPDxYEHgRfIVNCAgIeCENzc0NsYXNzBRdtcy1wcm9tb3RlZEFjdGlvbkJ1dHRvbmRkAgMPZBYCZg8PFgQfDgICHw8FF21zLXByb21vdGVkQWN0aW9uQnV0dG9uZGQCBQ8PFgYfDwUXbXMtcHJvbW90ZWRBY3Rpb25CdXR0b24fDgICHwpoZGQCDw9kFgICAQ9kFgICAQ88KwAFAQAPFgIeFVBhcmVudExldmVsc0Rpc3BsYXllZGZkZAITD2QWAgIBD2QWBgIHD2QWAgIDDw8WAh8KaGRkAgkPZBYCAgEPFgIfCmhkAg0PDxYCHwpoZBYCAgEPZBYCZg9kFgICAw9kFgICBQ9kFgICAQ88KwAJAQAPFgQeDVBhdGhTZXBhcmF0b3IECB4NTmV2ZXJFeHBhbmRlZGdkZBgBBRdjdGwwMCRUb3BOYXZpZ2F0aW9uTWVudQ8PZAUUSG9tZVxBcHBzICYgUHJvZHVjdHNk6/NWePR/9haSnDnh5xBsQmpSqLbeQbAOX8D2AJFRRPw=" RecordedValue="/wEPDwUJMjI4MzQ1ODc1D2QWAmYPZBYCAgEPZBYEAgEPZBYCAhkPZBYCAgMPZBYCAgEPZBYCZg8UKwAGZAUuaHR0cHM6Ly9zcC5leGNlbHN1cHBvcnQub3JnOjQ0My9teS9QZXJzb24uYXNweAUjaHR0cHM6Ly9zcC5leGNlbHN1cHBvcnQub3JnOjQ0My9teS8FHy9BcHBzMDAvX2xheW91dHMvMTUvbXlzdWJzLmFzcHgFsQEvQXBwczAwL19sYXlvdXRzLzE1L3JlZ2lvbmFsc2V0bmcuYXNweD90eXBlPXVzZXImc291cmNlPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkZTaGFyZWQlMjBEb2N1bWVudHMlMkZGb3JtcyUyRmRldGFpbCUyMGxpc3QlMjB3byUyMGZvbGRlcnMlMjAwMSUyRWFzcHgFhQJodHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215L19sYXlvdXRzLzE1L0VkaXRQcm9maWxlLmFzcHg/VXNlclNldHRpbmdzUHJvdmlkZXI9MjM0YmYwZWQlMkQ3MGRiJTJENDE1OCUyRGEzMzIlMkQ0ZGZkNjgzYjQxNDgmUmV0dXJuVXJsPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkZTaGFyZWQlMjBEb2N1bWVudHMlMkZGb3JtcyUyRmRldGFpbCUyMGxpc3QlMjB3byUyMGZvbGRlcnMlMjAwMSUyRWFzcHhkAgcPZBYIAgEPZBYCAgEPZBYCBSZnX2JmYWNhOTFmXzkzZjJfNDYzMl9hYjM5X2VlZTkyYTVkMDZhMhAPFgYeC1BhcmFtVmFsdWVzMvQIAAEAAAD/////AQAAAAAAAAAMAgAAAFhNaWNyb3NvZnQuU2hhcmVQb2ludCwgVmVyc2lvbj0xNi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03MWU5YmNlMTExZTk0MjljBQEAAAA9TWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViUGFydFBhZ2VzLlBhcmFtZXRlck5hbWVWYWx1ZUhhc2h0YWJsZQEAAAAFX2NvbGwDHFN5c3RlbS5Db2xsZWN0aW9ucy5IYXNodGFibGUCAAAACQMAAAAEAwAAABxTeXN0ZW0uQ29sbGVjdGlvbnMuSGFzaHRhYmxlBwAAAApMb2FkRmFjdG9yB1ZlcnNpb24IQ29tcGFyZXIQSGFzaENvZGVQcm92aWRlcghIYXNoU2l6ZQRLZXlzBlZhbHVlcwAAAwMABQULCBxTeXN0ZW0uQ29sbGVjdGlvbnMuSUNvbXBhcmVyJFN5c3RlbS5Db2xsZWN0aW9ucy5JSGFzaENvZGVQcm92aWRlcgjsUTg/DQAAAAoKEQAAAAkEAAAACQUAAAAQBAAAAAsAAAAGBgAAAA9Ob0Fubm91bmNlbWVudHMGBwAAAApGaWx0ZXJMaW5rBggAAAANaWRQcmVzRW5hYmxlZAYJAAAACW9wZW5fbWVudQYKAAAAClNlbGVjdGVkSUQGCwAAABBkdnRfcHJldnBhZ2VkYXRhBgwAAAARZHZ0X3N0YXJ0cG9zaXRpb24GDQAAABVPcGVuTWVudUtleUFjY2Vzc2libGUGDgAAABBkdnRfbmV4dHBhZ2VkYXRhBg8AAAATc2VsZWN0X2Rlc2VsZWN0X2FsbAYQAAAAFE5vQW5ub3VuY2VtZW50c0hvd1RvEAUAAAALAAAABhEAAABTVGhlcmUgYXJlIG5vIGl0ZW1zIHRvIHNob3cgaW4gdGhpcyB2aWV3IG9mIHRoZSAiU2hhcmVkIERvY3VtZW50cyIgZG9jdW1lbnQgbGlicmFyeS4GEgAAAAE/BhMAAAAgUHJlc2VuY2UgZW5hYmxlZCBmb3IgdGhpcyBjb2x1bW4GFAAAAAlPcGVuIE1lbnUGFQAAAAItMQYWAAAAUVBhZ2VkPVRSVUUmUGFnZWRQcmV2PVRSVUUmcF9BcHBsaWNhdGlvbj0mcF9BcHBzX3gwMDIwX0NvbnRlbnRfeDAwMjBfVHlwZT0mcF9JRD0yMQYXAAAAAAYYAAAALlVzZSBTSElGVCtFTlRFUiB0byBvcGVuIHRoZSBtZW51IChuZXcgd2luZG93KS4GGQAAAENQYWdlZD1UUlVFJnBfQXBwbGljYXRpb249JnBfQXBwc194MDAyMF9Db250ZW50X3gwMDIwX1R5cGU9JnBfSUQ9NDY2BhoAAAAcU2VsZWN0IG9yIGRlc2VsZWN0IGFsbCBpdGVtcwYbAAAAK1RvIGFkZCBhIG5ldyBpdGVtLCBjbGljayAiTmV3IiBvciAiVXBsb2FkIi4LHhBGaWx0ZXJPcGVyYXRpb25zMo0FAAEAAAD/////AQAAAAAAAAAEAQAAAJMCU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtNaWNyb3NvZnQuU2hhcmVQb2ludC5XZWJQYXJ0UGFnZXMuRmlsdGVyT3BlcmF0aW9uLCBNaWNyb3NvZnQuU2hhcmVQb2ludCwgVmVyc2lvbj0xNi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03MWU5YmNlMTExZTk0MjljXV0DAAAAB1ZlcnNpb24IQ29tcGFyZXIISGFzaFNpemUAAwAIkgFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5HZW5lcmljRXF1YWxpdHlDb21wYXJlcmAxW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQgAAAAACQIAAAAAAAAABAIAAACSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAAAAAAseDF92aWV3Q291bnRlcmZkZBYCAgEPZBYCZg9kFgRmDxYGHgxGZWF0dXJlU2NvcGUFBFNpdGUeCExvY2F0aW9uBSFNaWNyb3NvZnQuU2hhcmVQb2ludC5TdGFuZGFyZE1lbnUeB0dyb3VwSWQFEFZpZXdTZWxlY3Rvck1lbnVkAgEPDxYCHglBY2Nlc3NLZXkFAVdkZAIFD2QWAgICD2QWBAIBD2QWAgIDD2QWAmYPZBYEAgMPZBYIAgEPFgYeE0NsaWVudE9uQ2xpY2tTY3JpcHQFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkeKENsaWVudE9uQ2xpY2tTY3JpcHRDb250YWluaW5nUHJlZml4ZWRVcmwFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkeGENsaWVudE9uQ2xpY2tOYXZpZ2F0ZVVybGRkAgUPFgIeB1Zpc2libGVoZAILDxYCHwpoZAISD2QWAmYPDxYGHhxQcmV2aW91c0F1dGhvcmluZ0l0ZW1WZXJzaW9uZR4aUHJldmlvdXNBdXRob3JpbmdJdGVtT3duZXJlHhxQcmV2aW91c0F1dGhvcmluZ0NvbnRyb2xNb2RlCymIAU1pY3Jvc29mdC5TaGFyZVBvaW50LldlYkNvbnRyb2xzLlNQQ29udHJvbE1vZGUsIE1pY3Jvc29mdC5TaGFyZVBvaW50LCBWZXJzaW9uPTE2LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTcxZTliY2UxMTFlOTQyOWMAZGQCBA8PFgIfBgUBL2RkAgMPZBYCAgEPZBYCAgEPZBYGAgEPDxYEHgRfIVNCAgIeCENzc0NsYXNzBRdtcy1wcm9tb3RlZEFjdGlvbkJ1dHRvbmRkAgMPZBYCZg8PFgQfDgICHw8FF21zLXByb21vdGVkQWN0aW9uQnV0dG9uZGQCBQ8PFgYfDwUXbXMtcHJvbW90ZWRBY3Rpb25CdXR0b24fDgICHwpoZGQCDw9kFgICAQ9kFgICAQ88KwAFAQAPFgIeFVBhcmVudExldmVsc0Rpc3BsYXllZGZkZAITD2QWAgIBD2QWBgIHD2QWAgIDDw8WAh8KaGRkAgkPZBYCAgEPFgIfCmhkAg0PDxYCHwpoZBYCAgEPZBYCZg9kFgICAw9kFgICBQ9kFgICAQ88KwAJAQAPFgQeDVBhdGhTZXBhcmF0b3IECB4NTmV2ZXJFeHBhbmRlZGdkZBgBBRdjdGwwMCRUb3BOYXZpZ2F0aW9uTWVudQ8PZAUUSG9tZVxBcHBzICYgUHJvZHVjdHNk6/NWePR/9haSnDnh5xBsQmpSqLbeQbAOX8D2AJFRRPw=" CorrelationBinding="{{FormPostParam51.__VIEWSTATE}}" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="06E2AF16" RecordedValue="06E2AF16" CorrelationBinding="{{FormPostParam52.__VIEWSTATEGENERATOR}}" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam41.__SCROLLPOSITIONX}}" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="0" RecordedValue="0" CorrelationBinding="{{FormPostParam42.__SCROLLPOSITIONY}}" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="/wEdAAOnDuLZcyTScHCXtFvQoGjPLmXyYwA+OfFaG5A2lz8nCLUgFLpnKOjvBAU2tXnwD0zriyTNO723xWrpFLN4YR2TRgB4CjAi0s0j6AzkjzJTfQ==" RecordedValue="/wEdAAOnDuLZcyTScHCXtFvQoGjPLmXyYwA+OfFaG5A2lz8nCLUgFLpnKOjvBAU2tXnwD0zriyTNO723xWrpFLN4YR2TRgB4CjAi0s0j6AzkjzJTfQ==" CorrelationBinding="{{FormPostParam53.__EVENTVALIDATION}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl44$ctl04" Value="Ribbon.Read" RecordedValue="Ribbon.Read" CorrelationBinding="{{FormPostParam54.ctl00$ctl44$ctl04}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="ad12c5d8-82de-45bb-8248-d962600701bb" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="InitialTabId" Value="Ribbon%2ERead" RecordedValue="Ribbon%2ERead" CorrelationBinding="{{QueryStringParam793.InitialTabId}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="VisibilityContext" Value="WSSTabPersistence" RecordedValue="WSSTabPersistence" CorrelationBinding="{{QueryStringParam794.VisibilityContext}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="_wpcmWpid" Value="{{$HIDDEN1._wpcmWpid}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="wpcmVal" Value="{{$HIDDEN1.wpcmVal}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_PostbackSource" Value="{{$HIDDEN1.MSOWebPartPage_PostbackSource}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_SelectedWpId" Value="{{$HIDDEN1.MSOTlPn_SelectedWpId}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_View" Value="{{$HIDDEN1.MSOTlPn_View}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_ShowSettings" Value="{{$HIDDEN1.MSOTlPn_ShowSettings}}" RecordedValue="False" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_SelectedLibrary" Value="{{$HIDDEN1.MSOGallery_SelectedLibrary}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOGallery_FilterString" Value="{{$HIDDEN1.MSOGallery_FilterString}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOTlPn_Button" Value="{{$HIDDEN1.MSOTlPn_Button}}" RecordedValue="none" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__REQUESTDIGEST" Value="{{$HIDDEN1.__REQUESTDIGEST}}" RecordedValue="0x678977E32F796A5FC8C8DF2C8AF0221BB4000D27226AE3D7D36572774799CCF1425A0E9623D1B089F668426B41370F4B57AA0ECBE51A207A5B86D7812C34869F,13 Jun 2018 11:38:39 -0000" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_DisplayModeName" Value="{{$HIDDEN1.MSOSPWebPartManager_DisplayModeName}}" RecordedValue="Browse" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_ExitingDesignMode" Value="{{$HIDDEN1.MSOSPWebPartManager_ExitingDesignMode}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOWebPartPage_Shared" Value="{{$HIDDEN1.MSOWebPartPage_Shared}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_LayoutChanges" Value="{{$HIDDEN1.MSOLayout_LayoutChanges}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOLayout_InDesignMode" Value="{{$HIDDEN1.MSOLayout_InDesignMode}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wpSelected" Value="{{$HIDDEN1._wpSelected}}" RecordedValue="MSOZoneCell_WebPartWPQ2" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_wzSelected" Value="{{$HIDDEN1._wzSelected}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_OldDisplayModeName" Value="{{$HIDDEN1.MSOSPWebPartManager_OldDisplayModeName}}" RecordedValue="Browse" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_StartWebPartEditingName" Value="{{$HIDDEN1.MSOSPWebPartManager_StartWebPartEditingName}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="MSOSPWebPartManager_EndWebPartEditing" Value="{{$HIDDEN1.MSOSPWebPartManager_EndWebPartEditing}}" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="_maintainWorkspaceScrollPosition" Value="{{$HIDDEN1._maintainWorkspaceScrollPosition}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="/wEPDwUJMjI4MzQ1ODc1D2QWAmYPZBYCAgEPZBYEAgEPZBYCAhkPZBYCAgMPZBYCAgEPZBYCZg8UKwAGZAUuaHR0cHM6Ly9zcC5leGNlbHN1cHBvcnQub3JnOjQ0My9teS9QZXJzb24uYXNweAUjaHR0cHM6Ly9zcC5leGNlbHN1cHBvcnQub3JnOjQ0My9teS8FHy9BcHBzMDAvX2xheW91dHMvMTUvbXlzdWJzLmFzcHgFsQEvQXBwczAwL19sYXlvdXRzLzE1L3JlZ2lvbmFsc2V0bmcuYXNweD90eXBlPXVzZXImc291cmNlPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkZTaGFyZWQlMjBEb2N1bWVudHMlMkZGb3JtcyUyRmRldGFpbCUyMGxpc3QlMjB3byUyMGZvbGRlcnMlMjAwMSUyRWFzcHgFhQJodHRwczovL3NwLmV4Y2Vsc3VwcG9ydC5vcmc6NDQzL215L19sYXlvdXRzLzE1L0VkaXRQcm9maWxlLmFzcHg/VXNlclNldHRpbmdzUHJvdmlkZXI9MjM0YmYwZWQlMkQ3MGRiJTJENDE1OCUyRGEzMzIlMkQ0ZGZkNjgzYjQxNDgmUmV0dXJuVXJsPWh0dHBzJTNBJTJGJTJGc3AlMkVjb3JkaXNzb2x1dGlvbnMlMkVjb20lMkZBcHBzMDAlMkZTaGFyZWQlMjBEb2N1bWVudHMlMkZGb3JtcyUyRmRldGFpbCUyMGxpc3QlMjB3byUyMGZvbGRlcnMlMjAwMSUyRWFzcHhkAgcPZBYIAgEPZBYCAgEPZBYCBSZnX2JmYWNhOTFmXzkzZjJfNDYzMl9hYjM5X2VlZTkyYTVkMDZhMhAPFgYeC1BhcmFtVmFsdWVzMvQIAAEAAAD/////AQAAAAAAAAAMAgAAAFhNaWNyb3NvZnQuU2hhcmVQb2ludCwgVmVyc2lvbj0xNi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03MWU5YmNlMTExZTk0MjljBQEAAAA9TWljcm9zb2Z0LlNoYXJlUG9pbnQuV2ViUGFydFBhZ2VzLlBhcmFtZXRlck5hbWVWYWx1ZUhhc2h0YWJsZQEAAAAFX2NvbGwDHFN5c3RlbS5Db2xsZWN0aW9ucy5IYXNodGFibGUCAAAACQMAAAAEAwAAABxTeXN0ZW0uQ29sbGVjdGlvbnMuSGFzaHRhYmxlBwAAAApMb2FkRmFjdG9yB1ZlcnNpb24IQ29tcGFyZXIQSGFzaENvZGVQcm92aWRlcghIYXNoU2l6ZQRLZXlzBlZhbHVlcwAAAwMABQULCBxTeXN0ZW0uQ29sbGVjdGlvbnMuSUNvbXBhcmVyJFN5c3RlbS5Db2xsZWN0aW9ucy5JSGFzaENvZGVQcm92aWRlcgjsUTg/DQAAAAoKEQAAAAkEAAAACQUAAAAQBAAAAAsAAAAGBgAAAA9Ob0Fubm91bmNlbWVudHMGBwAAAApGaWx0ZXJMaW5rBggAAAANaWRQcmVzRW5hYmxlZAYJAAAACW9wZW5fbWVudQYKAAAAClNlbGVjdGVkSUQGCwAAABBkdnRfcHJldnBhZ2VkYXRhBgwAAAARZHZ0X3N0YXJ0cG9zaXRpb24GDQAAABVPcGVuTWVudUtleUFjY2Vzc2libGUGDgAAABBkdnRfbmV4dHBhZ2VkYXRhBg8AAAATc2VsZWN0X2Rlc2VsZWN0X2FsbAYQAAAAFE5vQW5ub3VuY2VtZW50c0hvd1RvEAUAAAALAAAABhEAAABTVGhlcmUgYXJlIG5vIGl0ZW1zIHRvIHNob3cgaW4gdGhpcyB2aWV3IG9mIHRoZSAiU2hhcmVkIERvY3VtZW50cyIgZG9jdW1lbnQgbGlicmFyeS4GEgAAAAE/BhMAAAAgUHJlc2VuY2UgZW5hYmxlZCBmb3IgdGhpcyBjb2x1bW4GFAAAAAlPcGVuIE1lbnUGFQAAAAItMQYWAAAAUVBhZ2VkPVRSVUUmUGFnZWRQcmV2PVRSVUUmcF9BcHBsaWNhdGlvbj0mcF9BcHBzX3gwMDIwX0NvbnRlbnRfeDAwMjBfVHlwZT0mcF9JRD0yMQYXAAAAAAYYAAAALlVzZSBTSElGVCtFTlRFUiB0byBvcGVuIHRoZSBtZW51IChuZXcgd2luZG93KS4GGQAAAENQYWdlZD1UUlVFJnBfQXBwbGljYXRpb249JnBfQXBwc194MDAyMF9Db250ZW50X3gwMDIwX1R5cGU9JnBfSUQ9NDY2BhoAAAAcU2VsZWN0IG9yIGRlc2VsZWN0IGFsbCBpdGVtcwYbAAAAK1RvIGFkZCBhIG5ldyBpdGVtLCBjbGljayAiTmV3IiBvciAiVXBsb2FkIi4LHhBGaWx0ZXJPcGVyYXRpb25zMo0FAAEAAAD/////AQAAAAAAAAAEAQAAAJMCU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtNaWNyb3NvZnQuU2hhcmVQb2ludC5XZWJQYXJ0UGFnZXMuRmlsdGVyT3BlcmF0aW9uLCBNaWNyb3NvZnQuU2hhcmVQb2ludCwgVmVyc2lvbj0xNi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj03MWU5YmNlMTExZTk0MjljXV0DAAAAB1ZlcnNpb24IQ29tcGFyZXIISGFzaFNpemUAAwAIkgFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5HZW5lcmljRXF1YWxpdHlDb21wYXJlcmAxW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQgAAAAACQIAAAAAAAAABAIAAACSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAAAAAAseDF92aWV3Q291bnRlcmZkZBYCAgEPZBYCZg9kFgRmDxYGHgxGZWF0dXJlU2NvcGUFBFNpdGUeCExvY2F0aW9uBSFNaWNyb3NvZnQuU2hhcmVQb2ludC5TdGFuZGFyZE1lbnUeB0dyb3VwSWQFEFZpZXdTZWxlY3Rvck1lbnVkAgEPDxYCHglBY2Nlc3NLZXkFAVdkZAIFD2QWAgICD2QWBAIBD2QWAgIDD2QWAmYPZBYEAgMPZBYIAgEPFgYeE0NsaWVudE9uQ2xpY2tTY3JpcHQFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkeKENsaWVudE9uQ2xpY2tTY3JpcHRDb250YWluaW5nUHJlZml4ZWRVcmwFeUVuc3VyZVNjcmlwdEZ1bmMoJ3NoYXJpbmcuanMnLCAnRGlzcGxheVNoYXJlZFdpdGhEaWFsb2cnLCBmdW5jdGlvbiAoKSB7IERpc3BsYXlTaGFyZWRXaXRoRGlhbG9nKCdcdTAwMmZBcHBzMDBcdTAwMmYnKTsgfSkeGENsaWVudE9uQ2xpY2tOYXZpZ2F0ZVVybGRkAgUPFgIeB1Zpc2libGVoZAILDxYCHwpoZAISD2QWAmYPDxYGHhxQcmV2aW91c0F1dGhvcmluZ0l0ZW1WZXJzaW9uZR4aUHJldmlvdXNBdXRob3JpbmdJdGVtT3duZXJlHhxQcmV2aW91c0F1dGhvcmluZ0NvbnRyb2xNb2RlCymIAU1pY3Jvc29mdC5TaGFyZVBvaW50LldlYkNvbnRyb2xzLlNQQ29udHJvbE1vZGUsIE1pY3Jvc29mdC5TaGFyZVBvaW50LCBWZXJzaW9uPTE2LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTcxZTliY2UxMTFlOTQyOWMAZGQCBA8PFgIfBgUBL2RkAgMPZBYCAgEPZBYCAgEPZBYGAgEPDxYEHgRfIVNCAgIeCENzc0NsYXNzBRdtcy1wcm9tb3RlZEFjdGlvbkJ1dHRvbmRkAgMPZBYCZg8PFgQfDgICHw8FF21zLXByb21vdGVkQWN0aW9uQnV0dG9uZGQCBQ8PFgYfDwUXbXMtcHJvbW90ZWRBY3Rpb25CdXR0b24fDgICHwpoZGQCDw9kFgICAQ9kFgICAQ88KwAFAQAPFgIeFVBhcmVudExldmVsc0Rpc3BsYXllZGZkZAITD2QWAgIBD2QWBgIHD2QWAgIDDw8WAh8KaGRkAgkPZBYCAgEPFgIfCmhkAg0PDxYCHwpoZBYCAgEPZBYCZg9kFgICAw9kFgICBQ9kFgICAQ88KwAJAQAPFgQeDVBhdGhTZXBhcmF0b3IECB4NTmV2ZXJFeHBhbmRlZGdkZBgBBRdjdGwwMCRUb3BOYXZpZ2F0aW9uTWVudQ8PZAUUSG9tZVxBcHBzICYgUHJvZHVjdHNk6/NWePR/9haSnDnh5xBsQmpSqLbeQbAOX8D2AJFRRPw=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="06E2AF16" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONX" Value="{{$HIDDEN1.__SCROLLPOSITIONX}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__SCROLLPOSITIONY" Value="{{$HIDDEN1.__SCROLLPOSITIONY}}" RecordedValue="0" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTVALIDATION" Value="{{$HIDDEN1.__EVENTVALIDATION}}" RecordedValue="/wEdAAOnDuLZcyTScHCXtFvQoGjPLmXyYwA+OfFaG5A2lz8nCLUgFLpnKOjvBAU2tXnwD0zriyTNO723xWrpFLN4YR2TRgB4CjAi0s0j6AzkjzJTfQ==" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ctl44$ctl04" Value="Ribbon.Read" RecordedValue="Ribbon.Read" CorrelationBinding="{{FormPostParam55.ctl00$ctl44$ctl04}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Guid="502395b3-9a78-43ad-aff9-5771c12f1a89" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/fonts/shellicons.eot" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx?InitialTabId=Ribbon.Read&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="d606bd46-8bf9-43fb-8c4b-395bb629d1d6" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_api/search/searchcenterurl" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Accept" Value="application/json;odata=verbose" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx?InitialTabId=Ribbon.Read&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
    </Request>
    <Request Method="GET" Guid="9ddb1db6-c0e4-4035-8f42-d76dea08dec7" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx?InitialTabId=Ribbon.Read&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="79f2cd5f-9552-41bf-9dce-3c7199b10b41" Version="1.1" Url="https://sp.cordissolutions.com/_layouts/15/ScriptResx.ashx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx?InitialTabId=Ribbon.Read&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="culture" Value="en%2Dus" RecordedValue="en%2Dus" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="name" Value="SP%2EUI%2EPolicy%2EResources" RecordedValue="SP%2EUI%2EPolicy%2EResources" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="rev" Value="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" RecordedValue="m2Nvtm13DRgodCVi%2BsRukw%3D%3D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="POST" Guid="251bdb23-385e-4d94-992e-2717011ce653" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_layouts/15/inplview.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx?InitialTabId=Ribbon.Read&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="List" Value="%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D" RecordedValue="%7BED28192A-3B67-43D8-BA8A-DCCA3ACE7D0B%7D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="View" Value="%7BBFACA91F-93F2-4632-AB39-EEE92A5D06A2%7D" RecordedValue="%7BBFACA91F-93F2-4632-AB39-EEE92A5D06A2%7D" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ViewCount" Value="0" RecordedValue="0" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsXslView" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="IsCSR" Value="TRUE" RecordedValue="TRUE" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="ListViewPageUrl" Value="https%3A%2F%2Fsp.cordissolutions.com%2FApps00%2FShared%2520Documents%2FForms%2Fdetail%2520list%2520wo%2520folders%252001.aspx" RecordedValue="https%3A%2F%2Fsp.cordissolutions.com%2FApps00%2FShared%2520Documents%2FForms%2Fdetail%2520list%2520wo%2520folders%252001.aspx" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="SortField" Value="Modified" RecordedValue="Modified" CorrelationBinding="{{QueryStringParam887.SortField}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="SortDir" Value="Desc" RecordedValue="Desc" CorrelationBinding="{{QueryStringParam888.SortDir}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody />
    </Request>
    <Request Method="GET" Guid="1ad7d3d3-d472-4a89-a87c-c0bd0c48d461" Version="1.1" Url="https://sp.cordissolutions.com/Apps00/_api/search/searchcenterurl" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Accept" Value="application/json;odata=verbose" />
        <Header Name="Referer" Value="https://sp.cordissolutions.com/Apps00/Shared%20Documents/Forms/detail%20list%20wo%20folders%2001.aspx?InitialTabId=Ribbon.Read&amp;VisibilityContext=WSSTabPersistence" />
      </Headers>
    </Request>
  </Items>
  <ValidationRules>
    <ValidationRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateResponseUrl, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" DisplayName="Response URL" Description="Validates that the response URL after redirects are followed is the same as the recorded response URL.  QueryString parameters are ignored." Level="Low" ExectuionOrder="BeforeDependents" />
    <ValidationRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleResponseTimeGoal, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" DisplayName="Response Time Goal" Description="Validates that the response time for the request is less than or equal to the response time goal as specified on the request.  Response time goals of zero will be ignored." Level="Low" ExectuionOrder="AfterDependents">
      <RuleParameters>
        <RuleParameter Name="Tolerance" Value="0" />
      </RuleParameters>
    </ValidationRule>
  </ValidationRules>
</WebTest>">
      <Execution id="3062ce5c-1f41-46ed-be9f-5170c297b5a3" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="72e94015-d169-4fde-a50c-c971e427402e" executionId="3062ce5c-1f41-46ed-be9f-5170c297b5a3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="3062ce5c-1f41-46ed-be9f-5170c297b5a3" testId="72e94015-d169-4fde-a50c-c971e427402e" testName="WebTest1" computerName="CS02" duration="00:00:23.9770027" startTime="2018-06-13T13:25:47.2786873+01:00" endTime="2018-06-13T13:26:21.9359720+01:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3062ce5c-1f41-46ed-be9f-5170c297b5a3">
      <Output>
        <ErrorInfo>
          <Message>10 primary requests, 2 dependant requests and 0 conditional rules failed</Message>
        </ErrorInfo>
      </Output>
      <ResultFiles>
        <ResultFile path="WebTest1.webtestResult" />
      </ResultFiles>
      <TestSettings name="Local" id="879f9405-1edd-43f5-90cf-576a7ef84ea2">
        <Description>These are default test settings for a local test run.</Description>
        <Deployment runDeploymentRoot="SPAdmin_CS02 2018-06-13 13_25_46">
          <DeploymentItem filename="SPLoadTesting\File for the version 3.xlsx" />
          <DeploymentItem filename="SPLoadTesting\File for the version 1.xlsx" />
          <DeploymentItem filename="SPLoadTesting\File for the version 2.xlsx" />
        </Deployment>
        <Execution hostProcessPlatform="MSIL">
          <TestTypeSpecific>
            <UnitTestRunConfig testTypeId="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b">
              <AssemblyResolution>
                <TestDirectory useLoadContext="true" />
              </AssemblyResolution>
            </UnitTestRunConfig>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="LocalMachineDefaultRole">
          </AgentRule>
        </Execution>
        <Properties>
          <Property name="TestSettingsUIType" value="LoadTest" />
        </Properties>
      </TestSettings>
      <WebTestResultFilePath>SPAdmin_CS02 2018-06-13 13_25_46\In\3062ce5c-1f41-46ed-be9f-5170c297b5a3\WebTest1.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>